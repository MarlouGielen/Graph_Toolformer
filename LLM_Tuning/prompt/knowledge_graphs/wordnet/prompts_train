Input: According to the WordNet knowledge graph, the relation between entity #state.v.01 and entity #add.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #state.v.01 and entity #add.v.02 is [GR(GL("wordnet"), "transe:relation", entity#state.v.01, entity#add.v.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #beget.v.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #beget.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#beget.v.01, relation#_hypernym)-->r]. Reasoning Result: make.v.03.
Input: According to the WordNet knowledge graph, from entity #brew.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #brew.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#brew.n.01, relation#_hyponym)-->r]. Reasoning Result: cassiri.n.01.
Input: According to the WordNet knowledge graph, from entity #bathroom.n.01, via relation #_has_part, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #bathroom.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#bathroom.n.01, relation#_has_part)-->r]. Reasoning Result: washbasin.n.02.
Input: According to the WordNet knowledge graph, from entity #class.n.07, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #class.n.07, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#class.n.07, relation#_hyponym)-->r]. Reasoning Result: malacostraca.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #symptom.n.01 and entity #dyspnea.n.01? Output: According to the WordNet knowledge graph, the relation between entity #symptom.n.01 and entity #dyspnea.n.01 is [GR(GL("wordnet"), "transe:relation", entity#symptom.n.01, entity#dyspnea.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #necrosis.n.01 and entity #death.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #necrosis.n.01 and entity #death.n.02 is [GR(GL("wordnet"), "transe:relation", entity#necrosis.n.01, entity#death.n.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #faroe_islands.n.02 and entity #atlantic.n.01? Output: According to the WordNet knowledge graph, the relation between entity #faroe_islands.n.02 and entity #atlantic.n.01 is [GR(GL("wordnet"), "transe:relation", entity#faroe_islands.n.02, entity#atlantic.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, from entity #everglades.n.01, via relation #_instance_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #everglades.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#everglades.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: swamp.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity#shiraz.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #shiraz.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#shiraz.n.01)-->r]. Reasoning Result: iran.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity#diffuser.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #diffuser.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#diffuser.n.02)-->r]. Reasoning Result: lamp.n.02.
Input: According to the WordNet knowledge graph, from entity #tilefish.n.02, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #tilefish.n.02, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tilefish.n.02, relation#_member_holonym)-->r]. Reasoning Result: lopholatilus.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #nonproliferation_center.n.01 and entity #central_intelligence_agency.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #nonproliferation_center.n.01 and entity #central_intelligence_agency.n.01 is [GR(GL("wordnet"), "transe:relation", entity#nonproliferation_center.n.01, entity#central_intelligence_agency.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, what is the relation between entity #aculeus.n.01 and entity #spine.n.03? Output: According to the WordNet knowledge graph, the relation between entity #aculeus.n.01 and entity #spine.n.03 is [GR(GL("wordnet"), "transe:relation", entity#aculeus.n.01, entity#spine.n.03)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#softener.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #softener.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#softener.n.01)-->r]. Reasoning Result: soften.v.06.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#summation.n.04 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #summation.n.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#summation.n.04)-->r]. Reasoning Result: arithmetic_operation.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #ophioglossum.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #ophioglossum.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#ophioglossum.n.01)-->r]. Reasoning Result: fern_genus.n.01.
Input: According to the WordNet knowledge graph, from entity #slickness.n.03, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #slickness.n.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#slickness.n.03, relation#_derivationally_related_form)-->r]. Reasoning Result: slick.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#sign.v.05 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #sign.v.05 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#sign.v.05)-->r]. Reasoning Result: sign_language.n.01.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_usage_of, we can obtain entity #colloquialism.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_synset_domain_usage_of, we can obtain entity #colloquialism.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_usage_of, entity#colloquialism.n.01)-->r]. Reasoning Result: give_it_a_whirl.v.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #ruminant.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #ruminant.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#ruminant.n.01)-->r]. Reasoning Result: abomasum.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #liquefy.v.02 and entity #physics.n.01? Output: According to the WordNet knowledge graph, the relation between entity #liquefy.v.02 and entity #physics.n.01 is [GR(GL("wordnet"), "transe:relation", entity#liquefy.v.02, entity#physics.n.01)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, what is the relation between entity #comb.v.03 and entity #tease.v.09? Output: According to the WordNet knowledge graph, the relation between entity #comb.v.03 and entity #tease.v.09 is [GR(GL("wordnet"), "transe:relation", entity#comb.v.03, entity#tease.v.09)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #american_arborvitae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #american_arborvitae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#american_arborvitae.n.01)-->r]. Reasoning Result: arborvitae.n.01.
Input: According to the WordNet knowledge graph, from entity #antirrhinum.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #antirrhinum.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#antirrhinum.n.01, relation#_hypernym)-->r]. Reasoning Result: asterid_dicot_genus.n.01.
Input: According to the WordNet knowledge graph, from entity #ageratina.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #ageratina.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ageratina.n.01, relation#_hypernym)-->r]. Reasoning Result: asterid_dicot_genus.n.01.
Input: According to the WordNet knowledge graph, from entity #unmindfulness.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #unmindfulness.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#unmindfulness.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: unmindful.a.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #peninsula.n.01 and entity #lower_california.n.01? Output: According to the WordNet knowledge graph, the relation between entity #peninsula.n.01 and entity #lower_california.n.01 is [GR(GL("wordnet"), "transe:relation", entity#peninsula.n.01, entity#lower_california.n.01)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #joint.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #joint.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#joint.v.02)-->r]. Reasoning Result: joint.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #scyliorhinidae.n.01 and entity #fish_family.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #scyliorhinidae.n.01 and entity #fish_family.n.01 is [GR(GL("wordnet"), "transe:relation", entity#scyliorhinidae.n.01, entity#fish_family.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #miniate.v.02 and entity #art.n.02? Output: According to the WordNet knowledge graph, the relation between entity #miniate.v.02 and entity #art.n.02 is [GR(GL("wordnet"), "transe:relation", entity#miniate.v.02, entity#art.n.02)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, from entity #physics.n.01, via relation #_member_of_domain_topic, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #physics.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#physics.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: transmutation.n.03.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #go_back.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #go_back.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#go_back.v.01)-->r]. Reasoning Result: originate.v.02.
Input: According to the WordNet knowledge graph, via relation #_verb_group, we can obtain entity #find.v.05 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_verb_group, we can obtain entity #find.v.05 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_verb_group, entity#find.v.05)-->r]. Reasoning Result: rule.v.04.
Input: According to the WordNet knowledge graph, from entity #motorbike.v.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #motorbike.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#motorbike.v.01, relation#_hypernym)-->r]. Reasoning Result: ride.v.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #batholith.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #batholith.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#batholith.n.01)-->r]. Reasoning Result: granite.n.01.
Input: According to the WordNet knowledge graph, from entity #epipactis.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #epipactis.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#epipactis.n.01, relation#_hypernym)-->r]. Reasoning Result: monocot_genus.n.01.
Input: According to the WordNet knowledge graph, from entity #sibilation.n.02, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sibilation.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sibilation.n.02, relation#_hypernym)-->r]. Reasoning Result: pronunciation.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #tortilla.n.01 and entity #mexico.n.01? Output: According to the WordNet knowledge graph, the relation between entity #tortilla.n.01 and entity #mexico.n.01 is [GR(GL("wordnet"), "transe:relation", entity#tortilla.n.01, entity#mexico.n.01)-->r]. Reasoning Result: _synset_domain_region_of.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #lynchburg.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #lynchburg.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#lynchburg.n.01)-->r]. Reasoning Result: virginia.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #animal.n.01 and entity #migrator.n.02? Output: According to the WordNet knowledge graph, the relation between entity #animal.n.01 and entity #migrator.n.02 is [GR(GL("wordnet"), "transe:relation", entity#animal.n.01, entity#migrator.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #polymerization.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #polymerization.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#polymerization.n.01)-->r]. Reasoning Result: chemical_process.n.01.
Input: According to the WordNet knowledge graph, from entity #cyst.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #cyst.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cyst.n.01, relation#_hyponym)-->r]. Reasoning Result: sebaceous_cyst.n.01.
Input: According to the WordNet knowledge graph, from entity #recompense.n.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #recompense.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#recompense.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: compensate.v.02.
Input: According to the WordNet knowledge graph, from entity #blow.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #blow.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#blow.n.02, relation#_hyponym)-->r]. Reasoning Result: slap.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#temporal_arrangement.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #temporal_arrangement.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#temporal_arrangement.n.01)-->r]. Reasoning Result: sequence.n.02.
Input: According to the WordNet knowledge graph, from entity #minimum.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #minimum.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#minimum.n.01, relation#_hypernym)-->r]. Reasoning Result: small_indefinite_quantity.n.01.
Input: According to the WordNet knowledge graph, from entity #mountain_peak.n.01, via relation #_instance_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #mountain_peak.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mountain_peak.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: kamet.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity#illustrate.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #illustrate.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#illustrate.v.02)-->r]. Reasoning Result: art.n.02.
Input: According to the WordNet knowledge graph, from entity #inhabitant.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #inhabitant.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#inhabitant.n.01, relation#_hyponym)-->r]. Reasoning Result: asian.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#mackerel_shark.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #mackerel_shark.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#mackerel_shark.n.01)-->r]. Reasoning Result: lamnidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #polypropenonitrile.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #polypropenonitrile.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#polypropenonitrile.n.01)-->r]. Reasoning Result: acrylic.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #epimedium.n.01 and entity #berberidaceae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #epimedium.n.01 and entity #berberidaceae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#epimedium.n.01, entity#berberidaceae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #profile.v.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #profile.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#profile.v.01, relation#_hypernym)-->r]. Reasoning Result: write.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #genus_feijoa.n.01 and entity #feijoa.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #genus_feijoa.n.01 and entity #feijoa.n.01 is [GR(GL("wordnet"), "transe:relation", entity#genus_feijoa.n.01, entity#feijoa.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, what is the relation between entity #ardor.n.01 and entity #eagerness.n.01? Output: According to the WordNet knowledge graph, the relation between entity #ardor.n.01 and entity #eagerness.n.01 is [GR(GL("wordnet"), "transe:relation", entity#ardor.n.01, entity#eagerness.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #symplocaceae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #symplocaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#symplocaceae.n.01)-->r]. Reasoning Result: dicot_family.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #carpathians.n.01 and entity #range.n.04? Output: According to the WordNet knowledge graph, the relation between entity #carpathians.n.01 and entity #range.n.04 is [GR(GL("wordnet"), "transe:relation", entity#carpathians.n.01, entity#range.n.04)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, from entity #complicate.v.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #complicate.v.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#complicate.v.02, relation#_hypernym)-->r]. Reasoning Result: change.v.01.
Input: According to the WordNet knowledge graph, from entity #persistent.a.03, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #persistent.a.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#persistent.a.03, relation#_derivationally_related_form)-->r]. Reasoning Result: persist.v.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #foil.n.01 and entity #aluminum_foil.n.01? Output: According to the WordNet knowledge graph, the relation between entity #foil.n.01 and entity #aluminum_foil.n.01 is [GR(GL("wordnet"), "transe:relation", entity#foil.n.01, entity#aluminum_foil.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #develop.v.03, via relation #_verb_group, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #develop.v.03, via relation #_verb_group, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#develop.v.03, relation#_verb_group)-->r]. Reasoning Result: develop.v.13.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#device.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #device.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#device.n.01)-->r]. Reasoning Result: damper.n.02.
Input: According to the WordNet knowledge graph, from entity #introspectiveness.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #introspectiveness.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#introspectiveness.n.01, relation#_hypernym)-->r]. Reasoning Result: thoughtfulness.n.03.
Input: According to the WordNet knowledge graph, the relation between entity #war.v.01 and entity #warrior.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #war.v.01 and entity #warrior.n.01 is [GR(GL("wordnet"), "transe:relation", entity#war.v.01, entity#warrior.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #stumble.v.04 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #stumble.v.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#stumble.v.04)-->r]. Reasoning Result: trip.n.07.
Input: According to the WordNet knowledge graph, from entity #taste.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #taste.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#taste.n.01, relation#_hyponym)-->r]. Reasoning Result: salt.n.04.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#harpullia.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #harpullia.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#harpullia.n.01)-->r]. Reasoning Result: tulipwood_tree.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #hydrozoan.n.01 and entity #siphonophore.n.01? Output: According to the WordNet knowledge graph, the relation between entity #hydrozoan.n.01 and entity #siphonophore.n.01 is [GR(GL("wordnet"), "transe:relation", entity#hydrozoan.n.01, entity#siphonophore.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #marker.n.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #marker.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#marker.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: distinguish.v.03.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#excursion.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #excursion.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#excursion.n.01)-->r]. Reasoning Result: junketeer.v.01.
Input: According to the WordNet knowledge graph, from entity #teaching_method.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #teaching_method.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#teaching_method.n.01, relation#_hypernym)-->r]. Reasoning Result: method.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #cloud.n.01 and entity #nebula.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #cloud.n.01 and entity #nebula.n.03 is [GR(GL("wordnet"), "transe:relation", entity#cloud.n.01, entity#nebula.n.03)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #owner.n.01 and entity #possession.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #owner.n.01 and entity #possession.n.01 is [GR(GL("wordnet"), "transe:relation", entity#owner.n.01, entity#possession.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #catenate.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #catenate.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#catenate.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: chain.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #resinate.v.01 and entity #resin.n.01? Output: According to the WordNet knowledge graph, the relation between entity #resinate.v.01 and entity #resin.n.01 is [GR(GL("wordnet"), "transe:relation", entity#resinate.v.01, entity#resin.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #american_football.n.01, via relation #_member_of_domain_topic, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #american_football.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#american_football.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: draw.n.07.
Input: According to the WordNet knowledge graph, the relation between entity #decorate.v.01 and entity #braid.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #decorate.v.01 and entity #braid.v.02 is [GR(GL("wordnet"), "transe:relation", entity#decorate.v.01, entity#braid.v.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #sour_cherry.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sour_cherry.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sour_cherry.n.01, relation#_hyponym)-->r]. Reasoning Result: marasca.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #cyclone.n.01 and entity #meteorology.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #cyclone.n.01 and entity #meteorology.n.02 is [GR(GL("wordnet"), "transe:relation", entity#cyclone.n.01, entity#meteorology.n.02)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, from entity #steller's_sea_cow.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #steller's_sea_cow.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#steller's_sea_cow.n.01, relation#_hypernym)-->r]. Reasoning Result: sea_cow.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#wetting.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #wetting.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#wetting.n.01)-->r]. Reasoning Result: moistening.n.01.
Input: According to the WordNet knowledge graph, from entity #national_guard.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #national_guard.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#national_guard.n.01, relation#_has_part)-->r]. Reasoning Result: national_guard_bureau.n.01.
Input: According to the WordNet knowledge graph, from entity #class.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #class.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#class.n.01, relation#_hyponym)-->r]. Reasoning Result: stamp.n.02.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #montia.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #montia.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#montia.n.01)-->r]. Reasoning Result: indian_lettuce.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity#bar.n.05 from what entity? Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #bar.n.05 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#bar.n.05)-->r]. Reasoning Result: goal.n.03.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#depressant.a.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #depressant.a.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#depressant.a.01)-->r]. Reasoning Result: sedative.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #candida_albicans.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #candida_albicans.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#candida_albicans.n.01)-->r]. Reasoning Result: genus_candida.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #fish_genus.n.01 and entity #oligoplites.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #fish_genus.n.01 and entity #oligoplites.n.01 is [GR(GL("wordnet"), "transe:relation", entity#fish_genus.n.01, entity#oligoplites.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #internal_revenue_service.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #internal_revenue_service.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#internal_revenue_service.n.01, relation#_hypernym)-->r]. Reasoning Result: agency.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #current.n.02 and entity #eddy.n.02? Output: According to the WordNet knowledge graph, the relation between entity #current.n.02 and entity #eddy.n.02 is [GR(GL("wordnet"), "transe:relation", entity#current.n.02, entity#eddy.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #anarchist.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #anarchist.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#anarchist.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: nihilism.n.03.
Input: According to the WordNet knowledge graph, from entity #scratcher.n.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #scratcher.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#scratcher.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: rub.v.03.
Input: According to the WordNet knowledge graph, the relation between entity #erupt.v.05 and entity #explode.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #erupt.v.05 and entity #explode.v.02 is [GR(GL("wordnet"), "transe:relation", entity#erupt.v.05, entity#explode.v.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #agency.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #agency.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#agency.n.01, relation#_hyponym)-->r]. Reasoning Result: casualty_care_research_center.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #open_order.n.01 and entity #military.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #open_order.n.01 and entity #military.n.01 is [GR(GL("wordnet"), "transe:relation", entity#open_order.n.01, entity#military.n.01)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, from entity #perspiration.n.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #perspiration.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#perspiration.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: diaphoretic.a.01.
Input: According to the WordNet knowledge graph, from entity #draw.n.07, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #draw.n.07, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#draw.n.07, relation#_synset_domain_topic_of)-->r]. Reasoning Result: american_football.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #inability.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #inability.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#inability.n.02)-->r]. Reasoning Result: insensitivity.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#motorbike.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #motorbike.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#motorbike.v.01)-->r]. Reasoning Result: cycling.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #mellowness.n.05 and entity #affability.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #mellowness.n.05 and entity #affability.n.01 is [GR(GL("wordnet"), "transe:relation", entity#mellowness.n.05, entity#affability.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#colligation.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #colligation.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#colligation.n.02)-->r]. Reasoning Result: generalization.n.01.
Input: According to the WordNet knowledge graph, from entity #renunciation.n.04, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #renunciation.n.04, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#renunciation.n.04, relation#_derivationally_related_form)-->r]. Reasoning Result: abjure.v.01.
Input: According to the WordNet knowledge graph, from entity #purge.v.04, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #purge.v.04, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#purge.v.04, relation#_hypernym)-->r]. Reasoning Result: purify.v.01.
Input: According to the WordNet knowledge graph, from entity #authenticity.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #authenticity.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#authenticity.n.01, relation#_hypernym)-->r]. Reasoning Result: credibility.n.01.
Input: According to the WordNet knowledge graph, from entity #problem.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #problem.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#problem.n.02, relation#_hyponym)-->r]. Reasoning Result: puzzle.n.01.
Input: According to the WordNet knowledge graph, from entity #pipit.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #pipit.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pipit.n.01, relation#_hypernym)-->r]. Reasoning Result: oscine.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #amphibian.n.03 and entity #salamander.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #amphibian.n.03 and entity #salamander.n.01 is [GR(GL("wordnet"), "transe:relation", entity#amphibian.n.03, entity#salamander.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#present.a.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #present.a.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#present.a.02)-->r]. Reasoning Result: present.n.02.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#determiner.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #determiner.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#determiner.n.02)-->r]. Reasoning Result: specify.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #jobber.n.01 and entity #wholesale.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #jobber.n.01 and entity #wholesale.v.01 is [GR(GL("wordnet"), "transe:relation", entity#jobber.n.01, entity#wholesale.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #euphagus.n.01 and entity #icteridae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #euphagus.n.01 and entity #icteridae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#euphagus.n.01, entity#icteridae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#partridge.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #partridge.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#partridge.n.03)-->r]. Reasoning Result: hungarian_partridge.n.01.
Input: According to the WordNet knowledge graph, from entity #pea.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pea.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pea.n.01, relation#_hyponym)-->r]. Reasoning Result: green_pea.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#mniaceae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #mniaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#mniaceae.n.01)-->r]. Reasoning Result: eubryales.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #marker.n.01 and entity #mark.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #marker.n.01 and entity #mark.v.02 is [GR(GL("wordnet"), "transe:relation", entity#marker.n.01, entity#mark.v.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #summary_judgment.n.01, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #summary_judgment.n.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#summary_judgment.n.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: law.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #insectivora.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #insectivora.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#insectivora.n.01)-->r]. Reasoning Result: erinaceidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#advancement.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #advancement.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#advancement.n.03)-->r]. Reasoning Result: forwarding.n.02.
Input: According to the WordNet knowledge graph, from entity #pterosauria.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pterosauria.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pterosauria.n.01, relation#_member_holonym)-->r]. Reasoning Result: archosauria.n.01.
Input: According to the WordNet knowledge graph, from entity #leo_iii.n.01, via relation #_instance_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #leo_iii.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#leo_iii.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: pope.n.01.
Input: According to the WordNet knowledge graph, from entity #conciliator.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #conciliator.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#conciliator.n.01, relation#_hypernym)-->r]. Reasoning Result: mediator.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#rogue_state.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #rogue_state.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#rogue_state.n.01)-->r]. Reasoning Result: state.n.04.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#procyonidae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #procyonidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#procyonidae.n.01)-->r]. Reasoning Result: carnivora.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #mullet.n.01 and entity #mullet.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #mullet.n.01 and entity #mullet.n.02 is [GR(GL("wordnet"), "transe:relation", entity#mullet.n.01, entity#mullet.n.02)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#communicate.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #communicate.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#communicate.v.02)-->r]. Reasoning Result: aphorize.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#veil.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #veil.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#veil.v.01)-->r]. Reasoning Result: head_covering.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #king_of_england.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #king_of_england.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#king_of_england.n.01)-->r]. Reasoning Result: john.n.02.
Input: According to the WordNet knowledge graph, from entity #enamel.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #enamel.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#enamel.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: enamel.n.04.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #biology.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #biology.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#biology.n.01)-->r]. Reasoning Result: genetics.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #phalaris.n.01 and entity #reed_canary_grass.n.01? Output: According to the WordNet knowledge graph, the relation between entity #phalaris.n.01 and entity #reed_canary_grass.n.01 is [GR(GL("wordnet"), "transe:relation", entity#phalaris.n.01, entity#reed_canary_grass.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, the relation between entity #cellulose_tape.n.01 and entity #adhesive_tape.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #cellulose_tape.n.01 and entity #adhesive_tape.n.01 is [GR(GL("wordnet"), "transe:relation", entity#cellulose_tape.n.01, entity#adhesive_tape.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #whisperer.n.01 and entity #whisper.v.01? Output: According to the WordNet knowledge graph, the relation between entity #whisperer.n.01 and entity #whisper.v.01 is [GR(GL("wordnet"), "transe:relation", entity#whisperer.n.01, entity#whisper.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #relax.v.02 and entity #relaxation.n.01? Output: According to the WordNet knowledge graph, the relation between entity #relax.v.02 and entity #relaxation.n.01 is [GR(GL("wordnet"), "transe:relation", entity#relax.v.02, entity#relaxation.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #intellectual.n.01 and entity #anomalist.n.01? Output: According to the WordNet knowledge graph, the relation between entity #intellectual.n.01 and entity #anomalist.n.01 is [GR(GL("wordnet"), "transe:relation", entity#intellectual.n.01, entity#anomalist.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #endoscopy.n.01 and entity #examination.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #endoscopy.n.01 and entity #examination.n.01 is [GR(GL("wordnet"), "transe:relation", entity#endoscopy.n.01, entity#examination.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #balkan_wars.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #balkan_wars.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#balkan_wars.n.01)-->r]. Reasoning Result: war.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #gambia.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #gambia.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#gambia.n.01)-->r]. Reasoning Result: african_country.n.01.
Input: According to the WordNet knowledge graph, from entity #distortion.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #distortion.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#distortion.n.01, relation#_hypernym)-->r]. Reasoning Result: damage.n.01.
Input: According to the WordNet knowledge graph, from entity #natural_process.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #natural_process.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#natural_process.n.01, relation#_hyponym)-->r]. Reasoning Result: demagnetization.n.01.
Input: According to the WordNet knowledge graph, from entity #shape.v.02, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #shape.v.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#shape.v.02, relation#_hyponym)-->r]. Reasoning Result: sculpt.v.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #orrisroot.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #orrisroot.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#orrisroot.n.01)-->r]. Reasoning Result: root.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity#respiratory_center.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #respiratory_center.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#respiratory_center.n.01)-->r]. Reasoning Result: pons.n.02.
Input: According to the WordNet knowledge graph, from entity #setting.n.05, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #setting.n.05, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#setting.n.05, relation#_derivationally_related_form)-->r]. Reasoning Result: put.v.01.
Input: According to the WordNet knowledge graph, from entity #turnip.n.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #turnip.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#turnip.n.02, relation#_hypernym)-->r]. Reasoning Result: root_vegetable.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #singapore.n.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #singapore.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#singapore.n.03)-->r]. Reasoning Result: island.n.01.
Input: According to the WordNet knowledge graph, from entity #michigan.n.01, via relation #_instance_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #michigan.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#michigan.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: american_state.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cuisine.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cuisine.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#cuisine.n.01)-->r]. Reasoning Result: cooking.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #frasera.n.01 and entity #gentianaceae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #frasera.n.01 and entity #gentianaceae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#frasera.n.01, entity#gentianaceae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #military.n.01, via relation #_member_of_domain_topic, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #military.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#military.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: army_attache.n.01.
Input: According to the WordNet knowledge graph, from entity #breed.v.04, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #breed.v.04, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#breed.v.04, relation#_derivationally_related_form)-->r]. Reasoning Result: generation.n.07.
Input: According to the WordNet knowledge graph, from entity #calculator.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #calculator.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#calculator.n.02, relation#_hyponym)-->r]. Reasoning Result: adder.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #crossover.n.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #crossover.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#crossover.n.03)-->r]. Reasoning Result: borrowing.n.01.
Input: According to the WordNet knowledge graph, from entity #test.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #test.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#test.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: testing.n.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#seaport.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #seaport.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#seaport.n.01)-->r]. Reasoning Result: anchorage.n.04.
Input: According to the WordNet knowledge graph, the relation between entity #brainstem.n.01 and entity #medulla_oblongata.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #brainstem.n.01 and entity #medulla_oblongata.n.01 is [GR(GL("wordnet"), "transe:relation", entity#brainstem.n.01, entity#medulla_oblongata.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, the relation between entity #status.n.01 and entity #holy_order.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #status.n.01 and entity #holy_order.n.01 is [GR(GL("wordnet"), "transe:relation", entity#status.n.01, entity#holy_order.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#dispenser.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #dispenser.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#dispenser.n.02)-->r]. Reasoning Result: distribute.v.01.
Input: According to the WordNet knowledge graph, from entity #text_file.n.01, via relation #_synset_domain_topic_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #text_file.n.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#text_file.n.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: computer_science.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #prodigal.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #prodigal.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#prodigal.n.01)-->r]. Reasoning Result: consumer.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #rotary_actuator.n.01 and entity #actuator.n.01? Output: According to the WordNet knowledge graph, the relation between entity #rotary_actuator.n.01 and entity #actuator.n.01 is [GR(GL("wordnet"), "transe:relation", entity#rotary_actuator.n.01, entity#actuator.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #solar_system.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #solar_system.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#solar_system.n.01, relation#_part_of)-->r]. Reasoning Result: heliosphere.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #ghanaian.a.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #ghanaian.a.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#ghanaian.a.01)-->r]. Reasoning Result: ghanian.n.01.
Input: According to the WordNet knowledge graph, from entity #soapberry.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #soapberry.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#soapberry.n.01, relation#_hyponym)-->r]. Reasoning Result: china_tree.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #inversion.n.09 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #inversion.n.09 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#inversion.n.09)-->r]. Reasoning Result: evert.v.01.
Input: According to the WordNet knowledge graph, from entity #intensity.n.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #intensity.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#intensity.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: intense.a.01.
Input: According to the WordNet knowledge graph, the relation between entity #abhor.v.01 and entity #abhorrence.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #abhor.v.01 and entity #abhorrence.n.01 is [GR(GL("wordnet"), "transe:relation", entity#abhor.v.01, entity#abhorrence.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #argentina.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #argentina.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#argentina.n.01, relation#_has_part)-->r]. Reasoning Result: pampas.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #chute.n.02 and entity #skid.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #chute.n.02 and entity #skid.n.01 is [GR(GL("wordnet"), "transe:relation", entity#chute.n.02, entity#skid.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#justification.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #justification.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#justification.n.03)-->r]. Reasoning Result: apologize.v.02.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #punctuation.n.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #punctuation.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#punctuation.n.03)-->r]. Reasoning Result: punctuate.v.01.
Input: According to the WordNet knowledge graph, from entity #noise.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #noise.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#noise.n.01, relation#_hyponym)-->r]. Reasoning Result: bang.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #chemistry.n.01 and entity #desorb.v.01? Output: According to the WordNet knowledge graph, the relation between entity #chemistry.n.01 and entity #desorb.v.01 is [GR(GL("wordnet"), "transe:relation", entity#chemistry.n.01, entity#desorb.v.01)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, the relation between entity #noncommissioned_officer.n.01 and entity #chief_petty_officer.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #noncommissioned_officer.n.01 and entity #chief_petty_officer.n.01 is [GR(GL("wordnet"), "transe:relation", entity#noncommissioned_officer.n.01, entity#chief_petty_officer.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #intuit.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #intuit.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#intuit.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: intuition.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #restrict.v.02 and entity #limitation.n.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #restrict.v.02 and entity #limitation.n.05 is [GR(GL("wordnet"), "transe:relation", entity#restrict.v.02, entity#limitation.n.05)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #chew.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #chew.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#chew.v.01)-->r]. Reasoning Result: chew.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#take_water.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #take_water.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#take_water.v.01)-->r]. Reasoning Result: enter.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #military.n.01 and entity #garrison.n.03? Output: According to the WordNet knowledge graph, the relation between entity #military.n.01 and entity #garrison.n.03 is [GR(GL("wordnet"), "transe:relation", entity#military.n.01, entity#garrison.n.03)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, via relation #_verb_group, we can obtain entity #conduct.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_verb_group, we can obtain entity #conduct.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_verb_group, entity#conduct.v.02)-->r]. Reasoning Result: conduct.v.06.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#ease_up.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #ease_up.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#ease_up.v.02)-->r]. Reasoning Result: decrease.v.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #pedestrian_crossing.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #pedestrian_crossing.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#pedestrian_crossing.n.01)-->r]. Reasoning Result: crossing.n.05.
Input: According to the WordNet knowledge graph, what is the relation between entity #scutigerella.n.01 and entity #arthropod_genus.n.01? Output: According to the WordNet knowledge graph, the relation between entity #scutigerella.n.01 and entity #arthropod_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#scutigerella.n.01, entity#arthropod_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #look.v.01 and entity #gaze.v.01? Output: According to the WordNet knowledge graph, the relation between entity #look.v.01 and entity #gaze.v.01 is [GR(GL("wordnet"), "transe:relation", entity#look.v.01, entity#gaze.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #georgia.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #georgia.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#georgia.n.01)-->r]. Reasoning Result: savannah.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#populate.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #populate.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#populate.v.01)-->r]. Reasoning Result: people.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #private_detective.n.01 and entity #hotel_detective.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #private_detective.n.01 and entity #hotel_detective.n.01 is [GR(GL("wordnet"), "transe:relation", entity#private_detective.n.01, entity#hotel_detective.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #hardening.n.02 and entity #solidify.v.02? Output: According to the WordNet knowledge graph, the relation between entity #hardening.n.02 and entity #solidify.v.02 is [GR(GL("wordnet"), "transe:relation", entity#hardening.n.02, entity#solidify.v.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #exclude.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #exclude.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#exclude.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: omission.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #line_of_battle.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #line_of_battle.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#line_of_battle.n.01)-->r]. Reasoning Result: line.n.07.
Input: According to the WordNet knowledge graph, what is the relation between entity #guard.n.06 and entity #bodyguard.n.02? Output: According to the WordNet knowledge graph, the relation between entity #guard.n.06 and entity #bodyguard.n.02 is [GR(GL("wordnet"), "transe:relation", entity#guard.n.06, entity#bodyguard.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #covering.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #covering.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#covering.n.02)-->r]. Reasoning Result: floor_cover.n.01.
Input: According to the WordNet knowledge graph, from entity #inundate.v.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #inundate.v.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#inundate.v.02, relation#_derivationally_related_form)-->r]. Reasoning Result: submersible.a.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #overstate.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #overstate.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#overstate.v.01)-->r]. Reasoning Result: misinform.v.01.
Input: According to the WordNet knowledge graph, from entity #church_father.n.01, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #church_father.n.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#church_father.n.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: christianity.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#preferment.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #preferment.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#preferment.n.01)-->r]. Reasoning Result: prefer.v.03.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#misinterpretation.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #misinterpretation.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#misinterpretation.n.01)-->r]. Reasoning Result: misconstrual.n.01.
Input: According to the WordNet knowledge graph, from entity #connect.v.06, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #connect.v.06, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#connect.v.06, relation#_derivationally_related_form)-->r]. Reasoning Result: joining.n.01.
Input: According to the WordNet knowledge graph, from entity #exploit.v.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #exploit.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#exploit.v.01, relation#_hypernym)-->r]. Reasoning Result: use.v.01.
Input: According to the WordNet knowledge graph, from entity #harmonious.a.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #harmonious.a.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#harmonious.a.01, relation#_derivationally_related_form)-->r]. Reasoning Result: harmony.n.02.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#anatidae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #anatidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#anatidae.n.01)-->r]. Reasoning Result: aythya.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #debate.v.01 and entity #debater.n.01? Output: According to the WordNet knowledge graph, the relation between entity #debate.v.01 and entity #debater.n.01 is [GR(GL("wordnet"), "transe:relation", entity#debate.v.01, entity#debater.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #herb.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #herb.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#herb.n.01, relation#_hyponym)-->r]. Reasoning Result: horse_balm.n.01.
Input: According to the WordNet knowledge graph, from entity #inattention.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #inattention.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#inattention.n.01, relation#_hypernym)-->r]. Reasoning Result: basic_cognitive_process.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #fastener.n.02 and entity #buckle.n.01? Output: According to the WordNet knowledge graph, the relation between entity #fastener.n.02 and entity #buckle.n.01 is [GR(GL("wordnet"), "transe:relation", entity#fastener.n.02, entity#buckle.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #fallot.n.01 and entity #doctor.n.01? Output: According to the WordNet knowledge graph, the relation between entity #fallot.n.01 and entity #doctor.n.01 is [GR(GL("wordnet"), "transe:relation", entity#fallot.n.01, entity#doctor.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #areola.n.02 and entity #breast.n.02? Output: According to the WordNet knowledge graph, the relation between entity #areola.n.02 and entity #breast.n.02 is [GR(GL("wordnet"), "transe:relation", entity#areola.n.02, entity#breast.n.02)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #throw.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #throw.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#throw.n.01)-->r]. Reasoning Result: leaner.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#sneer.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #sneer.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#sneer.v.01)-->r]. Reasoning Result: sneerer.n.01.
Input: According to the WordNet knowledge graph, from entity #drag.v.05, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #drag.v.05, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#drag.v.05, relation#_hypernym)-->r]. Reasoning Result: lag.v.01.
Input: According to the WordNet knowledge graph, from entity #bomber.n.03, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #bomber.n.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#bomber.n.03, relation#_hypernym)-->r]. Reasoning Result: sandwich.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #monitor.v.01 and entity #monitor.n.06? Output: According to the WordNet knowledge graph, the relation between entity #monitor.v.01 and entity #monitor.n.06 is [GR(GL("wordnet"), "transe:relation", entity#monitor.v.01, entity#monitor.n.06)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #mutilator.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #mutilator.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mutilator.n.01, relation#_hypernym)-->r]. Reasoning Result: person.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #kill.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #kill.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#kill.v.01)-->r]. Reasoning Result: execute.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #eubacteria.n.01 and entity #moneran.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #eubacteria.n.01 and entity #moneran.n.01 is [GR(GL("wordnet"), "transe:relation", entity#eubacteria.n.01, entity#moneran.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #break.v.10, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #break.v.10, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#break.v.10, relation#_hyponym)-->r]. Reasoning Result: fracture.v.04.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #caryophyllales.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #caryophyllales.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#caryophyllales.n.01)-->r]. Reasoning Result: nyctaginaceae.n.01.
Input: According to the WordNet knowledge graph, from entity #type_family.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #type_family.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#type_family.n.01, relation#_hypernym)-->r]. Reasoning Result: type.n.04.
Input: According to the WordNet knowledge graph, what is the relation between entity #choroid.n.01 and entity #membrane.n.02? Output: According to the WordNet knowledge graph, the relation between entity #choroid.n.01 and entity #membrane.n.02 is [GR(GL("wordnet"), "transe:relation", entity#choroid.n.01, entity#membrane.n.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #publican.n.01, via relation #_synset_domain_region_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #publican.n.01, via relation #_synset_domain_region_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#publican.n.01, relation#_synset_domain_region_of)-->r]. Reasoning Result: united_kingdom.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#finger_millet.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #finger_millet.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#finger_millet.n.01)-->r]. Reasoning Result: millet.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #schinus.n.01 and entity #dicot_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #schinus.n.01 and entity #dicot_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#schinus.n.01, entity#dicot_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #galangal.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #galangal.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#galangal.n.01, relation#_hypernym)-->r]. Reasoning Result: ginger.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#withstander.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #withstander.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#withstander.n.01)-->r]. Reasoning Result: adversary.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #coelenterate_genus.n.01 and entity #animalia.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #coelenterate_genus.n.01 and entity #animalia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#coelenterate_genus.n.01, entity#animalia.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #alopex.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #alopex.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#alopex.n.01, relation#_member_meronym)-->r]. Reasoning Result: arctic_fox.n.01.
Input: According to the WordNet knowledge graph, from entity #cast.v.05, via relation #_verb_group, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #cast.v.05, via relation #_verb_group, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cast.v.05, relation#_verb_group)-->r]. Reasoning Result: cast.v.03.
Input: According to the WordNet knowledge graph, from entity #knife.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #knife.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#knife.n.01, relation#_hyponym)-->r]. Reasoning Result: pocketknife.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #taxaceae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #taxaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#taxaceae.n.01)-->r]. Reasoning Result: pseudotaxus.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #color.n.01 and entity #color.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #color.n.01 and entity #color.v.01 is [GR(GL("wordnet"), "transe:relation", entity#color.n.01, entity#color.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #blemish.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #blemish.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#blemish.n.01, relation#_hyponym)-->r]. Reasoning Result: whitehead.n.02.
Input: According to the WordNet knowledge graph, from entity #electrical_device.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #electrical_device.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#electrical_device.n.01, relation#_hyponym)-->r]. Reasoning Result: transducer.n.01.
Input: According to the WordNet knowledge graph, from entity #mammal_genus.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #mammal_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mammal_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: rupicapra.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#repulsion.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #repulsion.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#repulsion.n.03)-->r]. Reasoning Result: stand.n.12.
Input: According to the WordNet knowledge graph, what is the relation between entity #acceptance.n.03 and entity #recognition.n.01? Output: According to the WordNet knowledge graph, the relation between entity #acceptance.n.03 and entity #recognition.n.01 is [GR(GL("wordnet"), "transe:relation", entity#acceptance.n.03, entity#recognition.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #aid.n.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #aid.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#aid.n.03)-->r]. Reasoning Result: social_welfare.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#insectivora.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #insectivora.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#insectivora.n.01)-->r]. Reasoning Result: potamogalidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #color.n.04 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #color.n.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#color.n.04)-->r]. Reasoning Result: person_of_color.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#fig_tree.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #fig_tree.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#fig_tree.n.01)-->r]. Reasoning Result: tree.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#soft-finned_fish.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #soft-finned_fish.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#soft-finned_fish.n.01)-->r]. Reasoning Result: beaked_salmon.n.01.
Input: According to the WordNet knowledge graph, from entity #sweet_gum.n.03, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #sweet_gum.n.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sweet_gum.n.03, relation#_hypernym)-->r]. Reasoning Result: liquidambar.n.02.
Input: According to the WordNet knowledge graph, from entity #indistinctness.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #indistinctness.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#indistinctness.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: indistinct.a.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #hood.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #hood.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#hood.n.01)-->r]. Reasoning Result: criminal.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#orchidaceae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #orchidaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#orchidaceae.n.01)-->r]. Reasoning Result: platanthera.n.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#carpet_beater.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #carpet_beater.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#carpet_beater.n.01)-->r]. Reasoning Result: handle.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #street_urchin.n.01 and entity #urchin.n.01? Output: According to the WordNet knowledge graph, the relation between entity #street_urchin.n.01 and entity #urchin.n.01 is [GR(GL("wordnet"), "transe:relation", entity#street_urchin.n.01, entity#urchin.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #computer_user.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #computer_user.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#computer_user.n.01)-->r]. Reasoning Result: person.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #episode.n.01 and entity #drama.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #episode.n.01 and entity #drama.n.02 is [GR(GL("wordnet"), "transe:relation", entity#episode.n.01, entity#drama.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #irvingia.n.01 and entity #wild_mango.n.01? Output: According to the WordNet knowledge graph, the relation between entity #irvingia.n.01 and entity #wild_mango.n.01 is [GR(GL("wordnet"), "transe:relation", entity#irvingia.n.01, entity#wild_mango.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, what is the relation between entity #military.n.01 and entity #naval_academy.n.01? Output: According to the WordNet knowledge graph, the relation between entity #military.n.01 and entity #naval_academy.n.01 is [GR(GL("wordnet"), "transe:relation", entity#military.n.01, entity#naval_academy.n.01)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#sign.n.09 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #sign.n.09 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#sign.n.09)-->r]. Reasoning Result: signify.v.02.
Input: According to the WordNet knowledge graph, from entity #luke.n.02, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #luke.n.02, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#luke.n.02, relation#_part_of)-->r]. Reasoning Result: new_testament.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#carpocapsa.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #carpocapsa.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#carpocapsa.n.01)-->r]. Reasoning Result: tortricidae.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #dick.n.01 and entity #detective.n.01? Output: According to the WordNet knowledge graph, the relation between entity #dick.n.01 and entity #detective.n.01 is [GR(GL("wordnet"), "transe:relation", entity#dick.n.01, entity#detective.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #tease.n.03 and entity #tease.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #tease.n.03 and entity #tease.v.01 is [GR(GL("wordnet"), "transe:relation", entity#tease.n.03, entity#tease.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #ursus.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #ursus.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ursus.n.01, relation#_member_meronym)-->r]. Reasoning Result: brown_bear.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#spectroscope.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #spectroscope.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#spectroscope.n.01)-->r]. Reasoning Result: spectroscopic.a.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #disparage.v.01 and entity #disparagement.n.02? Output: According to the WordNet knowledge graph, the relation between entity #disparage.v.01 and entity #disparagement.n.02 is [GR(GL("wordnet"), "transe:relation", entity#disparage.v.01, entity#disparagement.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #dicloxacillin.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #dicloxacillin.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dicloxacillin.n.01, relation#_hypernym)-->r]. Reasoning Result: antibacterial.n.01.
Input: According to the WordNet knowledge graph, from entity #human_head.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #human_head.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#human_head.n.01, relation#_has_part)-->r]. Reasoning Result: pate.n.02.
Input: According to the WordNet knowledge graph, from entity #tree.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #tree.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tree.n.01, relation#_hyponym)-->r]. Reasoning Result: tulipwood_tree.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #acanthuridae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #acanthuridae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#acanthuridae.n.01)-->r]. Reasoning Result: acanthurus.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#doctrine.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #doctrine.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#doctrine.n.01)-->r]. Reasoning Result: religious_doctrine.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #basketball_shot.n.01 and entity #shot.n.15 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #basketball_shot.n.01 and entity #shot.n.15 is [GR(GL("wordnet"), "transe:relation", entity#basketball_shot.n.01, entity#shot.n.15)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #eubacteria.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #eubacteria.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#eubacteria.n.01, relation#_hyponym)-->r]. Reasoning Result: pseudomonad.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#picture.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #picture.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#picture.v.02)-->r]. Reasoning Result: picture.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #hirudinea.n.01 and entity #leech.n.01? Output: According to the WordNet knowledge graph, the relation between entity #hirudinea.n.01 and entity #leech.n.01 is [GR(GL("wordnet"), "transe:relation", entity#hirudinea.n.01, entity#leech.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, the relation between entity #leader.n.01 and entity #imam.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #leader.n.01 and entity #imam.n.01 is [GR(GL("wordnet"), "transe:relation", entity#leader.n.01, entity#imam.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #hungary.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #hungary.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#hungary.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: hungarian.a.01.
Input: According to the WordNet knowledge graph, from entity #help.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #help.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#help.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: benefactor.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #greek_mythology.n.01 and entity #chimera.n.01? Output: According to the WordNet knowledge graph, the relation between entity #greek_mythology.n.01 and entity #chimera.n.01 is [GR(GL("wordnet"), "transe:relation", entity#greek_mythology.n.01, entity#chimera.n.01)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, from entity #cyclopterus.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #cyclopterus.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cyclopterus.n.01, relation#_member_meronym)-->r]. Reasoning Result: lumpfish.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #class.n.07 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #class.n.07 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#class.n.07)-->r]. Reasoning Result: anthozoa.n.01.
Input: According to the WordNet knowledge graph, from entity #asterid_dicot_family.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #asterid_dicot_family.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#asterid_dicot_family.n.01, relation#_hyponym)-->r]. Reasoning Result: scrophulariaceae.n.01.
Input: According to the WordNet knowledge graph, from entity #spanish_needles.n.02, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #spanish_needles.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#spanish_needles.n.02, relation#_hypernym)-->r]. Reasoning Result: bur_marigold.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #worker.n.01 and entity #volunteer.n.02? Output: According to the WordNet knowledge graph, the relation between entity #worker.n.01 and entity #volunteer.n.02 is [GR(GL("wordnet"), "transe:relation", entity#worker.n.01, entity#volunteer.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #carcharias.n.01 and entity #carchariidae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #carcharias.n.01 and entity #carchariidae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#carcharias.n.01, entity#carchariidae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #bulge.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #bulge.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#bulge.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: hunch.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #jell.v.01 and entity #solidify.v.02? Output: According to the WordNet knowledge graph, the relation between entity #jell.v.01 and entity #solidify.v.02 is [GR(GL("wordnet"), "transe:relation", entity#jell.v.01, entity#solidify.v.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #hampton_roads.n.01 and entity #virginia.n.01? Output: According to the WordNet knowledge graph, the relation between entity #hampton_roads.n.01 and entity #virginia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#hampton_roads.n.01, entity#virginia.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#businessman.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #businessman.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#businessman.n.01)-->r]. Reasoning Result: amalgamator.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#seating.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #seating.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#seating.n.01)-->r]. Reasoning Result: stall.n.05.
Input: According to the WordNet knowledge graph, what is the relation between entity #hound.n.01 and entity #pack.n.06? Output: According to the WordNet knowledge graph, the relation between entity #hound.n.01 and entity #pack.n.06 is [GR(GL("wordnet"), "transe:relation", entity#hound.n.01, entity#pack.n.06)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #conifer.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #conifer.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#conifer.n.01, relation#_hyponym)-->r]. Reasoning Result: arborvitae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #natural_process.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #natural_process.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#natural_process.n.01)-->r]. Reasoning Result: succession.n.04.
Input: According to the WordNet knowledge graph, from entity #oil.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #oil.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#oil.n.01, relation#_hypernym)-->r]. Reasoning Result: lipid.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #artifact.n.01 and entity #covering.n.02? Output: According to the WordNet knowledge graph, the relation between entity #artifact.n.01 and entity #covering.n.02 is [GR(GL("wordnet"), "transe:relation", entity#artifact.n.01, entity#covering.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #ecology.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #ecology.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#ecology.n.02)-->r]. Reasoning Result: ecological.a.02.
Input: According to the WordNet knowledge graph, from entity #commodity.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #commodity.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#commodity.n.01, relation#_hyponym)-->r]. Reasoning Result: consumer_goods.n.01.
Input: According to the WordNet knowledge graph, from entity #mail.v.02, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #mail.v.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mail.v.02, relation#_hyponym)-->r]. Reasoning Result: express.v.07.
Input: According to the WordNet knowledge graph, what is the relation between entity #insecta.n.01 and entity #trichoptera.n.01? Output: According to the WordNet knowledge graph, the relation between entity #insecta.n.01 and entity #trichoptera.n.01 is [GR(GL("wordnet"), "transe:relation", entity#insecta.n.01, entity#trichoptera.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#neutralist.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #neutralist.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#neutralist.n.01)-->r]. Reasoning Result: advocate.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #abridge.v.01 and entity #contraction.n.04? Output: According to the WordNet knowledge graph, the relation between entity #abridge.v.01 and entity #contraction.n.04 is [GR(GL("wordnet"), "transe:relation", entity#abridge.v.01, entity#contraction.n.04)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #switch.n.07, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #switch.n.07, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#switch.n.07, relation#_derivationally_related_form)-->r]. Reasoning Result: switch_over.v.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #science.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #science.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#science.n.01)-->r]. Reasoning Result: cryptanalysis.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #job.n.03 and entity #workplace.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #job.n.03 and entity #workplace.n.01 is [GR(GL("wordnet"), "transe:relation", entity#job.n.03, entity#workplace.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #mammal_genus.n.01 and entity #globicephala.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #mammal_genus.n.01 and entity #globicephala.n.01 is [GR(GL("wordnet"), "transe:relation", entity#mammal_genus.n.01, entity#globicephala.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #spread.n.07, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #spread.n.07, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#spread.n.07, relation#_hypernym)-->r]. Reasoning Result: page.n.01.
Input: According to the WordNet knowledge graph, from entity #withdraw.v.09, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #withdraw.v.09, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#withdraw.v.09, relation#_derivationally_related_form)-->r]. Reasoning Result: withdrawal.n.02.
Input: According to the WordNet knowledge graph, from entity #argy-bargy.n.01, via relation #_synset_domain_region_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #argy-bargy.n.01, via relation #_synset_domain_region_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#argy-bargy.n.01, relation#_synset_domain_region_of)-->r]. Reasoning Result: united_kingdom.n.01.
Input: According to the WordNet knowledge graph, from entity #office_of_intelligence_support.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #office_of_intelligence_support.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#office_of_intelligence_support.n.01, relation#_hypernym)-->r]. Reasoning Result: agency.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #subtitle.v.01 and entity #subtitle.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #subtitle.v.01 and entity #subtitle.n.01 is [GR(GL("wordnet"), "transe:relation", entity#subtitle.v.01, entity#subtitle.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity#act.v.10 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #act.v.10 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#act.v.10)-->r]. Reasoning Result: dramaturgy.n.01.
Input: According to the WordNet knowledge graph, from entity #laurel.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #laurel.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#laurel.n.01, relation#_member_holonym)-->r]. Reasoning Result: lauraceae.n.01.
Input: According to the WordNet knowledge graph, from entity #abadan.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #abadan.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#abadan.n.01, relation#_part_of)-->r]. Reasoning Result: iran.n.01.
Input: According to the WordNet knowledge graph, from entity #put.v.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #put.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#put.v.01, relation#_hyponym)-->r]. Reasoning Result: throw.v.08.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #hand_tool.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #hand_tool.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#hand_tool.n.01)-->r]. Reasoning Result: opener.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #metallurgy.n.01 and entity #alloy.v.02? Output: According to the WordNet knowledge graph, the relation between entity #metallurgy.n.01 and entity #alloy.v.02 is [GR(GL("wordnet"), "transe:relation", entity#metallurgy.n.01, entity#alloy.v.02)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#toss.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #toss.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#toss.n.03)-->r]. Reasoning Result: convulse.v.03.
Input: According to the WordNet knowledge graph, from entity #memory_device.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #memory_device.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#memory_device.n.01, relation#_hyponym)-->r]. Reasoning Result: magnetic_tape.n.01.
Input: According to the WordNet knowledge graph, from entity #typify.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #typify.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#typify.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: type.n.01.
Input: According to the WordNet knowledge graph, from entity #previous_question.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #previous_question.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#previous_question.n.01, relation#_hypernym)-->r]. Reasoning Result: order.n.09.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#bay.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #bay.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#bay.n.01)-->r]. Reasoning Result: delaware_bay.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #hodeida.n.01 and entity #city.n.01? Output: According to the WordNet knowledge graph, the relation between entity #hodeida.n.01 and entity #city.n.01 is [GR(GL("wordnet"), "transe:relation", entity#hodeida.n.01, entity#city.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#orchidaceae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #orchidaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#orchidaceae.n.01)-->r]. Reasoning Result: genus_maxillaria.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #ectopic_pregnancy.n.01 and entity #tubal_pregnancy.n.01? Output: According to the WordNet knowledge graph, the relation between entity #ectopic_pregnancy.n.01 and entity #tubal_pregnancy.n.01 is [GR(GL("wordnet"), "transe:relation", entity#ectopic_pregnancy.n.01, entity#tubal_pregnancy.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #snip.v.02 and entity #shear.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #snip.v.02 and entity #shear.v.01 is [GR(GL("wordnet"), "transe:relation", entity#snip.v.02, entity#shear.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #eat.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #eat.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#eat.v.02)-->r]. Reasoning Result: nosh.v.01.
Input: According to the WordNet knowledge graph, from entity #aspirin_powder.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #aspirin_powder.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#aspirin_powder.n.01, relation#_hypernym)-->r]. Reasoning Result: powder.n.03.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#pollution.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #pollution.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#pollution.n.01)-->r]. Reasoning Result: impurity.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #consequence.n.02 and entity #wages.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #consequence.n.02 and entity #wages.n.01 is [GR(GL("wordnet"), "transe:relation", entity#consequence.n.02, entity#wages.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #process.n.06, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #process.n.06, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#process.n.06, relation#_hyponym)-->r]. Reasoning Result: degeneration.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#admonisher.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #admonisher.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#admonisher.n.01)-->r]. Reasoning Result: warn.v.02.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#destabilization.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #destabilization.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#destabilization.n.02)-->r]. Reasoning Result: destabilize.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #mountain_skink.n.01 and entity #eumeces.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #mountain_skink.n.01 and entity #eumeces.n.01 is [GR(GL("wordnet"), "transe:relation", entity#mountain_skink.n.01, entity#eumeces.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_region, we can obtain entity #godown.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_of_domain_region, we can obtain entity #godown.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_region, entity#godown.n.01)-->r]. Reasoning Result: malaysia.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #black_raspberry.n.01 and entity #raspberry.n.02? Output: According to the WordNet knowledge graph, the relation between entity #black_raspberry.n.01 and entity #raspberry.n.02 is [GR(GL("wordnet"), "transe:relation", entity#black_raspberry.n.01, entity#raspberry.n.02)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, from entity #graph.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #graph.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#graph.n.01, relation#_hypernym)-->r]. Reasoning Result: visual_communication.n.01.
Input: According to the WordNet knowledge graph, from entity #grace.n.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #grace.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#grace.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: decorate.v.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#oscines.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #oscines.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#oscines.n.01)-->r]. Reasoning Result: mimidae.n.01.
Input: According to the WordNet knowledge graph, from entity #cow.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #cow.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cow.n.01, relation#_hypernym)-->r]. Reasoning Result: cattle.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #rocket_fuel.n.01 and entity #propellant.n.01? Output: According to the WordNet knowledge graph, the relation between entity #rocket_fuel.n.01 and entity #propellant.n.01 is [GR(GL("wordnet"), "transe:relation", entity#rocket_fuel.n.01, entity#propellant.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#acolyte.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #acolyte.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#acolyte.n.01)-->r]. Reasoning Result: holy_order.n.01.
Input: According to the WordNet knowledge graph, from entity #sirloin.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sirloin.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sirloin.n.01, relation#_hypernym)-->r]. Reasoning Result: cut.n.06.
Input: According to the WordNet knowledge graph, from entity #playing_field.n.02, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #playing_field.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#playing_field.n.02, relation#_hyponym)-->r]. Reasoning Result: arena.n.04.
Input: According to the WordNet knowledge graph, what is the relation between entity #reprobate.v.02 and entity #theology.n.02? Output: According to the WordNet knowledge graph, the relation between entity #reprobate.v.02 and entity #theology.n.02 is [GR(GL("wordnet"), "transe:relation", entity#reprobate.v.02, entity#theology.n.02)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, from entity #profession.n.02, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #profession.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#profession.n.02, relation#_hyponym)-->r]. Reasoning Result: architecture.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #conscription.n.01 and entity #mobilization.n.01? Output: According to the WordNet knowledge graph, the relation between entity #conscription.n.01 and entity #mobilization.n.01 is [GR(GL("wordnet"), "transe:relation", entity#conscription.n.01, entity#mobilization.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#appellation.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #appellation.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#appellation.n.01)-->r]. Reasoning Result: name.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #statistician.n.02 and entity #statistics.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #statistician.n.02 and entity #statistics.n.01 is [GR(GL("wordnet"), "transe:relation", entity#statistician.n.02, entity#statistics.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #varnish.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #varnish.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#varnish.n.01)-->r]. Reasoning Result: varnish.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #procedure.n.01 and entity #go.v.02? Output: According to the WordNet knowledge graph, the relation between entity #procedure.n.01 and entity #go.v.02 is [GR(GL("wordnet"), "transe:relation", entity#procedure.n.01, entity#go.v.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #stall.n.05 and entity #united_kingdom.n.01? Output: According to the WordNet knowledge graph, the relation between entity #stall.n.05 and entity #united_kingdom.n.01 is [GR(GL("wordnet"), "transe:relation", entity#stall.n.05, entity#united_kingdom.n.01)-->r]. Reasoning Result: _synset_domain_region_of.
Input: According to the WordNet knowledge graph, what is the relation between entity #geranium.n.01 and entity #ivy_geranium.n.01? Output: According to the WordNet knowledge graph, the relation between entity #geranium.n.01 and entity #ivy_geranium.n.01 is [GR(GL("wordnet"), "transe:relation", entity#geranium.n.01, entity#ivy_geranium.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #jugale.n.01 and entity #cheekbone.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #jugale.n.01 and entity #cheekbone.n.01 is [GR(GL("wordnet"), "transe:relation", entity#jugale.n.01, entity#cheekbone.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, from entity #marine_mussel.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #marine_mussel.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#marine_mussel.n.01, relation#_hyponym)-->r]. Reasoning Result: edible_mussel.n.01.
Input: According to the WordNet knowledge graph, from entity #playground.n.02, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #playground.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#playground.n.02, relation#_hypernym)-->r]. Reasoning Result: yard.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#kachin.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #kachin.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#kachin.n.01)-->r]. Reasoning Result: tibeto-burman.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#chloroform.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #chloroform.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#chloroform.n.01)-->r]. Reasoning Result: inhalation_anesthetic.n.01.
Input: According to the WordNet knowledge graph, from entity #putter.v.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #putter.v.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#putter.v.02, relation#_derivationally_related_form)-->r]. Reasoning Result: putterer.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #powder.n.01 and entity #solid.n.01? Output: According to the WordNet knowledge graph, the relation between entity #powder.n.01 and entity #solid.n.01 is [GR(GL("wordnet"), "transe:relation", entity#powder.n.01, entity#solid.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #platonist.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #platonist.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#platonist.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: platonism.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #close.v.15 and entity #plug.v.01? Output: According to the WordNet knowledge graph, the relation between entity #close.v.15 and entity #plug.v.01 is [GR(GL("wordnet"), "transe:relation", entity#close.v.15, entity#plug.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #spot.v.05, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #spot.v.05, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#spot.v.05, relation#_hypernym)-->r]. Reasoning Result: change.v.02.
Input: According to the WordNet knowledge graph, from entity #enzyme.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #enzyme.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#enzyme.n.01, relation#_hyponym)-->r]. Reasoning Result: cyclooxygenase.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cycad.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cycad.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#cycad.n.01)-->r]. Reasoning Result: gymnosperm.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#shaking.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #shaking.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#shaking.n.02)-->r]. Reasoning Result: vibrational.a.01.
Input: According to the WordNet knowledge graph, the relation between entity #musical_composition.n.01 and entity #adagio.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #musical_composition.n.01 and entity #adagio.n.01 is [GR(GL("wordnet"), "transe:relation", entity#musical_composition.n.01, entity#adagio.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #somesthesia.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #somesthesia.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#somesthesia.n.01, relation#_hypernym)-->r]. Reasoning Result: perception.n.03.
Input: According to the WordNet knowledge graph, from entity #spellbinder.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #spellbinder.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#spellbinder.n.01, relation#_hypernym)-->r]. Reasoning Result: orator.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#medical_officer.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #medical_officer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#medical_officer.n.01)-->r]. Reasoning Result: medical_practitioner.n.01.
Input: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity#happy.a.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #happy.a.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_also_see, entity#happy.a.01)-->r]. Reasoning Result: felicitous.a.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#japanese_persimmon.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #japanese_persimmon.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#japanese_persimmon.n.01)-->r]. Reasoning Result: persimmon.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #similarity.n.01 and entity #likeness.n.01? Output: According to the WordNet knowledge graph, the relation between entity #similarity.n.01 and entity #likeness.n.01 is [GR(GL("wordnet"), "transe:relation", entity#similarity.n.01, entity#likeness.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #fluidram.n.01 and entity #fluidounce.n.01? Output: According to the WordNet knowledge graph, the relation between entity #fluidram.n.01 and entity #fluidounce.n.01 is [GR(GL("wordnet"), "transe:relation", entity#fluidram.n.01, entity#fluidounce.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, from entity #blast.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #blast.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#blast.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: blare.n.01.
Input: According to the WordNet knowledge graph, from entity #title.n.06, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #title.n.06, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#title.n.06, relation#_hyponym)-->r]. Reasoning Result: aga.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#leather.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #leather.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#leather.n.01)-->r]. Reasoning Result: animal_skin.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #feather.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #feather.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#feather.n.01)-->r]. Reasoning Result: animal_material.n.01.
Input: According to the WordNet knowledge graph, from entity #tribe.n.02, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #tribe.n.02, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tribe.n.02, relation#_member_meronym)-->r]. Reasoning Result: nahuatl.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #dog.n.01 and entity #griffon.n.02? Output: According to the WordNet knowledge graph, the relation between entity #dog.n.01 and entity #griffon.n.02 is [GR(GL("wordnet"), "transe:relation", entity#dog.n.01, entity#griffon.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#bhutan.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #bhutan.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#bhutan.n.01)-->r]. Reasoning Result: bhutanese.n.01.
Input: According to the WordNet knowledge graph, from entity #pour.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pour.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pour.v.01, relation#_hyponym)-->r]. Reasoning Result: decant.v.01.
Input: According to the WordNet knowledge graph, from entity #enumeration.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #enumeration.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#enumeration.n.01, relation#_hypernym)-->r]. Reasoning Result: list.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #willow.n.01 and entity #white_willow.n.01? Output: According to the WordNet knowledge graph, the relation between entity #willow.n.01 and entity #white_willow.n.01 is [GR(GL("wordnet"), "transe:relation", entity#willow.n.01, entity#white_willow.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #ordnance_survey.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #ordnance_survey.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#ordnance_survey.n.01)-->r]. Reasoning Result: administrative_unit.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #charge_unit.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #charge_unit.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#charge_unit.n.01)-->r]. Reasoning Result: electromagnetic_unit.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #walk.v.09 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #walk.v.09 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#walk.v.09)-->r]. Reasoning Result: walk.n.01.
Input: According to the WordNet knowledge graph, from entity #dicot_genus.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #dicot_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dicot_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: psidium.n.01.
Input: According to the WordNet knowledge graph, from entity #stone.n.09, via relation #_instance_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #stone.n.09, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#stone.n.09, relation#_instance_hypernym)-->r]. Reasoning Result: feminist.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#geographical_area.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #geographical_area.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#geographical_area.n.01)-->r]. Reasoning Result: baltic_state.n.01.
Input: According to the WordNet knowledge graph, from entity #foram.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #foram.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#foram.n.01, relation#_hypernym)-->r]. Reasoning Result: rhizopod.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #electrify.v.03 and entity #wireman.n.01? Output: According to the WordNet knowledge graph, the relation between entity #electrify.v.03 and entity #wireman.n.01 is [GR(GL("wordnet"), "transe:relation", entity#electrify.v.03, entity#wireman.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #awkward.a.02, via relation #_also_see, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #awkward.a.02, via relation #_also_see, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#awkward.a.02, relation#_also_see)-->r]. Reasoning Result: maladroit.a.01.
Input: According to the WordNet knowledge graph, from entity #austria.n.01, via relation #_has_part, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #austria.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#austria.n.01, relation#_has_part)-->r]. Reasoning Result: vienna.n.01.
Input: According to the WordNet knowledge graph, from entity #bird_genus.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #bird_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#bird_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: ptilonorhynchus.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity#canonization.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #canonization.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#canonization.n.01)-->r]. Reasoning Result: roman_catholic.n.02.
Input: According to the WordNet knowledge graph, from entity #genus_hepatica.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #genus_hepatica.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#genus_hepatica.n.01, relation#_member_holonym)-->r]. Reasoning Result: ranunculaceae.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #bubulcus.n.01 and entity #bird_genus.n.01? Output: According to the WordNet knowledge graph, the relation between entity #bubulcus.n.01 and entity #bird_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#bubulcus.n.01, entity#bird_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #round.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #round.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#round.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: circle.n.08.
Input: According to the WordNet knowledge graph, what is the relation between entity #abstraction.n.06 and entity #psychological_feature.n.01? Output: According to the WordNet knowledge graph, the relation between entity #abstraction.n.06 and entity #psychological_feature.n.01 is [GR(GL("wordnet"), "transe:relation", entity#abstraction.n.06, entity#psychological_feature.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #thoracic_vein.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #thoracic_vein.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#thoracic_vein.n.01, relation#_part_of)-->r]. Reasoning Result: thorax.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#slop.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #slop.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#slop.n.01)-->r]. Reasoning Result: feed.n.01.
Input: According to the WordNet knowledge graph, from entity #ojos_del_salado.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #ojos_del_salado.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ojos_del_salado.n.01, relation#_part_of)-->r]. Reasoning Result: argentina.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #state_of_matter.n.01 and entity #chemical_phenomenon.n.01? Output: According to the WordNet knowledge graph, the relation between entity #state_of_matter.n.01 and entity #chemical_phenomenon.n.01 is [GR(GL("wordnet"), "transe:relation", entity#state_of_matter.n.01, entity#chemical_phenomenon.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #differentiation.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #differentiation.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#differentiation.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: differentiate.v.06.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#deliver.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #deliver.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#deliver.v.01)-->r]. Reasoning Result: presentation.n.04.
Input: According to the WordNet knowledge graph, from entity #trouble.n.03, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #trouble.n.03, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#trouble.n.03, relation#_hyponym)-->r]. Reasoning Result: noise.n.03.
Input: According to the WordNet knowledge graph, from entity #lettuce.n.03, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #lettuce.n.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#lettuce.n.03, relation#_hypernym)-->r]. Reasoning Result: salad_green.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #assign.v.02 and entity #allocate.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #assign.v.02 and entity #allocate.v.01 is [GR(GL("wordnet"), "transe:relation", entity#assign.v.02, entity#allocate.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #specialist.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #specialist.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#specialist.n.02, relation#_hyponym)-->r]. Reasoning Result: gynecologist.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #robeson.n.01 and entity #civil_rights_leader.n.01? Output: According to the WordNet knowledge graph, the relation between entity #robeson.n.01 and entity #civil_rights_leader.n.01 is [GR(GL("wordnet"), "transe:relation", entity#robeson.n.01, entity#civil_rights_leader.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, from entity #muslim.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #muslim.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#muslim.n.01, relation#_hyponym)-->r]. Reasoning Result: mujtihad.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#wave_number.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #wave_number.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#wave_number.n.01)-->r]. Reasoning Result: frequency.n.01.
Input: According to the WordNet knowledge graph, from entity #cry.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #cry.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cry.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: outshout.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #arcadia.n.01 and entity #geographical_area.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #arcadia.n.01 and entity #geographical_area.n.01 is [GR(GL("wordnet"), "transe:relation", entity#arcadia.n.01, entity#geographical_area.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, from entity #diner.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #diner.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#diner.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: dine.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #operate.v.03 and entity #dial.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #operate.v.03 and entity #dial.v.01 is [GR(GL("wordnet"), "transe:relation", entity#operate.v.03, entity#dial.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity#performing_arts.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #performing_arts.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#performing_arts.n.01)-->r]. Reasoning Result: play.v.14.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #klavern.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #klavern.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#klavern.n.01)-->r]. Reasoning Result: unit.n.03.
Input: According to the WordNet knowledge graph, from entity #sop.v.03, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sop.v.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sop.v.03, relation#_hypernym)-->r]. Reasoning Result: dunk.v.01.
Input: According to the WordNet knowledge graph, from entity #hydrophyllaceae.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #hydrophyllaceae.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#hydrophyllaceae.n.01, relation#_member_meronym)-->r]. Reasoning Result: genus_nemophila.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#monocot_genus.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #monocot_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#monocot_genus.n.01)-->r]. Reasoning Result: epipremnum.n.01.
Input: According to the WordNet knowledge graph, from entity #crash.v.03, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #crash.v.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#crash.v.03, relation#_derivationally_related_form)-->r]. Reasoning Result: crash.n.04.
Input: According to the WordNet knowledge graph, the relation between entity #asterid_dicot_genus.n.01 and entity #mandragora.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #asterid_dicot_genus.n.01 and entity #mandragora.n.01 is [GR(GL("wordnet"), "transe:relation", entity#asterid_dicot_genus.n.01, entity#mandragora.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#offensive.a.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #offensive.a.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#offensive.a.03)-->r]. Reasoning Result: pique.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #coat_of_paint.n.01 and entity #flat_coat.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #coat_of_paint.n.01 and entity #flat_coat.n.01 is [GR(GL("wordnet"), "transe:relation", entity#coat_of_paint.n.01, entity#flat_coat.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #perform.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #perform.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#perform.v.01, relation#_hyponym)-->r]. Reasoning Result: rehearse.v.01.
Input: According to the WordNet knowledge graph, from entity #predictor.n.03, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #predictor.n.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#predictor.n.03, relation#_hypernym)-->r]. Reasoning Result: computer.n.01.
Input: According to the WordNet knowledge graph, from entity #tamarind.n.02, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #tamarind.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tamarind.n.02, relation#_hypernym)-->r]. Reasoning Result: edible_fruit.n.01.
Input: According to the WordNet knowledge graph, from entity #suppress.v.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #suppress.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#suppress.v.01, relation#_hyponym)-->r]. Reasoning Result: squelch.v.01.
Input: According to the WordNet knowledge graph, from entity #religious_doctrine.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #religious_doctrine.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#religious_doctrine.n.01, relation#_hyponym)-->r]. Reasoning Result: immaculate_conception.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#oomycetes.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #oomycetes.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#oomycetes.n.01)-->r]. Reasoning Result: class.n.07.
Input: According to the WordNet knowledge graph, from entity #stylize.v.01, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #stylize.v.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#stylize.v.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: art.n.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#forbid.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #forbid.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#forbid.v.01)-->r]. Reasoning Result: bar.v.01.
Input: According to the WordNet knowledge graph, from entity #sanguinaria.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #sanguinaria.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sanguinaria.n.01, relation#_member_holonym)-->r]. Reasoning Result: papaveraceae.n.01.
Input: According to the WordNet knowledge graph, from entity #pope.n.01, via relation #_instance_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #pope.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pope.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: sylvester_ii.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#avadavat.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #avadavat.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#avadavat.n.01)-->r]. Reasoning Result: weaver.n.02.
Input: According to the WordNet knowledge graph, from entity #united_states.n.01, via relation #_member_of_domain_region, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #united_states.n.01, via relation #_member_of_domain_region, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#united_states.n.01, relation#_member_of_domain_region)-->r]. Reasoning Result: trapezium.n.01.
Input: According to the WordNet knowledge graph, from entity #bellow.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #bellow.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#bellow.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: shout.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #solanum.n.01 and entity #potato_tree.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #solanum.n.01 and entity #potato_tree.n.01 is [GR(GL("wordnet"), "transe:relation", entity#solanum.n.01, entity#potato_tree.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #treasurer.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #treasurer.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#treasurer.n.01, relation#_hypernym)-->r]. Reasoning Result: money_handler.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#hell.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #hell.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#hell.n.01)-->r]. Reasoning Result: infernal.a.01.
Input: According to the WordNet knowledge graph, the relation between entity #carissa.n.01 and entity #shrub.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #carissa.n.01 and entity #shrub.n.01 is [GR(GL("wordnet"), "transe:relation", entity#carissa.n.01, entity#shrub.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #rudbeckia.n.01 and entity #compositae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #rudbeckia.n.01 and entity #compositae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#rudbeckia.n.01, entity#compositae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, what is the relation between entity #artist.n.01 and entity #sculptor.n.01? Output: According to the WordNet knowledge graph, the relation between entity #artist.n.01 and entity #sculptor.n.01 is [GR(GL("wordnet"), "transe:relation", entity#artist.n.01, entity#sculptor.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #symptom.n.01 and entity #syndrome.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #symptom.n.01 and entity #syndrome.n.02 is [GR(GL("wordnet"), "transe:relation", entity#symptom.n.01, entity#syndrome.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #shuffle.n.01 and entity #card_game.n.01? Output: According to the WordNet knowledge graph, the relation between entity #shuffle.n.01 and entity #card_game.n.01 is [GR(GL("wordnet"), "transe:relation", entity#shuffle.n.01, entity#card_game.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, from entity #mask.n.04, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #mask.n.04, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mask.n.04, relation#_hyponym)-->r]. Reasoning Result: face_mask.n.01.
Input: According to the WordNet knowledge graph, from entity #incinerate.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #incinerate.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#incinerate.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: incineration.n.01.
Input: According to the WordNet knowledge graph, from entity #warrant_officer.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #warrant_officer.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#warrant_officer.n.01, relation#_hypernym)-->r]. Reasoning Result: military_officer.n.01.
Input: According to the WordNet knowledge graph, from entity #purchase.n.02, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #purchase.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#purchase.n.02, relation#_hypernym)-->r]. Reasoning Result: acquisition.n.02.
Input: According to the WordNet knowledge graph, from entity #clock.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #clock.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#clock.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: timekeeper.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #demand.v.01 and entity #demander.n.01? Output: According to the WordNet knowledge graph, the relation between entity #demand.v.01 and entity #demander.n.01 is [GR(GL("wordnet"), "transe:relation", entity#demand.v.01, entity#demander.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #shop.n.01 and entity #drugstore.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #shop.n.01 and entity #drugstore.n.01 is [GR(GL("wordnet"), "transe:relation", entity#shop.n.01, entity#drugstore.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#command.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #command.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#command.n.01)-->r]. Reasoning Result: commandment.n.01.
Input: According to the WordNet knowledge graph, from entity #complain.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #complain.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#complain.v.01, relation#_hyponym)-->r]. Reasoning Result: rail.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #genus_origanum.n.01 and entity #origanum.n.01? Output: According to the WordNet knowledge graph, the relation between entity #genus_origanum.n.01 and entity #origanum.n.01 is [GR(GL("wordnet"), "transe:relation", entity#genus_origanum.n.01, entity#origanum.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #substitute.v.03, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #substitute.v.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#substitute.v.03, relation#_derivationally_related_form)-->r]. Reasoning Result: deputy.n.01.
Input: According to the WordNet knowledge graph, from entity #musician.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #musician.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#musician.n.01, relation#_hyponym)-->r]. Reasoning Result: koto_player.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #call_on_the_carpet.v.01 and entity #lecture.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #call_on_the_carpet.v.01 and entity #lecture.n.02 is [GR(GL("wordnet"), "transe:relation", entity#call_on_the_carpet.v.01, entity#lecture.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #colloquialism.n.01 and entity #snogging.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #colloquialism.n.01 and entity #snogging.n.01 is [GR(GL("wordnet"), "transe:relation", entity#colloquialism.n.01, entity#snogging.n.01)-->r]. Reasoning Result: _member_of_domain_usage.
Input: According to the WordNet knowledge graph, what is the relation between entity #grounder.n.01 and entity #baseball.n.01? Output: According to the WordNet knowledge graph, the relation between entity #grounder.n.01 and entity #baseball.n.01 is [GR(GL("wordnet"), "transe:relation", entity#grounder.n.01, entity#baseball.n.01)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, from entity #mining.n.01, via relation #_member_of_domain_topic, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #mining.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mining.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: rag.v.06.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#strip.n.06 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #strip.n.06 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#strip.n.06)-->r]. Reasoning Result: undress.v.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity#sleeper.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #sleeper.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#sleeper.n.02)-->r]. Reasoning Result: terrorism.n.01.
Input: According to the WordNet knowledge graph, from entity #sympathize.v.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sympathize.v.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sympathize.v.02, relation#_derivationally_related_form)-->r]. Reasoning Result: sympathy.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #short-horned_grasshopper.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #short-horned_grasshopper.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#short-horned_grasshopper.n.01)-->r]. Reasoning Result: grasshopper.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #brachiopoda.n.01 and entity #phylum.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #brachiopoda.n.01 and entity #phylum.n.02 is [GR(GL("wordnet"), "transe:relation", entity#brachiopoda.n.01, entity#phylum.n.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #monocot_genus.n.01 and entity #copernicia.n.01? Output: According to the WordNet knowledge graph, the relation between entity #monocot_genus.n.01 and entity #copernicia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#monocot_genus.n.01, entity#copernicia.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #measles.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #measles.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#measles.n.01)-->r]. Reasoning Result: contagious_disease.n.01.
Input: According to the WordNet knowledge graph, from entity #catch.n.03, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #catch.n.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#catch.n.03, relation#_hypernym)-->r]. Reasoning Result: adult.n.01.
Input: According to the WordNet knowledge graph, from entity #myrtaceae.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #myrtaceae.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#myrtaceae.n.01, relation#_hypernym)-->r]. Reasoning Result: dicot_family.n.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #napoleonic_wars.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #napoleonic_wars.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#napoleonic_wars.n.01)-->r]. Reasoning Result: waterloo.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #menu.n.03 and entity #list.n.01? Output: According to the WordNet knowledge graph, the relation between entity #menu.n.03 and entity #list.n.01 is [GR(GL("wordnet"), "transe:relation", entity#menu.n.03, entity#list.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #sailboat.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sailboat.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sailboat.n.01, relation#_hypernym)-->r]. Reasoning Result: sailing_vessel.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #national_capital.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #national_capital.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#national_capital.n.01)-->r]. Reasoning Result: teheran.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #nip.n.06 and entity #pinch.v.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #nip.n.06 and entity #pinch.v.05 is [GR(GL("wordnet"), "transe:relation", entity#nip.n.06, entity#pinch.v.05)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #narrator.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #narrator.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#narrator.n.01, relation#_hyponym)-->r]. Reasoning Result: fabulist.n.01.
Input: According to the WordNet knowledge graph, from entity #asterid_dicot_genus.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #asterid_dicot_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#asterid_dicot_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: genus_veronica.n.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #watering_can.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #watering_can.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#watering_can.n.01)-->r]. Reasoning Result: handle.n.01.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity#military.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #military.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#military.n.01)-->r]. Reasoning Result: wardroom.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #criminal.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #criminal.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#criminal.n.01)-->r]. Reasoning Result: outlaw.v.01.
Input: According to the WordNet knowledge graph, from entity #play.n.03, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #play.n.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#play.n.03, relation#_derivationally_related_form)-->r]. Reasoning Result: play.v.32.
Input: According to the WordNet knowledge graph, what is the relation between entity #papilionoideae.n.01 and entity #pickeringia.n.01? Output: According to the WordNet knowledge graph, the relation between entity #papilionoideae.n.01 and entity #pickeringia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#papilionoideae.n.01, entity#pickeringia.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, what is the relation between entity #credits.n.01 and entity #movie.n.01? Output: According to the WordNet knowledge graph, the relation between entity #credits.n.01 and entity #movie.n.01 is [GR(GL("wordnet"), "transe:relation", entity#credits.n.01, entity#movie.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, the relation between entity #eburophyton.n.01 and entity #monocot_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #eburophyton.n.01 and entity #monocot_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#eburophyton.n.01, entity#monocot_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #leak.v.02, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #leak.v.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#leak.v.02, relation#_hypernym)-->r]. Reasoning Result: break.v.46.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #descent.n.05 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #descent.n.05 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#descent.n.05)-->r]. Reasoning Result: slope.n.01.
Input: According to the WordNet knowledge graph, from entity #saint.n.01, via relation #_instance_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #saint.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#saint.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: jerome.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #inform.v.01 and entity #information.n.01? Output: According to the WordNet knowledge graph, the relation between entity #inform.v.01 and entity #information.n.01 is [GR(GL("wordnet"), "transe:relation", entity#inform.v.01, entity#information.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity#physics.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #physics.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#physics.n.01)-->r]. Reasoning Result: miscible.a.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#caryophylloid_dicot_family.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #caryophylloid_dicot_family.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#caryophylloid_dicot_family.n.01)-->r]. Reasoning Result: caryophyllidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#thelypteridaceae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #thelypteridaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#thelypteridaceae.n.01)-->r]. Reasoning Result: filicopsida.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #pipe.n.02 and entity #spout.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #pipe.n.02 and entity #spout.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pipe.n.02, entity#spout.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity#nuremberg.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #nuremberg.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#nuremberg.n.01)-->r]. Reasoning Result: city.n.01.
Input: According to the WordNet knowledge graph, from entity #repetition.n.03, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #repetition.n.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#repetition.n.03, relation#_hypernym)-->r]. Reasoning Result: rhetorical_device.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#tart_up.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #tart_up.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#tart_up.v.02)-->r]. Reasoning Result: overdress.v.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #kazakhstani.n.01 and entity #kazakhstan.n.01? Output: According to the WordNet knowledge graph, the relation between entity #kazakhstani.n.01 and entity #kazakhstan.n.01 is [GR(GL("wordnet"), "transe:relation", entity#kazakhstani.n.01, entity#kazakhstan.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity#ireland.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #ireland.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#ireland.n.02)-->r]. Reasoning Result: island.n.01.
Input: According to the WordNet knowledge graph, from entity #gallop.v.03, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #gallop.v.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#gallop.v.03, relation#_hypernym)-->r]. Reasoning Result: ride.v.01.
Input: According to the WordNet knowledge graph, from entity #renunciation.n.04, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #renunciation.n.04, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#renunciation.n.04, relation#_hyponym)-->r]. Reasoning Result: forsaking.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #head_cabbage.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #head_cabbage.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#head_cabbage.n.01)-->r]. Reasoning Result: cabbage.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #bacteria_family.n.01 and entity #nostocaceae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #bacteria_family.n.01 and entity #nostocaceae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#bacteria_family.n.01, entity#nostocaceae.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #india.n.01, via relation #_instance_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #india.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#india.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: asian_country.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#supply_chamber.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #supply_chamber.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#supply_chamber.n.01)-->r]. Reasoning Result: mechanical_device.n.01.
Input: According to the WordNet knowledge graph, from entity #brine.v.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #brine.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#brine.v.01, relation#_hypernym)-->r]. Reasoning Result: drench.v.04.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#gloom.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #gloom.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#gloom.n.03)-->r]. Reasoning Result: bleakness.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#transgression.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #transgression.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#transgression.n.01)-->r]. Reasoning Result: vice.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #traffic.v.02 and entity #traffic.n.02? Output: According to the WordNet knowledge graph, the relation between entity #traffic.v.02 and entity #traffic.n.02 is [GR(GL("wordnet"), "transe:relation", entity#traffic.v.02, entity#traffic.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #pate.n.02 and entity #human_head.n.01? Output: According to the WordNet knowledge graph, the relation between entity #pate.n.02 and entity #human_head.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pate.n.02, entity#human_head.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, from entity #electrical_system.n.02, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #electrical_system.n.02, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#electrical_system.n.02, relation#_has_part)-->r]. Reasoning Result: blinker.n.02.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #theobroma.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #theobroma.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#theobroma.n.01)-->r]. Reasoning Result: cacao.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #capitalization.n.03 and entity #exploitation.n.01? Output: According to the WordNet knowledge graph, the relation between entity #capitalization.n.03 and entity #exploitation.n.01 is [GR(GL("wordnet"), "transe:relation", entity#capitalization.n.03, entity#exploitation.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #caproidae.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #caproidae.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#caproidae.n.01, relation#_hypernym)-->r]. Reasoning Result: fish_family.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #muster.n.01 and entity #muster.v.02? Output: According to the WordNet knowledge graph, the relation between entity #muster.n.01 and entity #muster.v.02 is [GR(GL("wordnet"), "transe:relation", entity#muster.n.01, entity#muster.v.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #think_of.v.03 and entity #reputation.n.03? Output: According to the WordNet knowledge graph, the relation between entity #think_of.v.03 and entity #reputation.n.03 is [GR(GL("wordnet"), "transe:relation", entity#think_of.v.03, entity#reputation.n.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#actor.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #actor.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#actor.n.01)-->r]. Reasoning Result: tree.n.03.
Input: According to the WordNet knowledge graph, from entity #pasadena.n.01, via relation #_instance_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pasadena.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pasadena.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: city.n.01.
Input: According to the WordNet knowledge graph, from entity #calvinist.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #calvinist.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#calvinist.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: calvinist.a.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #lastingness.n.01 and entity #permanent.a.01? Output: According to the WordNet knowledge graph, the relation between entity #lastingness.n.01 and entity #permanent.a.01 is [GR(GL("wordnet"), "transe:relation", entity#lastingness.n.01, entity#permanent.a.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #concubine.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #concubine.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#concubine.n.01, relation#_hypernym)-->r]. Reasoning Result: mistress.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #cold.a.02 and entity #coldness.n.02? Output: According to the WordNet knowledge graph, the relation between entity #cold.a.02 and entity #coldness.n.02 is [GR(GL("wordnet"), "transe:relation", entity#cold.a.02, entity#coldness.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #anthriscus.n.01 and entity #chervil.n.01? Output: According to the WordNet knowledge graph, the relation between entity #anthriscus.n.01 and entity #chervil.n.01 is [GR(GL("wordnet"), "transe:relation", entity#anthriscus.n.01, entity#chervil.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, what is the relation between entity #peaceful.a.01 and entity #amicable.a.01? Output: According to the WordNet knowledge graph, the relation between entity #peaceful.a.01 and entity #amicable.a.01 is [GR(GL("wordnet"), "transe:relation", entity#peaceful.a.01, entity#amicable.a.01)-->r]. Reasoning Result: _also_see.
Input: According to the WordNet knowledge graph, from entity #codify.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #codify.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#codify.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: code.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#goddess.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #goddess.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#goddess.n.01)-->r]. Reasoning Result: deity.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#climb.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #climb.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#climb.n.03)-->r]. Reasoning Result: mountain_climbing.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#suidae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #suidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#suidae.n.01)-->r]. Reasoning Result: artiodactyla.n.01.
Input: According to the WordNet knowledge graph, from entity #scratch.n.10, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #scratch.n.10, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#scratch.n.10, relation#_hypernym)-->r]. Reasoning Result: blemish.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#assistant.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #assistant.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#assistant.n.01)-->r]. Reasoning Result: subordinate.n.01.
Input: According to the WordNet knowledge graph, from entity #computer_science.n.01, via relation #_member_of_domain_topic, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #computer_science.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#computer_science.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: dialog_box.n.01.
Input: According to the WordNet knowledge graph, from entity #semifinalist.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #semifinalist.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#semifinalist.n.01, relation#_hypernym)-->r]. Reasoning Result: rival.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #document.n.01 and entity #article.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #document.n.01 and entity #article.n.03 is [GR(GL("wordnet"), "transe:relation", entity#document.n.01, entity#article.n.03)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, what is the relation between entity #reel.n.03 and entity #fishing_gear.n.01? Output: According to the WordNet knowledge graph, the relation between entity #reel.n.03 and entity #fishing_gear.n.01 is [GR(GL("wordnet"), "transe:relation", entity#reel.n.03, entity#fishing_gear.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, the relation between entity #arbiter.n.02 and entity #intercede.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #arbiter.n.02 and entity #intercede.v.01 is [GR(GL("wordnet"), "transe:relation", entity#arbiter.n.02, entity#intercede.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #russia.n.04, via relation #_has_part, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #russia.n.04, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#russia.n.04, relation#_has_part)-->r]. Reasoning Result: grozny.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #drosera.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #drosera.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#drosera.n.01)-->r]. Reasoning Result: dicot_genus.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #delphi.n.01 and entity #city.n.01? Output: According to the WordNet knowledge graph, the relation between entity #delphi.n.01 and entity #city.n.01 is [GR(GL("wordnet"), "transe:relation", entity#delphi.n.01, entity#city.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, from entity #commissioner.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #commissioner.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#commissioner.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: commission.n.03.
Input: According to the WordNet knowledge graph, from entity #clavicle.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #clavicle.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#clavicle.n.01, relation#_part_of)-->r]. Reasoning Result: endoskeleton.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#infestation.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #infestation.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#infestation.n.02)-->r]. Reasoning Result: infest.v.01.
Input: According to the WordNet knowledge graph, from entity #community.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #community.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#community.n.01, relation#_hyponym)-->r]. Reasoning Result: ummah.n.01.
Input: According to the WordNet knowledge graph, from entity #linear_unit.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #linear_unit.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#linear_unit.n.01, relation#_hyponym)-->r]. Reasoning Result: nautical_linear_unit.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #parent.n.01 and entity #mother.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #parent.n.01 and entity #mother.n.01 is [GR(GL("wordnet"), "transe:relation", entity#parent.n.01, entity#mother.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#reconsider.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #reconsider.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#reconsider.v.02)-->r]. Reasoning Result: see.v.05.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #obligate.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #obligate.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#obligate.v.02)-->r]. Reasoning Result: entrust.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #exemption.n.03 and entity #use_immunity.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #exemption.n.03 and entity #use_immunity.n.01 is [GR(GL("wordnet"), "transe:relation", entity#exemption.n.03, entity#use_immunity.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #romneya.n.01 and entity #papaveraceae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #romneya.n.01 and entity #papaveraceae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#romneya.n.01, entity#papaveraceae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #arab_league.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #arab_league.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#arab_league.n.01)-->r]. Reasoning Result: morocco.n.01.
Input: According to the WordNet knowledge graph, from entity #change.v.05, via relation #_verb_group, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #change.v.05, via relation #_verb_group, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#change.v.05, relation#_verb_group)-->r]. Reasoning Result: switch.v.03.
Input: According to the WordNet knowledge graph, from entity #erasable_programmable_read-only_memory.n.01, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #erasable_programmable_read-only_memory.n.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#erasable_programmable_read-only_memory.n.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: computer_science.n.01.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_usage_of, we can obtain entity #trade_name.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_synset_domain_usage_of, we can obtain entity #trade_name.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_usage_of, entity#trade_name.n.01)-->r]. Reasoning Result: diclofenac_potassium.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #general.a.04 and entity #generalization.n.02? Output: According to the WordNet knowledge graph, the relation between entity #general.a.04 and entity #generalization.n.02 is [GR(GL("wordnet"), "transe:relation", entity#general.a.04, entity#generalization.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #energizer.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #energizer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#energizer.n.01)-->r]. Reasoning Result: stimulate.v.04.
Input: According to the WordNet knowledge graph, from entity #district.n.01, via relation #_instance_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #district.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#district.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: acadia.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #aurora.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #aurora.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#aurora.n.02)-->r]. Reasoning Result: atmospheric_phenomenon.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #embower.v.01 and entity #enclose.v.03? Output: According to the WordNet knowledge graph, the relation between entity #embower.v.01 and entity #enclose.v.03 is [GR(GL("wordnet"), "transe:relation", entity#embower.v.01, entity#enclose.v.03)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #steam_locomotive.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #steam_locomotive.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#steam_locomotive.n.01)-->r]. Reasoning Result: steam_engine.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #change.v.01 and entity #archaize.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #change.v.01 and entity #archaize.v.01 is [GR(GL("wordnet"), "transe:relation", entity#change.v.01, entity#archaize.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #hindrance.n.01 and entity #obstacle.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #hindrance.n.01 and entity #obstacle.n.01 is [GR(GL("wordnet"), "transe:relation", entity#hindrance.n.01, entity#obstacle.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #avowal.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #avowal.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#avowal.n.01, relation#_hypernym)-->r]. Reasoning Result: assertion.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #pulp.v.02 and entity #grind.v.05? Output: According to the WordNet knowledge graph, the relation between entity #pulp.v.02 and entity #grind.v.05 is [GR(GL("wordnet"), "transe:relation", entity#pulp.v.02, entity#grind.v.05)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #dregs.n.01 and entity #subside.v.03? Output: According to the WordNet knowledge graph, the relation between entity #dregs.n.01 and entity #subside.v.03 is [GR(GL("wordnet"), "transe:relation", entity#dregs.n.01, entity#subside.v.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #harmonize.v.03 and entity #music.n.01? Output: According to the WordNet knowledge graph, the relation between entity #harmonize.v.03 and entity #music.n.01 is [GR(GL("wordnet"), "transe:relation", entity#harmonize.v.03, entity#music.n.01)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, from entity #number.n.08, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #number.n.08, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#number.n.08, relation#_derivationally_related_form)-->r]. Reasoning Result: number.v.02.
Input: According to the WordNet knowledge graph, from entity #retraction.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #retraction.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#retraction.n.01, relation#_hyponym)-->r]. Reasoning Result: withdrawal.n.01.
Input: According to the WordNet knowledge graph, from entity #act.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #act.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#act.n.02, relation#_hyponym)-->r]. Reasoning Result: legitimation.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cimex.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cimex.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#cimex.n.01)-->r]. Reasoning Result: arthropod_genus.n.01.
Input: According to the WordNet knowledge graph, from entity #optimist.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #optimist.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#optimist.n.01, relation#_hypernym)-->r]. Reasoning Result: person.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #fungus_genus.n.01 and entity #pholiota.n.01? Output: According to the WordNet knowledge graph, the relation between entity #fungus_genus.n.01 and entity #pholiota.n.01 is [GR(GL("wordnet"), "transe:relation", entity#fungus_genus.n.01, entity#pholiota.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#wash.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #wash.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#wash.n.02)-->r]. Reasoning Result: wash.v.02.
Input: According to the WordNet knowledge graph, from entity #newman.n.02, via relation #_instance_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #newman.n.02, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#newman.n.02, relation#_instance_hypernym)-->r]. Reasoning Result: archpriest.n.01.
Input: According to the WordNet knowledge graph, from entity #university.n.02, via relation #_instance_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #university.n.02, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#university.n.02, relation#_instance_hyponym)-->r]. Reasoning Result: paris_university.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity#rosh_hashanah.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #rosh_hashanah.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#rosh_hashanah.n.01)-->r]. Reasoning Result: judaism.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #moloch.n.03 and entity #agamid.n.01? Output: According to the WordNet knowledge graph, the relation between entity #moloch.n.03 and entity #agamid.n.01 is [GR(GL("wordnet"), "transe:relation", entity#moloch.n.03, entity#agamid.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#arthropod_genus.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #arthropod_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#arthropod_genus.n.01)-->r]. Reasoning Result: phlebotomus.n.02.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#lead.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #lead.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#lead.n.03)-->r]. Reasoning Result: chase.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #announcement.n.01 and entity #proclaim.v.01? Output: According to the WordNet knowledge graph, the relation between entity #announcement.n.01 and entity #proclaim.v.01 is [GR(GL("wordnet"), "transe:relation", entity#announcement.n.01, entity#proclaim.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #part.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #part.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#part.n.02, relation#_hyponym)-->r]. Reasoning Result: section.n.04.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#tax.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #tax.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#tax.v.01)-->r]. Reasoning Result: tax.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #dropseed.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #dropseed.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#dropseed.n.01)-->r]. Reasoning Result: grass.n.01.
Input: According to the WordNet knowledge graph, from entity #prunella.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #prunella.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#prunella.n.01, relation#_member_meronym)-->r]. Reasoning Result: self-heal.n.01.
Input: According to the WordNet knowledge graph, from entity #kurus.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #kurus.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#kurus.n.01, relation#_hypernym)-->r]. Reasoning Result: turkish_monetary_unit.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #crochet.n.01 and entity #crochet.v.01? Output: According to the WordNet knowledge graph, the relation between entity #crochet.n.01 and entity #crochet.v.01 is [GR(GL("wordnet"), "transe:relation", entity#crochet.n.01, entity#crochet.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #arrange.v.01 and entity #regularize.v.02? Output: According to the WordNet knowledge graph, the relation between entity #arrange.v.01 and entity #regularize.v.02 is [GR(GL("wordnet"), "transe:relation", entity#arrange.v.01, entity#regularize.v.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#mammal_genus.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #mammal_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#mammal_genus.n.01)-->r]. Reasoning Result: cuon.n.01.
Input: According to the WordNet knowledge graph, from entity #national_capital.n.01, via relation #_instance_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #national_capital.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#national_capital.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: harare.n.01.
Input: According to the WordNet knowledge graph, from entity #caravan.v.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #caravan.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#caravan.v.01, relation#_hypernym)-->r]. Reasoning Result: travel.v.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #junior.n.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #junior.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#junior.n.03)-->r]. Reasoning Result: person.n.01.
Input: According to the WordNet knowledge graph, from entity #gusher.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #gusher.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#gusher.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: jet.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #comparison.n.03 and entity #compare.v.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #comparison.n.03 and entity #compare.v.03 is [GR(GL("wordnet"), "transe:relation", entity#comparison.n.03, entity#compare.v.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #sarcosomataceae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #sarcosomataceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#sarcosomataceae.n.01)-->r]. Reasoning Result: ascomycete.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #wearable.a.01 and entity #wear.v.01? Output: According to the WordNet knowledge graph, the relation between entity #wearable.a.01 and entity #wear.v.01 is [GR(GL("wordnet"), "transe:relation", entity#wearable.a.01, entity#wear.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #longing.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #longing.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#longing.n.01, relation#_hypernym)-->r]. Reasoning Result: desire.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#spell.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #spell.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#spell.v.02)-->r]. Reasoning Result: significance.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #reference_book.n.01 and entity #encyclopedia.n.01? Output: According to the WordNet knowledge graph, the relation between entity #reference_book.n.01 and entity #encyclopedia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#reference_book.n.01, entity#encyclopedia.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #improbability.n.01 and entity #uncertainty.n.01? Output: According to the WordNet knowledge graph, the relation between entity #improbability.n.01 and entity #uncertainty.n.01 is [GR(GL("wordnet"), "transe:relation", entity#improbability.n.01, entity#uncertainty.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #refund.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #refund.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_also_see, entity#refund.v.01)-->r]. Reasoning Result: give.v.03.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #inquisitor.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #inquisitor.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#inquisitor.n.01)-->r]. Reasoning Result: inquirer.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #bran.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #bran.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#bran.n.01)-->r]. Reasoning Result: chaff.n.01.
Input: According to the WordNet knowledge graph, from entity #insecta.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #insecta.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#insecta.n.01, relation#_member_meronym)-->r]. Reasoning Result: orthoptera.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #fagot.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #fagot.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#fagot.n.01)-->r]. Reasoning Result: gay_man.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #glaciation.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #glaciation.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#glaciation.n.02)-->r]. Reasoning Result: geological_process.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #sum_up.v.01 and entity #sketch.n.03? Output: According to the WordNet knowledge graph, the relation between entity #sum_up.v.01 and entity #sketch.n.03 is [GR(GL("wordnet"), "transe:relation", entity#sum_up.v.01, entity#sketch.n.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #new_zealand_beech.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #new_zealand_beech.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#new_zealand_beech.n.01, relation#_member_holonym)-->r]. Reasoning Result: nothofagus.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#social_control.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #social_control.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#social_control.n.01)-->r]. Reasoning Result: duty.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #documentary.n.01 and entity #document.v.01? Output: According to the WordNet knowledge graph, the relation between entity #documentary.n.01 and entity #document.v.01 is [GR(GL("wordnet"), "transe:relation", entity#documentary.n.01, entity#document.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#linkage.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #linkage.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#linkage.n.01)-->r]. Reasoning Result: link.n.01.
Input: According to the WordNet knowledge graph, from entity #snuffler.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #snuffler.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#snuffler.n.01, relation#_hypernym)-->r]. Reasoning Result: person.n.01.
Input: According to the WordNet knowledge graph, from entity #reject.v.04, via relation #_verb_group, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #reject.v.04, via relation #_verb_group, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#reject.v.04, relation#_verb_group)-->r]. Reasoning Result: refuse.v.02.
Input: According to the WordNet knowledge graph, from entity #limit.v.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #limit.v.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#limit.v.02, relation#_derivationally_related_form)-->r]. Reasoning Result: limitation.n.05.
Input: According to the WordNet knowledge graph, what is the relation between entity #accede.v.02 and entity #accession.n.06? Output: According to the WordNet knowledge graph, the relation between entity #accede.v.02 and entity #accession.n.06 is [GR(GL("wordnet"), "transe:relation", entity#accede.v.02, entity#accession.n.06)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #law.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #law.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#law.n.01)-->r]. Reasoning Result: give.v.35.
Input: According to the WordNet knowledge graph, the relation between entity #decelerate.v.02 and entity #deceleration.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #decelerate.v.02 and entity #deceleration.n.01 is [GR(GL("wordnet"), "transe:relation", entity#decelerate.v.02, entity#deceleration.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #decorate.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #decorate.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#decorate.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: beauty.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #venereal_disease.n.01 and entity #chlamydia.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #venereal_disease.n.01 and entity #chlamydia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#venereal_disease.n.01, entity#chlamydia.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#celestial_sphere.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #celestial_sphere.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#celestial_sphere.n.01)-->r]. Reasoning Result: zenith.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #bedspring.n.01 and entity #plural.n.01? Output: According to the WordNet knowledge graph, the relation between entity #bedspring.n.01 and entity #plural.n.01 is [GR(GL("wordnet"), "transe:relation", entity#bedspring.n.01, entity#plural.n.01)-->r]. Reasoning Result: _synset_domain_usage_of.
Input: According to the WordNet knowledge graph, from entity #algebra.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #algebra.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#algebra.n.01, relation#_hypernym)-->r]. Reasoning Result: pure_mathematics.n.01.
Input: According to the WordNet knowledge graph, from entity #tire.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #tire.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tire.n.01, relation#_hyponym)-->r]. Reasoning Result: pneumatic_tire.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#mammal_family.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #mammal_family.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#mammal_family.n.01)-->r]. Reasoning Result: caviidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#person.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #person.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#person.n.01)-->r]. Reasoning Result: biter.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #antacid.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #antacid.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#antacid.n.01)-->r]. Reasoning Result: alka-seltzer.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #tenant.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #tenant.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#tenant.v.01)-->r]. Reasoning Result: tenant.n.03.
Input: According to the WordNet knowledge graph, the relation between entity #abandon.v.02 and entity #foreswear.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #abandon.v.02 and entity #foreswear.v.02 is [GR(GL("wordnet"), "transe:relation", entity#abandon.v.02, entity#foreswear.v.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #promote.v.02 and entity #promotion.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #promote.v.02 and entity #promotion.n.02 is [GR(GL("wordnet"), "transe:relation", entity#promote.v.02, entity#promotion.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #helleborine.n.03 and entity #cephalanthera.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #helleborine.n.03 and entity #cephalanthera.n.01 is [GR(GL("wordnet"), "transe:relation", entity#helleborine.n.03, entity#cephalanthera.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#analgesic.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #analgesic.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#analgesic.n.01)-->r]. Reasoning Result: morphine.n.01.
Input: According to the WordNet knowledge graph, from entity #iconic.a.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #iconic.a.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#iconic.a.01, relation#_derivationally_related_form)-->r]. Reasoning Result: picture.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #maturity.n.02 and entity #state.n.02? Output: According to the WordNet knowledge graph, the relation between entity #maturity.n.02 and entity #state.n.02 is [GR(GL("wordnet"), "transe:relation", entity#maturity.n.02, entity#state.n.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#authorization.n.04 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #authorization.n.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#authorization.n.04)-->r]. Reasoning Result: authorize.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#systematize.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #systematize.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#systematize.v.01)-->r]. Reasoning Result: orderer.n.02.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #gross.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #gross.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#gross.v.01)-->r]. Reasoning Result: gross.n.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#lawyer.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #lawyer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#lawyer.n.01)-->r]. Reasoning Result: advocate.n.02.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #uredinales.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #uredinales.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#uredinales.n.01)-->r]. Reasoning Result: rust.n.04.
Input: According to the WordNet knowledge graph, from entity #coolant.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #coolant.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#coolant.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: cool.v.01.
Input: According to the WordNet knowledge graph, from entity #analyze.v.04, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #analyze.v.04, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#analyze.v.04, relation#_hypernym)-->r]. Reasoning Result: treat.v.03.
Input: According to the WordNet knowledge graph, from entity #native_pear.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #native_pear.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#native_pear.n.01, relation#_hypernym)-->r]. Reasoning Result: shrub.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #diversion.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #diversion.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#diversion.n.01)-->r]. Reasoning Result: escapade.n.02.
Input: According to the WordNet knowledge graph, from entity #vine.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #vine.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#vine.n.01, relation#_hyponym)-->r]. Reasoning Result: hog_peanut.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #alpine_gold.n.01 and entity #hulsea.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #alpine_gold.n.01 and entity #hulsea.n.01 is [GR(GL("wordnet"), "transe:relation", entity#alpine_gold.n.01, entity#hulsea.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, what is the relation between entity #pope.n.01 and entity #calixtus_ii.n.01? Output: According to the WordNet knowledge graph, the relation between entity #pope.n.01 and entity #calixtus_ii.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pope.n.01, entity#calixtus_ii.n.01)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #combat_zone.n.02 and entity #zone.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #combat_zone.n.02 and entity #zone.n.03 is [GR(GL("wordnet"), "transe:relation", entity#combat_zone.n.02, entity#zone.n.03)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #increase.v.02 and entity #extend.v.17? Output: According to the WordNet knowledge graph, the relation between entity #increase.v.02 and entity #extend.v.17 is [GR(GL("wordnet"), "transe:relation", entity#increase.v.02, entity#extend.v.17)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #campanula.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #campanula.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#campanula.n.01, relation#_member_holonym)-->r]. Reasoning Result: genus_campanula.n.01.
Input: According to the WordNet knowledge graph, from entity #pretense.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pretense.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pretense.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: feign.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#moonshine.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #moonshine.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#moonshine.v.01)-->r]. Reasoning Result: bootlegger.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #city.n.01 and entity #nagoya.n.01? Output: According to the WordNet knowledge graph, the relation between entity #city.n.01 and entity #nagoya.n.01 is [GR(GL("wordnet"), "transe:relation", entity#city.n.01, entity#nagoya.n.01)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #predator.n.02 and entity #animal.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #predator.n.02 and entity #animal.n.01 is [GR(GL("wordnet"), "transe:relation", entity#predator.n.02, entity#animal.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#penicillin.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #penicillin.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#penicillin.n.01)-->r]. Reasoning Result: griseofulvin.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #gymnosperm_genus.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #gymnosperm_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#gymnosperm_genus.n.01)-->r]. Reasoning Result: chamaecyparis.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #display.n.05 and entity #flaunt.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #display.n.05 and entity #flaunt.n.01 is [GR(GL("wordnet"), "transe:relation", entity#display.n.05, entity#flaunt.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #control.n.09, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #control.n.09, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#control.n.09, relation#_derivationally_related_form)-->r]. Reasoning Result: operate.v.03.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #tuning.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #tuning.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#tuning.n.01)-->r]. Reasoning Result: tune.v.01.
Input: According to the WordNet knowledge graph, from entity #tennis_stroke.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #tennis_stroke.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tennis_stroke.n.01, relation#_hypernym)-->r]. Reasoning Result: stroke.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #conspire.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #conspire.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#conspire.v.01)-->r]. Reasoning Result: coconspire.v.01.
Input: According to the WordNet knowledge graph, from entity #attendant.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #attendant.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#attendant.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: attend.v.01.
Input: According to the WordNet knowledge graph, from entity #surpass.v.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #surpass.v.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#surpass.v.02, relation#_hyponym)-->r]. Reasoning Result: outshine.v.02.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #peafowl.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #peafowl.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#peafowl.n.01)-->r]. Reasoning Result: pavo.n.02.
Input: According to the WordNet knowledge graph, from entity #torreya.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #torreya.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#torreya.n.01, relation#_hypernym)-->r]. Reasoning Result: gymnosperm_genus.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#scleroprotein.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #scleroprotein.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#scleroprotein.n.01)-->r]. Reasoning Result: gelatin.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #mammal_genus.n.01 and entity #physeter.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #mammal_genus.n.01 and entity #physeter.n.01 is [GR(GL("wordnet"), "transe:relation", entity#mammal_genus.n.01, entity#physeter.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #writer.n.01 and entity #franklin.n.02? Output: According to the WordNet knowledge graph, the relation between entity #writer.n.01 and entity #franklin.n.02 is [GR(GL("wordnet"), "transe:relation", entity#writer.n.01, entity#franklin.n.02)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#bird_genus.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #bird_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#bird_genus.n.01)-->r]. Reasoning Result: procellaria.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#child.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #child.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#child.n.01)-->r]. Reasoning Result: changeling.n.02.
Input: According to the WordNet knowledge graph, from entity #choline.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #choline.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#choline.n.01, relation#_hypernym)-->r]. Reasoning Result: b-complex_vitamin.n.01.
Input: According to the WordNet knowledge graph, from entity #biology.n.01, via relation #_member_of_domain_topic, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #biology.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#biology.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: propagate.v.08.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#bargain_rate.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #bargain_rate.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#bargain_rate.n.01)-->r]. Reasoning Result: cheap.a.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#iridaceae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #iridaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#iridaceae.n.01)-->r]. Reasoning Result: genus_gladiolus.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #application.n.02 and entity #request.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #application.n.02 and entity #request.n.01 is [GR(GL("wordnet"), "transe:relation", entity#application.n.02, entity#request.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#polyporaceae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #polyporaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#polyporaceae.n.01)-->r]. Reasoning Result: polyporus.n.01.
Input: According to the WordNet knowledge graph, from entity #clout.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #clout.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#clout.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: punch.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #wanton.v.05 and entity #chat_up.v.01? Output: According to the WordNet knowledge graph, the relation between entity #wanton.v.05 and entity #chat_up.v.01 is [GR(GL("wordnet"), "transe:relation", entity#wanton.v.05, entity#chat_up.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #displace.v.03, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #displace.v.03, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#displace.v.03, relation#_hyponym)-->r]. Reasoning Result: pension_off.v.01.
Input: According to the WordNet knowledge graph, from entity #count.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #count.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#count.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: counter.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #pronounce.v.01 and entity #pronunciation.n.01? Output: According to the WordNet knowledge graph, the relation between entity #pronounce.v.01 and entity #pronunciation.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pronounce.v.01, entity#pronunciation.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #liar.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #liar.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#liar.n.01)-->r]. Reasoning Result: deceiver.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #tap.n.06 and entity #tap.v.06? Output: According to the WordNet knowledge graph, the relation between entity #tap.n.06 and entity #tap.v.06 is [GR(GL("wordnet"), "transe:relation", entity#tap.n.06, entity#tap.v.06)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#encrust.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #encrust.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#encrust.v.02)-->r]. Reasoning Result: incrustation.n.03.
Input: According to the WordNet knowledge graph, from entity #kidnapper.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #kidnapper.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#kidnapper.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: kidnap.v.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #lucubration.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #lucubration.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#lucubration.n.01)-->r]. Reasoning Result: literary_composition.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #jail.n.01 and entity #correctional_institution.n.01? Output: According to the WordNet knowledge graph, the relation between entity #jail.n.01 and entity #correctional_institution.n.01 is [GR(GL("wordnet"), "transe:relation", entity#jail.n.01, entity#correctional_institution.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #film_maker.n.01, via relation #_instance_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #film_maker.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#film_maker.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: eisenstein.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #bureau_of_the_census.n.01 and entity #agency.n.01? Output: According to the WordNet knowledge graph, the relation between entity #bureau_of_the_census.n.01 and entity #agency.n.01 is [GR(GL("wordnet"), "transe:relation", entity#bureau_of_the_census.n.01, entity#agency.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #wheeled_vehicle.n.01 and entity #baby_buggy.n.01? Output: According to the WordNet knowledge graph, the relation between entity #wheeled_vehicle.n.01 and entity #baby_buggy.n.01 is [GR(GL("wordnet"), "transe:relation", entity#wheeled_vehicle.n.01, entity#baby_buggy.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #decline.v.04 and entity #decline.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #decline.v.04 and entity #decline.n.01 is [GR(GL("wordnet"), "transe:relation", entity#decline.v.04, entity#decline.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #distortion.n.04 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #distortion.n.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#distortion.n.04)-->r]. Reasoning Result: falsify.v.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#undertake.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #undertake.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#undertake.v.02)-->r]. Reasoning Result: confront.v.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #turner.n.08 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #turner.n.08 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#turner.n.08)-->r]. Reasoning Result: spatula.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #reptile_genus.n.01 and entity #vipera.n.01? Output: According to the WordNet knowledge graph, the relation between entity #reptile_genus.n.01 and entity #vipera.n.01 is [GR(GL("wordnet"), "transe:relation", entity#reptile_genus.n.01, entity#vipera.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #gallon.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #gallon.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#gallon.n.02)-->r]. Reasoning Result: british_capacity_unit.n.01.
Input: According to the WordNet knowledge graph, from entity #supplanting.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #supplanting.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#supplanting.n.01, relation#_hypernym)-->r]. Reasoning Result: replacement.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #be.v.03 and entity #populate.v.01? Output: According to the WordNet knowledge graph, the relation between entity #be.v.03 and entity #populate.v.01 is [GR(GL("wordnet"), "transe:relation", entity#be.v.03, entity#populate.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #nominate.v.01 and entity #nomination.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #nominate.v.01 and entity #nomination.n.01 is [GR(GL("wordnet"), "transe:relation", entity#nominate.v.01, entity#nomination.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #islam.n.02, via relation #_member_of_domain_topic, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #islam.n.02, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#islam.n.02, relation#_member_of_domain_topic)-->r]. Reasoning Result: houri.n.02.
Input: According to the WordNet knowledge graph, from entity #trade.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #trade.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#trade.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: deal.v.06.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#clerkship.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #clerkship.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#clerkship.n.01)-->r]. Reasoning Result: salesclerk.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #pique.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #pique.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#pique.v.01)-->r]. Reasoning Result: offensive.a.03.
Input: According to the WordNet knowledge graph, the relation between entity #rival.n.01 and entity #foe.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #rival.n.01 and entity #foe.n.02 is [GR(GL("wordnet"), "transe:relation", entity#rival.n.01, entity#foe.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #poll.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #poll.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#poll.v.01)-->r]. Reasoning Result: poll.n.01.
Input: According to the WordNet knowledge graph, from entity #anthonomus.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #anthonomus.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#anthonomus.n.01, relation#_member_holonym)-->r]. Reasoning Result: curculionidae.n.01.
Input: According to the WordNet knowledge graph, from entity #think.v.09, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #think.v.09, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#think.v.09, relation#_derivationally_related_form)-->r]. Reasoning Result: idea.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #administration.n.02 and entity #executive.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #administration.n.02 and entity #executive.n.02 is [GR(GL("wordnet"), "transe:relation", entity#administration.n.02, entity#executive.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #arbovirus.n.01 and entity #virus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #arbovirus.n.01 and entity #virus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#arbovirus.n.01, entity#virus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#commitment.n.05 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #commitment.n.05 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#commitment.n.05)-->r]. Reasoning Result: commit.v.03.
Input: According to the WordNet knowledge graph, from entity #change.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #change.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#change.v.01, relation#_hyponym)-->r]. Reasoning Result: uniformize.v.01.
Input: According to the WordNet knowledge graph, from entity #lupinus.n.01, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #lupinus.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#lupinus.n.01, relation#_member_meronym)-->r]. Reasoning Result: wild_lupine.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#apprehension.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #apprehension.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#apprehension.n.01)-->r]. Reasoning Result: chill.n.04.
Input: According to the WordNet knowledge graph, from entity #difficulty.n.04, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #difficulty.n.04, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#difficulty.n.04, relation#_hyponym)-->r]. Reasoning Result: asperity.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#city.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #city.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#city.n.01)-->r]. Reasoning Result: mandalay.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#cichorium.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #cichorium.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#cichorium.n.01)-->r]. Reasoning Result: compositae.n.01.
Input: According to the WordNet knowledge graph, from entity #colloquialism.n.01, via relation #_member_of_domain_usage, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #colloquialism.n.01, via relation #_member_of_domain_usage, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#colloquialism.n.01, relation#_member_of_domain_usage)-->r]. Reasoning Result: ice.n.03.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #helleborine.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #helleborine.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#helleborine.n.02)-->r]. Reasoning Result: stream_orchid.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #spoil.n.02 and entity #injury.n.04? Output: According to the WordNet knowledge graph, the relation between entity #spoil.n.02 and entity #injury.n.04 is [GR(GL("wordnet"), "transe:relation", entity#spoil.n.02, entity#injury.n.04)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #victim.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #victim.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#victim.n.01, relation#_hyponym)-->r]. Reasoning Result: martyr.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #animal.n.01 and entity #zooplankton.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #animal.n.01 and entity #zooplankton.n.01 is [GR(GL("wordnet"), "transe:relation", entity#animal.n.01, entity#zooplankton.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity#nanometer.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #nanometer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#nanometer.n.01)-->r]. Reasoning Result: micron.n.01.
Input: According to the WordNet knowledge graph, from entity #change.v.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #change.v.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#change.v.02, relation#_hyponym)-->r]. Reasoning Result: develop.v.14.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_region_of, we can obtain entity#united_kingdom.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_region_of, we can obtain entity #united_kingdom.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_region_of, entity#united_kingdom.n.01)-->r]. Reasoning Result: fairy_light.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #orthodox_jew.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #orthodox_jew.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#orthodox_jew.n.01)-->r]. Reasoning Result: orthodox_judaism.n.01.
Input: According to the WordNet knowledge graph, from entity #osmosis.n.01, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #osmosis.n.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#osmosis.n.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: biology.n.01.
Input: According to the WordNet knowledge graph, from entity #criticism.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #criticism.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#criticism.n.01, relation#_hypernym)-->r]. Reasoning Result: disapproval.n.02.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#book.n.10 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #book.n.10 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#book.n.10)-->r]. Reasoning Result: lamentations.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #clear.n.01 and entity #innocence.n.03? Output: According to the WordNet knowledge graph, the relation between entity #clear.n.01 and entity #innocence.n.03 is [GR(GL("wordnet"), "transe:relation", entity#clear.n.01, entity#innocence.n.03)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #covering.n.02 and entity #screen.n.04? Output: According to the WordNet knowledge graph, the relation between entity #covering.n.02 and entity #screen.n.04 is [GR(GL("wordnet"), "transe:relation", entity#covering.n.02, entity#screen.n.04)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#terrorist_organization.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #terrorist_organization.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#terrorist_organization.n.01)-->r]. Reasoning Result: maktab_al-khidmat.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #alumnus.n.01 and entity #graduate.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #alumnus.n.01 and entity #graduate.v.01 is [GR(GL("wordnet"), "transe:relation", entity#alumnus.n.01, entity#graduate.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity#offensive.a.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #offensive.a.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_also_see, entity#offensive.a.03)-->r]. Reasoning Result: harmful.a.01.
Input: According to the WordNet knowledge graph, from entity #foremanship.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #foremanship.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#foremanship.n.01, relation#_hypernym)-->r]. Reasoning Result: position.n.06.
Input: According to the WordNet knowledge graph, from entity #mourning.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #mourning.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mourning.n.01, relation#_hypernym)-->r]. Reasoning Result: sadness.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #alcohol.n.01 and entity #hard_cider.n.01? Output: According to the WordNet knowledge graph, the relation between entity #alcohol.n.01 and entity #hard_cider.n.01 is [GR(GL("wordnet"), "transe:relation", entity#alcohol.n.01, entity#hard_cider.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #revision.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #revision.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#revision.n.01, relation#_hypernym)-->r]. Reasoning Result: transformation.n.05.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #scope.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #scope.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#scope.n.01)-->r]. Reasoning Result: internationality.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #commonwealth.n.01 and entity #puerto_rico.n.01? Output: According to the WordNet knowledge graph, the relation between entity #commonwealth.n.01 and entity #puerto_rico.n.01 is [GR(GL("wordnet"), "transe:relation", entity#commonwealth.n.01, entity#puerto_rico.n.01)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#dracunculus.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #dracunculus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#dracunculus.n.01)-->r]. Reasoning Result: araceae.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #pseudacris.n.01 and entity #amphibian_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #pseudacris.n.01 and entity #amphibian_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pseudacris.n.01, entity#amphibian_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #dislocation.n.01 and entity #interruption.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #dislocation.n.01 and entity #interruption.n.02 is [GR(GL("wordnet"), "transe:relation", entity#dislocation.n.01, entity#interruption.n.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #centrocercus.n.01 and entity #tetraonidae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #centrocercus.n.01 and entity #tetraonidae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#centrocercus.n.01, entity#tetraonidae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #basketball_shot.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #basketball_shot.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#basketball_shot.n.01, relation#_hyponym)-->r]. Reasoning Result: foul_shot.n.01.
Input: According to the WordNet knowledge graph, from entity #ulmus.n.01, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #ulmus.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ulmus.n.01, relation#_member_meronym)-->r]. Reasoning Result: siberian_elm.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #chemistry.n.01 and entity #dalton's_law.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #chemistry.n.01 and entity #dalton's_law.n.02 is [GR(GL("wordnet"), "transe:relation", entity#chemistry.n.01, entity#dalton's_law.n.02)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, the relation between entity #range.n.04 and entity #tyrolean_alps.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #range.n.04 and entity #tyrolean_alps.n.01 is [GR(GL("wordnet"), "transe:relation", entity#range.n.04, entity#tyrolean_alps.n.01)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, from entity #white_goods.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #white_goods.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#white_goods.n.02, relation#_hyponym)-->r]. Reasoning Result: laundry.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #establishment.n.07 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #establishment.n.07 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#establishment.n.07)-->r]. Reasoning Result: prove.v.02.
Input: According to the WordNet knowledge graph, from entity #cavity.n.04, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #cavity.n.04, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cavity.n.04, relation#_part_of)-->r]. Reasoning Result: body.n.01.
Input: According to the WordNet knowledge graph, from entity #carnivora.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #carnivora.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#carnivora.n.01, relation#_member_meronym)-->r]. Reasoning Result: canidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#cookstove.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cookstove.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#cookstove.n.01)-->r]. Reasoning Result: stove.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#dilute.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #dilute.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#dilute.v.01)-->r]. Reasoning Result: weaken.v.01.
Input: According to the WordNet knowledge graph, from entity #curve.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #curve.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#curve.n.01, relation#_hyponym)-->r]. Reasoning Result: spiral.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity#sweatshirt.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #sweatshirt.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#sweatshirt.n.01)-->r]. Reasoning Result: sweat_suit.n.01.
Input: According to the WordNet knowledge graph, from entity #necessitate.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #necessitate.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#necessitate.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: need.n.02.
Input: According to the WordNet knowledge graph, from entity #choice.n.02, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #choice.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#choice.n.02, relation#_hyponym)-->r]. Reasoning Result: coloration.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #lepidoptera.n.01 and entity #satyridae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #lepidoptera.n.01 and entity #satyridae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#lepidoptera.n.01, entity#satyridae.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#stress.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #stress.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#stress.v.01)-->r]. Reasoning Result: bear_down.v.05.
Input: According to the WordNet knowledge graph, from entity #euphorbia.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #euphorbia.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#euphorbia.n.01, relation#_hypernym)-->r]. Reasoning Result: rosid_dicot_genus.n.01.
Input: According to the WordNet knowledge graph, from entity #colonizer.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #colonizer.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#colonizer.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: colonize.v.01.
Input: According to the WordNet knowledge graph, from entity #costume.v.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #costume.v.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#costume.v.02, relation#_derivationally_related_form)-->r]. Reasoning Result: costumier.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity#matrix_algebra.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #matrix_algebra.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#matrix_algebra.n.01)-->r]. Reasoning Result: mathematics.n.01.
Input: According to the WordNet knowledge graph, from entity #flow.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #flow.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#flow.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: stream.n.04.
Input: According to the WordNet knowledge graph, what is the relation between entity #travel.v.01 and entity #trail.v.03? Output: According to the WordNet knowledge graph, the relation between entity #travel.v.01 and entity #trail.v.03 is [GR(GL("wordnet"), "transe:relation", entity#travel.v.01, entity#trail.v.03)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #notch.n.03 and entity #indentation.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #notch.n.03 and entity #indentation.n.01 is [GR(GL("wordnet"), "transe:relation", entity#notch.n.03, entity#indentation.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #introduce.v.02 and entity #pioneer.n.01? Output: According to the WordNet knowledge graph, the relation between entity #introduce.v.02 and entity #pioneer.n.01 is [GR(GL("wordnet"), "transe:relation", entity#introduce.v.02, entity#pioneer.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #sturgeon.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sturgeon.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sturgeon.n.01, relation#_hypernym)-->r]. Reasoning Result: ganoid.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #slapper.n.01 and entity #spank.v.01? Output: According to the WordNet knowledge graph, the relation between entity #slapper.n.01 and entity #spank.v.01 is [GR(GL("wordnet"), "transe:relation", entity#slapper.n.01, entity#spank.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #clupeidae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #clupeidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#clupeidae.n.01)-->r]. Reasoning Result: alosa.n.01.
Input: According to the WordNet knowledge graph, from entity #pelecanidae.n.01, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #pelecanidae.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pelecanidae.n.01, relation#_member_meronym)-->r]. Reasoning Result: pelican.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #unify.v.01 and entity #unit.n.04? Output: According to the WordNet knowledge graph, the relation between entity #unify.v.01 and entity #unit.n.04 is [GR(GL("wordnet"), "transe:relation", entity#unify.v.01, entity#unit.n.04)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #usurpation.n.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #usurpation.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#usurpation.n.02, relation#_hypernym)-->r]. Reasoning Result: capture.n.01.
Input: According to the WordNet knowledge graph, from entity #epicyclic_train.n.01, via relation #_has_part, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #epicyclic_train.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#epicyclic_train.n.01, relation#_has_part)-->r]. Reasoning Result: planetary_gear.n.01.
Input: According to the WordNet knowledge graph, from entity #wakefulness.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #wakefulness.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#wakefulness.n.01, relation#_hyponym)-->r]. Reasoning Result: arousal.n.03.
Input: According to the WordNet knowledge graph, the relation between entity #reasonable.a.01 and entity #reasonableness.n.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #reasonable.a.01 and entity #reasonableness.n.05 is [GR(GL("wordnet"), "transe:relation", entity#reasonable.a.01, entity#reasonableness.n.05)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #induce.v.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #induce.v.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#induce.v.02, relation#_hyponym)-->r]. Reasoning Result: decide.v.03.
Input: According to the WordNet knowledge graph, from entity #pull.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pull.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pull.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: pull.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #actor.n.01 and entity #moore.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #actor.n.01 and entity #moore.n.02 is [GR(GL("wordnet"), "transe:relation", entity#actor.n.01, entity#moore.n.02)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #sprinkle.n.02 and entity #sprinkle.v.02? Output: According to the WordNet knowledge graph, the relation between entity #sprinkle.n.02 and entity #sprinkle.v.02 is [GR(GL("wordnet"), "transe:relation", entity#sprinkle.n.02, entity#sprinkle.v.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #genus_geranium.n.01, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #genus_geranium.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#genus_geranium.n.01, relation#_member_meronym)-->r]. Reasoning Result: cranesbill.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #communication_system.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #communication_system.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#communication_system.n.01)-->r]. Reasoning Result: telephone_system.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #asterid_dicot_genus.n.01 and entity #genus_catananche.n.01? Output: According to the WordNet knowledge graph, the relation between entity #asterid_dicot_genus.n.01 and entity #genus_catananche.n.01 is [GR(GL("wordnet"), "transe:relation", entity#asterid_dicot_genus.n.01, entity#genus_catananche.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #dinoflagellata.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #dinoflagellata.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#dinoflagellata.n.01)-->r]. Reasoning Result: animal_order.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cabernet_sauvignon_grape.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cabernet_sauvignon_grape.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#cabernet_sauvignon_grape.n.01)-->r]. Reasoning Result: vinifera.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #internalization.n.01 and entity #learning.n.01? Output: According to the WordNet knowledge graph, the relation between entity #internalization.n.01 and entity #learning.n.01 is [GR(GL("wordnet"), "transe:relation", entity#internalization.n.01, entity#learning.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #reflex.n.01 and entity #tremble.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #reflex.n.01 and entity #tremble.n.01 is [GR(GL("wordnet"), "transe:relation", entity#reflex.n.01, entity#tremble.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #whip_up.v.01 and entity #cooking.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #whip_up.v.01 and entity #cooking.n.01 is [GR(GL("wordnet"), "transe:relation", entity#whip_up.v.01, entity#cooking.n.01)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, the relation between entity #hamburger.n.01 and entity #ground_beef.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #hamburger.n.01 and entity #ground_beef.n.01 is [GR(GL("wordnet"), "transe:relation", entity#hamburger.n.01, entity#ground_beef.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #extraordinary.a.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #extraordinary.a.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_also_see, entity#extraordinary.a.01)-->r]. Reasoning Result: incomparable.a.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#basketball.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #basketball.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#basketball.n.01)-->r]. Reasoning Result: half.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #mephenytoin.n.01 and entity #anticonvulsant.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #mephenytoin.n.01 and entity #anticonvulsant.n.01 is [GR(GL("wordnet"), "transe:relation", entity#mephenytoin.n.01, entity#anticonvulsant.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #city.n.01, via relation #_instance_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #city.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#city.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: chongqing.n.01.
Input: According to the WordNet knowledge graph, from entity #circumstance.n.03, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #circumstance.n.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#circumstance.n.03, relation#_derivationally_related_form)-->r]. Reasoning Result: stipulate.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #audubon's_warbler.n.01 and entity #new_world_warbler.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #audubon's_warbler.n.01 and entity #new_world_warbler.n.01 is [GR(GL("wordnet"), "transe:relation", entity#audubon's_warbler.n.01, entity#new_world_warbler.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #anthyllis.n.01 and entity #papilionoideae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #anthyllis.n.01 and entity #papilionoideae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#anthyllis.n.01, entity#papilionoideae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, the relation between entity #transvestite.n.01 and entity #person.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #transvestite.n.01 and entity #person.n.01 is [GR(GL("wordnet"), "transe:relation", entity#transvestite.n.01, entity#person.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #merganser.n.01 and entity #sea_duck.n.01? Output: According to the WordNet knowledge graph, the relation between entity #merganser.n.01 and entity #sea_duck.n.01 is [GR(GL("wordnet"), "transe:relation", entity#merganser.n.01, entity#sea_duck.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #united_kingdom.n.01 and entity #stone.n.05? Output: According to the WordNet knowledge graph, the relation between entity #united_kingdom.n.01 and entity #stone.n.05 is [GR(GL("wordnet"), "transe:relation", entity#united_kingdom.n.01, entity#stone.n.05)-->r]. Reasoning Result: _member_of_domain_region.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #crispen.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #crispen.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#crispen.v.01)-->r]. Reasoning Result: heat.v.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_usage, we can obtain entity#cakewalk.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_usage, we can obtain entity #cakewalk.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_usage, entity#cakewalk.n.02)-->r]. Reasoning Result: trope.n.01.
Input: According to the WordNet knowledge graph, from entity #tursiops.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #tursiops.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tursiops.n.01, relation#_member_holonym)-->r]. Reasoning Result: delphinidae.n.01.
Input: According to the WordNet knowledge graph, from entity #oyster.v.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #oyster.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#oyster.v.01, relation#_hypernym)-->r]. Reasoning Result: gather.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #traveler.n.01 and entity #carrier.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #traveler.n.01 and entity #carrier.n.01 is [GR(GL("wordnet"), "transe:relation", entity#traveler.n.01, entity#carrier.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #cuba.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #cuba.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#cuba.n.01)-->r]. Reasoning Result: organization_of_american_states.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #sketch.n.03 and entity #sum_up.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #sketch.n.03 and entity #sum_up.v.01 is [GR(GL("wordnet"), "transe:relation", entity#sketch.n.03, entity#sum_up.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #estate_of_the_realm.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #estate_of_the_realm.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#estate_of_the_realm.n.01, relation#_hyponym)-->r]. Reasoning Result: third_estate.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #archosauria.n.01 and entity #class.n.07 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #archosauria.n.01 and entity #class.n.07 is [GR(GL("wordnet"), "transe:relation", entity#archosauria.n.01, entity#class.n.07)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #human_body.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #human_body.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#human_body.n.01, relation#_hyponym)-->r]. Reasoning Result: female_body.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#web.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #web.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#web.v.01)-->r]. Reasoning Result: web.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #ostentatious.a.01 and entity #ostentation.n.02? Output: According to the WordNet knowledge graph, the relation between entity #ostentatious.a.01 and entity #ostentation.n.02 is [GR(GL("wordnet"), "transe:relation", entity#ostentatious.a.01, entity#ostentation.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #kyphosus.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #kyphosus.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#kyphosus.n.01, relation#_member_holonym)-->r]. Reasoning Result: kyphosidae.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #perspiration.n.02 and entity #diaphoretic.a.01? Output: According to the WordNet knowledge graph, the relation between entity #perspiration.n.02 and entity #diaphoretic.a.01 is [GR(GL("wordnet"), "transe:relation", entity#perspiration.n.02, entity#diaphoretic.a.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #crystal_set.n.01 and entity #radio_receiver.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #crystal_set.n.01 and entity #radio_receiver.n.01 is [GR(GL("wordnet"), "transe:relation", entity#crystal_set.n.01, entity#radio_receiver.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #activity.n.01 and entity #operation.n.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #activity.n.01 and entity #operation.n.05 is [GR(GL("wordnet"), "transe:relation", entity#activity.n.01, entity#operation.n.05)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #elementary_particle.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #elementary_particle.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#elementary_particle.n.01, relation#_hypernym)-->r]. Reasoning Result: particle.n.02.
Input: According to the WordNet knowledge graph, from entity #accurse.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #accurse.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#accurse.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: execration.n.03.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #celandine.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #celandine.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#celandine.n.02)-->r]. Reasoning Result: chelidonium.n.01.
Input: According to the WordNet knowledge graph, from entity #selling.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #selling.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#selling.n.01, relation#_hyponym)-->r]. Reasoning Result: sale.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #elettaria.n.01 and entity #monocot_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #elettaria.n.01 and entity #monocot_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#elettaria.n.01, entity#monocot_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #wine_bottle.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #wine_bottle.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#wine_bottle.n.01, relation#_hypernym)-->r]. Reasoning Result: bottle.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #turnover.n.02 and entity #dish.n.02? Output: According to the WordNet knowledge graph, the relation between entity #turnover.n.02 and entity #dish.n.02 is [GR(GL("wordnet"), "transe:relation", entity#turnover.n.02, entity#dish.n.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #lacrimal_apparatus.n.01 and entity #lacrimal_duct.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #lacrimal_apparatus.n.01 and entity #lacrimal_duct.n.01 is [GR(GL("wordnet"), "transe:relation", entity#lacrimal_apparatus.n.01, entity#lacrimal_duct.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#sturdiness.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #sturdiness.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#sturdiness.n.03)-->r]. Reasoning Result: resoluteness.n.01.
Input: According to the WordNet knowledge graph, from entity #sao_tome_and_principe.n.01, via relation #_has_part, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sao_tome_and_principe.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sao_tome_and_principe.n.01, relation#_has_part)-->r]. Reasoning Result: principe.n.01.
Input: According to the WordNet knowledge graph, from entity #impinge.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #impinge.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#impinge.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: contact.n.04.
Input: According to the WordNet knowledge graph, from entity #fish_family.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #fish_family.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fish_family.n.01, relation#_hyponym)-->r]. Reasoning Result: siluridae.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #genus_cyrilla.n.01 and entity #dicot_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #genus_cyrilla.n.01 and entity #dicot_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#genus_cyrilla.n.01, entity#dicot_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#tongue.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #tongue.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#tongue.v.01)-->r]. Reasoning Result: tongue.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#roman_emperor.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #roman_emperor.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#roman_emperor.n.01)-->r]. Reasoning Result: antoninus.n.01.
Input: According to the WordNet knowledge graph, from entity #animal.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #animal.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#animal.n.01, relation#_hyponym)-->r]. Reasoning Result: male.n.01.
Input: According to the WordNet knowledge graph, from entity #solace.n.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #solace.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#solace.n.02, relation#_hypernym)-->r]. Reasoning Result: comfort.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #color.n.01 and entity #complexion.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #color.n.01 and entity #complexion.n.01 is [GR(GL("wordnet"), "transe:relation", entity#color.n.01, entity#complexion.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #singer.n.01 and entity #opera_star.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #singer.n.01 and entity #opera_star.n.01 is [GR(GL("wordnet"), "transe:relation", entity#singer.n.01, entity#opera_star.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #liliid_monocot_genus.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #liliid_monocot_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#liliid_monocot_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: bomarea.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #change_taste.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #change_taste.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#change_taste.v.01)-->r]. Reasoning Result: change.v.01.
Input: According to the WordNet knowledge graph, from entity #lock.n.06, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #lock.n.06, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#lock.n.06, relation#_derivationally_related_form)-->r]. Reasoning Result: lock.v.04.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#bird.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #bird.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#bird.n.01)-->r]. Reasoning Result: parrot.n.01.
Input: According to the WordNet knowledge graph, from entity #genus_cosmos.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #genus_cosmos.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#genus_cosmos.n.01, relation#_hypernym)-->r]. Reasoning Result: asterid_dicot_genus.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#suppressor.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #suppressor.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#suppressor.n.01)-->r]. Reasoning Result: suppress.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #ignition.n.03 and entity #erupt.v.03? Output: According to the WordNet knowledge graph, the relation between entity #ignition.n.03 and entity #erupt.v.03 is [GR(GL("wordnet"), "transe:relation", entity#ignition.n.03, entity#erupt.v.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #dancing.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #dancing.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dancing.n.01, relation#_hyponym)-->r]. Reasoning Result: ritual_dancing.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #inform.v.01 and entity #warn.v.01? Output: According to the WordNet knowledge graph, the relation between entity #inform.v.01 and entity #warn.v.01 is [GR(GL("wordnet"), "transe:relation", entity#inform.v.01, entity#warn.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #punic_war.n.01 and entity #lake_trasimenus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #punic_war.n.01 and entity #lake_trasimenus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#punic_war.n.01, entity#lake_trasimenus.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, from entity #crucifer.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #crucifer.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#crucifer.n.01, relation#_hyponym)-->r]. Reasoning Result: gold_of_pleasure.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #oscine.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #oscine.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#oscine.n.01)-->r]. Reasoning Result: accentor.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #circulate.v.02 and entity #sow.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #circulate.v.02 and entity #sow.v.02 is [GR(GL("wordnet"), "transe:relation", entity#circulate.v.02, entity#sow.v.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity#revolutionary_organization_17_november.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #revolutionary_organization_17_november.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#revolutionary_organization_17_november.n.01)-->r]. Reasoning Result: terrorist_organization.n.01.
Input: According to the WordNet knowledge graph, from entity #psophiidae.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #psophiidae.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#psophiidae.n.01, relation#_member_holonym)-->r]. Reasoning Result: gruiformes.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #bid_price.n.01 and entity #stock_exchange.n.01? Output: According to the WordNet knowledge graph, the relation between entity #bid_price.n.01 and entity #stock_exchange.n.01 is [GR(GL("wordnet"), "transe:relation", entity#bid_price.n.01, entity#stock_exchange.n.01)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, from entity #assassin_bug.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #assassin_bug.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#assassin_bug.n.01, relation#_hypernym)-->r]. Reasoning Result: heteropterous_insect.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #immerse.v.01 and entity #submerge.v.03? Output: According to the WordNet knowledge graph, the relation between entity #immerse.v.01 and entity #submerge.v.03 is [GR(GL("wordnet"), "transe:relation", entity#immerse.v.01, entity#submerge.v.03)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#state.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #state.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#state.v.01)-->r]. Reasoning Result: narrator.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#dilleniid_dicot_genus.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #dilleniid_dicot_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#dilleniid_dicot_genus.n.01)-->r]. Reasoning Result: genus_argemone.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #sphere.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #sphere.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#sphere.n.01)-->r]. Reasoning Result: province.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #measuring_instrument.n.01 and entity #hydrometer.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #measuring_instrument.n.01 and entity #hydrometer.n.01 is [GR(GL("wordnet"), "transe:relation", entity#measuring_instrument.n.01, entity#hydrometer.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #genus_galax.n.01, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #genus_galax.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#genus_galax.n.01, relation#_member_meronym)-->r]. Reasoning Result: galax.n.01.
Input: According to the WordNet knowledge graph, from entity #hour.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #hour.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#hour.n.02, relation#_hyponym)-->r]. Reasoning Result: twilight.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #sculptor.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #sculptor.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#sculptor.n.01)-->r]. Reasoning Result: epstein.n.01.
Input: According to the WordNet knowledge graph, from entity #grandma.n.01, via relation #_synset_domain_usage_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #grandma.n.01, via relation #_synset_domain_usage_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#grandma.n.01, relation#_synset_domain_usage_of)-->r]. Reasoning Result: united_kingdom.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #subscriber.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #subscriber.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#subscriber.n.01)-->r]. Reasoning Result: second.v.01.
Input: According to the WordNet knowledge graph, from entity #fungus_family.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #fungus_family.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fungus_family.n.01, relation#_hyponym)-->r]. Reasoning Result: peronosporaceae.n.01.
Input: According to the WordNet knowledge graph, from entity #chinese_gooseberry.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #chinese_gooseberry.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#chinese_gooseberry.n.01, relation#_has_part)-->r]. Reasoning Result: kiwi.n.03.
Input: According to the WordNet knowledge graph, from entity #physics.n.01, via relation #_member_of_domain_topic, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #physics.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#physics.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: isotropy.n.01.
Input: According to the WordNet knowledge graph, from entity #wind_instrument.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #wind_instrument.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#wind_instrument.n.01, relation#_hyponym)-->r]. Reasoning Result: free-reed_instrument.n.01.
Input: According to the WordNet knowledge graph, from entity #fabric.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #fabric.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fabric.n.01, relation#_hyponym)-->r]. Reasoning Result: cord.n.04.
Input: According to the WordNet knowledge graph, from entity #herb.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #herb.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#herb.n.01, relation#_hyponym)-->r]. Reasoning Result: false_foxglove.n.02.
Input: According to the WordNet knowledge graph, from entity #comandra.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #comandra.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#comandra.n.01, relation#_hypernym)-->r]. Reasoning Result: dilleniid_dicot_genus.n.01.
Input: According to the WordNet knowledge graph, from entity #nervous_tissue.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #nervous_tissue.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#nervous_tissue.n.01, relation#_hyponym)-->r]. Reasoning Result: white_matter.n.01.
Input: According to the WordNet knowledge graph, from entity #computer_memory_unit.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #computer_memory_unit.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#computer_memory_unit.n.01, relation#_hyponym)-->r]. Reasoning Result: petabit.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #proof.n.04 and entity #proof.v.01? Output: According to the WordNet knowledge graph, the relation between entity #proof.n.04 and entity #proof.v.01 is [GR(GL("wordnet"), "transe:relation", entity#proof.n.04, entity#proof.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #military.n.01, via relation #_member_of_domain_topic, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #military.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#military.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: order.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #remove.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #remove.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#remove.v.01)-->r]. Reasoning Result: pit.v.03.
Input: According to the WordNet knowledge graph, from entity #laud.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #laud.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#laud.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: praise.n.01.
Input: According to the WordNet knowledge graph, from entity #hood.n.08, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #hood.n.08, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#hood.n.08, relation#_hypernym)-->r]. Reasoning Result: headdress.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#troy_unit.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #troy_unit.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#troy_unit.n.01)-->r]. Reasoning Result: ounce.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #expansion.n.03 and entity #discussion.n.01? Output: According to the WordNet knowledge graph, the relation between entity #expansion.n.03 and entity #discussion.n.01 is [GR(GL("wordnet"), "transe:relation", entity#expansion.n.03, entity#discussion.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #extremity.n.05, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #extremity.n.05, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#extremity.n.05, relation#_hyponym)-->r]. Reasoning Result: finger.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #lemaireocereus.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #lemaireocereus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#lemaireocereus.n.01)-->r]. Reasoning Result: caryophylloid_dicot_genus.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#maximize.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #maximize.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#maximize.v.02)-->r]. Reasoning Result: exploit.v.02.
Input: According to the WordNet knowledge graph, from entity #halle.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #halle.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#halle.n.01, relation#_part_of)-->r]. Reasoning Result: germany.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #military_installation.n.01 and entity #base.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #military_installation.n.01 and entity #base.n.01 is [GR(GL("wordnet"), "transe:relation", entity#military_installation.n.01, entity#base.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #person.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #person.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#person.n.01)-->r]. Reasoning Result: visionary.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #city.n.01 and entity #lausanne.n.01? Output: According to the WordNet knowledge graph, the relation between entity #city.n.01 and entity #lausanne.n.01 is [GR(GL("wordnet"), "transe:relation", entity#city.n.01, entity#lausanne.n.01)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #shrub.n.01 and entity #angel's_trumpet.n.02? Output: According to the WordNet knowledge graph, the relation between entity #shrub.n.01 and entity #angel's_trumpet.n.02 is [GR(GL("wordnet"), "transe:relation", entity#shrub.n.01, entity#angel's_trumpet.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #nandrolone.n.01 and entity #androgen.n.01? Output: According to the WordNet knowledge graph, the relation between entity #nandrolone.n.01 and entity #androgen.n.01 is [GR(GL("wordnet"), "transe:relation", entity#nandrolone.n.01, entity#androgen.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #postulate.n.01 and entity #premise.n.01? Output: According to the WordNet knowledge graph, the relation between entity #postulate.n.01 and entity #premise.n.01 is [GR(GL("wordnet"), "transe:relation", entity#postulate.n.01, entity#premise.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #zabrze.n.01 and entity #poland.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #zabrze.n.01 and entity #poland.n.01 is [GR(GL("wordnet"), "transe:relation", entity#zabrze.n.01, entity#poland.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, what is the relation between entity #disputant.n.01 and entity #denier.n.03? Output: According to the WordNet knowledge graph, the relation between entity #disputant.n.01 and entity #denier.n.03 is [GR(GL("wordnet"), "transe:relation", entity#disputant.n.01, entity#denier.n.03)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #inside_track.n.02, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #inside_track.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#inside_track.n.02, relation#_hypernym)-->r]. Reasoning Result: path.n.04.
Input: According to the WordNet knowledge graph, from entity #ovary.n.02, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #ovary.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ovary.n.02, relation#_hypernym)-->r]. Reasoning Result: gonad.n.01.
Input: According to the WordNet knowledge graph, from entity #defecator.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #defecator.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#defecator.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: evacuate.v.05.
Input: According to the WordNet knowledge graph, what is the relation between entity #reconsider.v.01 and entity #reconsideration.n.02? Output: According to the WordNet knowledge graph, the relation between entity #reconsider.v.01 and entity #reconsideration.n.02 is [GR(GL("wordnet"), "transe:relation", entity#reconsider.v.01, entity#reconsideration.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #supporter.n.01 and entity #champion.v.01? Output: According to the WordNet knowledge graph, the relation between entity #supporter.n.01 and entity #champion.v.01 is [GR(GL("wordnet"), "transe:relation", entity#supporter.n.01, entity#champion.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #internalize.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #internalize.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#internalize.v.01)-->r]. Reasoning Result: inside.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#mound.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #mound.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#mound.v.01)-->r]. Reasoning Result: knoll.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #perissodactyla.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #perissodactyla.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#perissodactyla.n.01)-->r]. Reasoning Result: odd-toed_ungulate.n.01.
Input: According to the WordNet knowledge graph, from entity #respiratory_disease.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #respiratory_disease.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#respiratory_disease.n.01, relation#_hyponym)-->r]. Reasoning Result: emphysema.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #parquet.n.02 and entity #seating.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #parquet.n.02 and entity #seating.n.01 is [GR(GL("wordnet"), "transe:relation", entity#parquet.n.02, entity#seating.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#actor.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #actor.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#actor.n.01)-->r]. Reasoning Result: barrymore.n.03.
Input: According to the WordNet knowledge graph, the relation between entity #mot.n.02 and entity #united_kingdom.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #mot.n.02 and entity #united_kingdom.n.01 is [GR(GL("wordnet"), "transe:relation", entity#mot.n.02, entity#united_kingdom.n.01)-->r]. Reasoning Result: _synset_domain_region_of.
Input: According to the WordNet knowledge graph, from entity #desire.n.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #desire.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#desire.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: hope.v.01.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_usage_of, we can obtain entity#plural.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_usage_of, we can obtain entity #plural.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_usage_of, entity#plural.n.01)-->r]. Reasoning Result: remains.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #express.v.01 and entity #imply.v.02? Output: According to the WordNet knowledge graph, the relation between entity #express.v.01 and entity #imply.v.02 is [GR(GL("wordnet"), "transe:relation", entity#express.v.01, entity#imply.v.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #change.v.01 and entity #purify.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #change.v.01 and entity #purify.v.02 is [GR(GL("wordnet"), "transe:relation", entity#change.v.01, entity#purify.v.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #conversion.n.06, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #conversion.n.06, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#conversion.n.06, relation#_hypernym)-->r]. Reasoning Result: change.n.01.
Input: According to the WordNet knowledge graph, from entity #annwfn.n.01, via relation #_synset_domain_topic_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #annwfn.n.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#annwfn.n.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: mythology.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #alnus.n.01 and entity #common_alder.n.01? Output: According to the WordNet knowledge graph, the relation between entity #alnus.n.01 and entity #common_alder.n.01 is [GR(GL("wordnet"), "transe:relation", entity#alnus.n.01, entity#common_alder.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, the relation between entity #insight.n.03 and entity #discovery.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #insight.n.03 and entity #discovery.n.03 is [GR(GL("wordnet"), "transe:relation", entity#insight.n.03, entity#discovery.n.03)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#saint.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #saint.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#saint.n.01)-->r]. Reasoning Result: john.n.03.
Input: According to the WordNet knowledge graph, from entity #fake.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #fake.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fake.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: talk_through_one's_hat.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #gerres.n.01 and entity #gerreidae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #gerres.n.01 and entity #gerreidae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#gerres.n.01, entity#gerreidae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#sealant.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #sealant.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#sealant.n.01)-->r]. Reasoning Result: seal.v.01.
Input: According to the WordNet knowledge graph, from entity #polish.n.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #polish.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#polish.n.02, relation#_hypernym)-->r]. Reasoning Result: perfection.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #sium.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #sium.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#sium.n.01)-->r]. Reasoning Result: greater_water_parsnip.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #callicebus.n.01 and entity #titi.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #callicebus.n.01 and entity #titi.n.03 is [GR(GL("wordnet"), "transe:relation", entity#callicebus.n.01, entity#titi.n.03)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, what is the relation between entity #geococcyx.n.01 and entity #cuculidae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #geococcyx.n.01 and entity #cuculidae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#geococcyx.n.01, entity#cuculidae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#simple_leaf.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #simple_leaf.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#simple_leaf.n.01)-->r]. Reasoning Result: leaf.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #beef_loin.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #beef_loin.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#beef_loin.n.01)-->r]. Reasoning Result: cut_of_beef.n.01.
Input: According to the WordNet knowledge graph, from entity #rug.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #rug.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#rug.n.01, relation#_has_part)-->r]. Reasoning Result: edging.n.01.
Input: According to the WordNet knowledge graph, from entity #bromo-seltzer.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #bromo-seltzer.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#bromo-seltzer.n.01, relation#_hypernym)-->r]. Reasoning Result: antacid.n.01.
Input: According to the WordNet knowledge graph, from entity #candor.n.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #candor.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#candor.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: direct.a.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #conduction.n.01 and entity #physical_phenomenon.n.01? Output: According to the WordNet knowledge graph, the relation between entity #conduction.n.01 and entity #physical_phenomenon.n.01 is [GR(GL("wordnet"), "transe:relation", entity#conduction.n.01, entity#physical_phenomenon.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #paved_surface.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #paved_surface.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#paved_surface.n.01, relation#_hyponym)-->r]. Reasoning Result: skidpan.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #talk.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #talk.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#talk.v.02)-->r]. Reasoning Result: chatter.v.05.
Input: According to the WordNet knowledge graph, from entity #enroll.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #enroll.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#enroll.v.01, relation#_hyponym)-->r]. Reasoning Result: matriculate.v.01.
Input: According to the WordNet knowledge graph, from entity #sedate.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sedate.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sedate.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: tranquilizer.n.01.
Input: According to the WordNet knowledge graph, from entity #voice.v.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #voice.v.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#voice.v.02, relation#_derivationally_related_form)-->r]. Reasoning Result: singer.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #hand.n.01 and entity #paw.v.02? Output: According to the WordNet knowledge graph, the relation between entity #hand.n.01 and entity #paw.v.02 is [GR(GL("wordnet"), "transe:relation", entity#hand.n.01, entity#paw.v.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #act.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #act.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#act.v.01, relation#_hyponym)-->r]. Reasoning Result: force.v.08.
Input: According to the WordNet knowledge graph, from entity #flightiness.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #flightiness.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#flightiness.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: arbitrary.a.01.
Input: According to the WordNet knowledge graph, the relation between entity #genetics.n.01 and entity #mendel's_law.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #genetics.n.01 and entity #mendel's_law.n.01 is [GR(GL("wordnet"), "transe:relation", entity#genetics.n.01, entity#mendel's_law.n.01)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #malacopterygii.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #malacopterygii.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#malacopterygii.n.01)-->r]. Reasoning Result: trachipteridae.n.01.
Input: According to the WordNet knowledge graph, from entity #nubian_desert.n.01, via relation #_part_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #nubian_desert.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#nubian_desert.n.01, relation#_part_of)-->r]. Reasoning Result: arabian_desert.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #task_force.n.01 and entity #military_unit.n.01? Output: According to the WordNet knowledge graph, the relation between entity #task_force.n.01 and entity #military_unit.n.01 is [GR(GL("wordnet"), "transe:relation", entity#task_force.n.01, entity#military_unit.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #mathematics.n.01, via relation #_member_of_domain_topic, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #mathematics.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mathematics.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: linear.a.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#ball_field.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #ball_field.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#ball_field.n.01)-->r]. Reasoning Result: outfield.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#branching.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #branching.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#branching.n.01)-->r]. Reasoning Result: branch.v.02.
Input: According to the WordNet knowledge graph, from entity #derivative_instrument.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #derivative_instrument.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#derivative_instrument.n.01, relation#_hypernym)-->r]. Reasoning Result: legal_document.n.01.
Input: According to the WordNet knowledge graph, from entity #binocular_vision.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #binocular_vision.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#binocular_vision.n.01, relation#_hypernym)-->r]. Reasoning Result: sight.n.03.
Input: According to the WordNet knowledge graph, the relation between entity #oxyphencyclimine.n.01 and entity #trade_name.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #oxyphencyclimine.n.01 and entity #trade_name.n.01 is [GR(GL("wordnet"), "transe:relation", entity#oxyphencyclimine.n.01, entity#trade_name.n.01)-->r]. Reasoning Result: _synset_domain_usage_of.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#idle.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #idle.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#idle.v.02)-->r]. Reasoning Result: bum.v.02.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #nominate.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #nominate.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#nominate.v.02)-->r]. Reasoning Result: nominator.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #roarer.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #roarer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#roarer.n.01)-->r]. Reasoning Result: bellow.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #induction.n.05 and entity #induce.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #induction.n.05 and entity #induce.v.01 is [GR(GL("wordnet"), "transe:relation", entity#induction.n.05, entity#induce.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#government_agent.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #government_agent.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#government_agent.n.01)-->r]. Reasoning Result: agent.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #invader.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #invader.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#invader.n.01)-->r]. Reasoning Result: intruder.n.01.
Input: According to the WordNet knowledge graph, from entity #animal_order.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #animal_order.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#animal_order.n.01, relation#_hyponym)-->r]. Reasoning Result: anoplura.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#acacia.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #acacia.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#acacia.n.01)-->r]. Reasoning Result: tree.n.01.
Input: According to the WordNet knowledge graph, from entity #key.n.08, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #key.n.08, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#key.n.08, relation#_hypernym)-->r]. Reasoning Result: coral_reef.n.01.
Input: According to the WordNet knowledge graph, from entity #family.n.06, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #family.n.06, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#family.n.06, relation#_hyponym)-->r]. Reasoning Result: fungus_family.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #earth.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #earth.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#earth.n.02)-->r]. Reasoning Result: earth.v.02.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #imprisonment.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #imprisonment.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#imprisonment.n.01)-->r]. Reasoning Result: law.n.01.
Input: According to the WordNet knowledge graph, from entity #arrive.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #arrive.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#arrive.v.01, relation#_hyponym)-->r]. Reasoning Result: pull_in.v.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #obtain.v.01 and entity #procure.v.01? Output: According to the WordNet knowledge graph, the relation between entity #obtain.v.01 and entity #procure.v.01 is [GR(GL("wordnet"), "transe:relation", entity#obtain.v.01, entity#procure.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #restoration.n.02 and entity #restore.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #restoration.n.02 and entity #restore.v.01 is [GR(GL("wordnet"), "transe:relation", entity#restoration.n.02, entity#restore.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #animal_order.n.01 and entity #acanthopterygii.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #animal_order.n.01 and entity #acanthopterygii.n.01 is [GR(GL("wordnet"), "transe:relation", entity#animal_order.n.01, entity#acanthopterygii.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #anostraca.n.01 and entity #branchiopoda.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #anostraca.n.01 and entity #branchiopoda.n.01 is [GR(GL("wordnet"), "transe:relation", entity#anostraca.n.01, entity#branchiopoda.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #dent.n.03, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #dent.n.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dent.n.03, relation#_hypernym)-->r]. Reasoning Result: blemish.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#time_period.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #time_period.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#time_period.n.01)-->r]. Reasoning Result: overtime.n.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #insect.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #insect.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#insect.n.01)-->r]. Reasoning Result: beetle.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#musician.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #musician.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#musician.n.01)-->r]. Reasoning Result: piper.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#lake_trout.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #lake_trout.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#lake_trout.n.02)-->r]. Reasoning Result: trout.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #billfish.n.02 and entity #istiophoridae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #billfish.n.02 and entity #istiophoridae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#billfish.n.02, entity#istiophoridae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#family.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #family.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#family.n.02)-->r]. Reasoning Result: marx_brothers.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #jerk.v.05 and entity #push.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #jerk.v.05 and entity #push.v.01 is [GR(GL("wordnet"), "transe:relation", entity#jerk.v.05, entity#push.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #land.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #land.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#land.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: landing.n.03.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #terrorism.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #terrorism.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#terrorism.n.01)-->r]. Reasoning Result: dirty_war.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #galeocerdo.n.01 and entity #fish_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #galeocerdo.n.01 and entity #fish_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#galeocerdo.n.01, entity#fish_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#subshrub.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #subshrub.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#subshrub.n.01)-->r]. Reasoning Result: caltrop.n.01.
Input: According to the WordNet knowledge graph, from entity #amazon.n.03, via relation #_instance_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #amazon.n.03, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#amazon.n.03, relation#_instance_hypernym)-->r]. Reasoning Result: river.n.01.
Input: According to the WordNet knowledge graph, from entity #dessert.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #dessert.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dessert.n.01, relation#_hypernym)-->r]. Reasoning Result: course.n.07.
Input: According to the WordNet knowledge graph, what is the relation between entity #talk.v.01 and entity #dish_the_dirt.v.01? Output: According to the WordNet knowledge graph, the relation between entity #talk.v.01 and entity #dish_the_dirt.v.01 is [GR(GL("wordnet"), "transe:relation", entity#talk.v.01, entity#dish_the_dirt.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #australian_desert.n.01 and entity #australia.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #australian_desert.n.01 and entity #australia.n.02 is [GR(GL("wordnet"), "transe:relation", entity#australian_desert.n.01, entity#australia.n.02)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, from entity #rate.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #rate.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#rate.v.01, relation#_hyponym)-->r]. Reasoning Result: downgrade.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #school_assignment.n.01 and entity #homework.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #school_assignment.n.01 and entity #homework.n.01 is [GR(GL("wordnet"), "transe:relation", entity#school_assignment.n.01, entity#homework.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #confront.v.02 and entity #set_about.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #confront.v.02 and entity #set_about.v.01 is [GR(GL("wordnet"), "transe:relation", entity#confront.v.02, entity#set_about.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #change_state.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #change_state.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#change_state.v.01)-->r]. Reasoning Result: sour.v.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #country.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #country.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#country.n.02)-->r]. Reasoning Result: fatherland.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#wellhead.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #wellhead.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#wellhead.n.01)-->r]. Reasoning Result: beginning.n.04.
Input: According to the WordNet knowledge graph, the relation between entity #strip.n.06 and entity #strip.v.13 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #strip.n.06 and entity #strip.v.13 is [GR(GL("wordnet"), "transe:relation", entity#strip.n.06, entity#strip.v.13)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #substance_abuse.n.01 and entity #misuse.n.01? Output: According to the WordNet knowledge graph, the relation between entity #substance_abuse.n.01 and entity #misuse.n.01 is [GR(GL("wordnet"), "transe:relation", entity#substance_abuse.n.01, entity#misuse.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #dewberry.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #dewberry.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#dewberry.n.01)-->r]. Reasoning Result: blackberry.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #united_kingdom.n.01 and entity #cuppa.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #united_kingdom.n.01 and entity #cuppa.n.01 is [GR(GL("wordnet"), "transe:relation", entity#united_kingdom.n.01, entity#cuppa.n.01)-->r]. Reasoning Result: _member_of_domain_region.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#oscillation.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #oscillation.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#oscillation.n.01)-->r]. Reasoning Result: hover.v.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#country.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #country.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#country.n.02)-->r]. Reasoning Result: jamaica.n.01.
Input: According to the WordNet knowledge graph, from entity #trigonometry.n.01, via relation #_synset_domain_topic_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #trigonometry.n.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#trigonometry.n.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: mathematics.n.01.
Input: According to the WordNet knowledge graph, from entity #incriminate.v.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #incriminate.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#incriminate.v.01, relation#_hypernym)-->r]. Reasoning Result: suggest.v.05.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #virginia.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #virginia.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#virginia.n.01)-->r]. Reasoning Result: clinch_river.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #lay_waste_to.v.01 and entity #ravage.n.01? Output: According to the WordNet knowledge graph, the relation between entity #lay_waste_to.v.01 and entity #ravage.n.01 is [GR(GL("wordnet"), "transe:relation", entity#lay_waste_to.v.01, entity#ravage.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #pamperer.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #pamperer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#pamperer.n.01)-->r]. Reasoning Result: person.n.01.
Input: According to the WordNet knowledge graph, from entity #string.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #string.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#string.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: intertwine.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #cultivate.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #cultivate.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#cultivate.v.01)-->r]. Reasoning Result: cultivation.n.04.
Input: According to the WordNet knowledge graph, the relation between entity #refuse.v.01 and entity #react.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #refuse.v.01 and entity #react.v.01 is [GR(GL("wordnet"), "transe:relation", entity#refuse.v.01, entity#react.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #person.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #person.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#person.n.01, relation#_hyponym)-->r]. Reasoning Result: stooper.n.02.
Input: According to the WordNet knowledge graph, from entity #change_shape.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #change_shape.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#change_shape.v.01, relation#_hyponym)-->r]. Reasoning Result: unfold.v.03.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#settler.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #settler.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#settler.n.01)-->r]. Reasoning Result: settle.v.04.
Input: According to the WordNet knowledge graph, from entity #noise.n.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #noise.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#noise.n.02, relation#_hypernym)-->r]. Reasoning Result: sound.n.02.
Input: According to the WordNet knowledge graph, from entity #cucurbitaceae.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #cucurbitaceae.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cucurbitaceae.n.01, relation#_member_meronym)-->r]. Reasoning Result: lagenaria.n.01.
Input: According to the WordNet knowledge graph, from entity #minute.n.04, via relation #_part_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #minute.n.04, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#minute.n.04, relation#_part_of)-->r]. Reasoning Result: degree.n.04.
Input: According to the WordNet knowledge graph, from entity #backup.n.04, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #backup.n.04, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#backup.n.04, relation#_hypernym)-->r]. Reasoning Result: duplicate.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #united_kingdom.n.01 and entity #home-farm.n.01? Output: According to the WordNet knowledge graph, the relation between entity #united_kingdom.n.01 and entity #home-farm.n.01 is [GR(GL("wordnet"), "transe:relation", entity#united_kingdom.n.01, entity#home-farm.n.01)-->r]. Reasoning Result: _member_of_domain_region.
Input: According to the WordNet knowledge graph, the relation between entity #religion.n.01 and entity #traditionalism.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #religion.n.01 and entity #traditionalism.n.02 is [GR(GL("wordnet"), "transe:relation", entity#religion.n.01, entity#traditionalism.n.02)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#acoustics.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #acoustics.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#acoustics.n.01)-->r]. Reasoning Result: phonetics.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#race.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #race.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#race.n.01)-->r]. Reasoning Result: race.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #acacia.n.01 and entity #catechu.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #acacia.n.01 and entity #catechu.n.02 is [GR(GL("wordnet"), "transe:relation", entity#acacia.n.01, entity#catechu.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #fighter.n.02, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #fighter.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fighter.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: contend.v.06.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#driveway.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #driveway.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#driveway.n.01)-->r]. Reasoning Result: turnaround.n.03.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#american.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #american.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#american.n.03)-->r]. Reasoning Result: inhabitant.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#islamic_calendar_month.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #islamic_calendar_month.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#islamic_calendar_month.n.01)-->r]. Reasoning Result: ramadan.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#steering_system.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #steering_system.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#steering_system.n.01)-->r]. Reasoning Result: mechanism.n.05.
Input: According to the WordNet knowledge graph, what is the relation between entity #suffocation.n.01 and entity #choking.n.02? Output: According to the WordNet knowledge graph, the relation between entity #suffocation.n.01 and entity #choking.n.02 is [GR(GL("wordnet"), "transe:relation", entity#suffocation.n.01, entity#choking.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #crex.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #crex.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#crex.n.01, relation#_hypernym)-->r]. Reasoning Result: bird_genus.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #immerse.v.01 and entity #diver.n.02? Output: According to the WordNet knowledge graph, the relation between entity #immerse.v.01 and entity #diver.n.02 is [GR(GL("wordnet"), "transe:relation", entity#immerse.v.01, entity#diver.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #reference.n.08 and entity #reference.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #reference.n.08 and entity #reference.v.01 is [GR(GL("wordnet"), "transe:relation", entity#reference.n.08, entity#reference.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #organist.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #organist.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#organist.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: organ.n.05.
Input: According to the WordNet knowledge graph, from entity #taste.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #taste.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#taste.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: taste.n.06.
Input: According to the WordNet knowledge graph, from entity #american_standard_code_for_information_interchange.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #american_standard_code_for_information_interchange.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#american_standard_code_for_information_interchange.n.01, relation#_hypernym)-->r]. Reasoning Result: code.n.03.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_usage_of, we can obtain entity#plural.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_usage_of, we can obtain entity #plural.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_usage_of, entity#plural.n.01)-->r]. Reasoning Result: manners.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #germany.n.01 and entity #black_forest.n.01? Output: According to the WordNet knowledge graph, the relation between entity #germany.n.01 and entity #black_forest.n.01 is [GR(GL("wordnet"), "transe:relation", entity#germany.n.01, entity#black_forest.n.01)-->r]. Reasoning Result: _member_of_domain_region.
Input: According to the WordNet knowledge graph, what is the relation between entity #suggest.v.03 and entity #inkling.n.01? Output: According to the WordNet knowledge graph, the relation between entity #suggest.v.03 and entity #inkling.n.01 is [GR(GL("wordnet"), "transe:relation", entity#suggest.v.03, entity#inkling.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#asterid_dicot_genus.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #asterid_dicot_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#asterid_dicot_genus.n.01)-->r]. Reasoning Result: agastache.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#defecator.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #defecator.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#defecator.n.01)-->r]. Reasoning Result: evacuate.v.05.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#animal_order.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #animal_order.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#animal_order.n.01)-->r]. Reasoning Result: labyrinthodontia.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #commissioner.n.02 and entity #committee.n.01? Output: According to the WordNet knowledge graph, the relation between entity #commissioner.n.02 and entity #committee.n.01 is [GR(GL("wordnet"), "transe:relation", entity#commissioner.n.02, entity#committee.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #cervidae.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #cervidae.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cervidae.n.01, relation#_member_meronym)-->r]. Reasoning Result: deer.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #nicandra.n.01 and entity #apple_of_peru.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #nicandra.n.01 and entity #apple_of_peru.n.01 is [GR(GL("wordnet"), "transe:relation", entity#nicandra.n.01, entity#apple_of_peru.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #organic_process.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #organic_process.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#organic_process.n.01)-->r]. Reasoning Result: replication.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #close.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #close.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#close.v.02)-->r]. Reasoning Result: change_state.v.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#bunch.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #bunch.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#bunch.n.01)-->r]. Reasoning Result: pleiades.n.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #pot.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #pot.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#pot.n.01)-->r]. Reasoning Result: kettle.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #tabasco_pepper.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #tabasco_pepper.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#tabasco_pepper.n.01)-->r]. Reasoning Result: capsicum.n.01.
Input: According to the WordNet knowledge graph, from entity #song_of_songs.n.01, via relation #_part_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #song_of_songs.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#song_of_songs.n.01, relation#_part_of)-->r]. Reasoning Result: old_testament.n.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #series.n.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #series.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#series.n.03)-->r]. Reasoning Result: installment.n.03.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#physaria.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #physaria.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#physaria.n.01)-->r]. Reasoning Result: cruciferae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #boast.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #boast.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#boast.v.01)-->r]. Reasoning Result: overstate.v.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#oscine.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #oscine.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#oscine.n.01)-->r]. Reasoning Result: swallow.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #heckler.n.01 and entity #troublemaker.n.01? Output: According to the WordNet knowledge graph, the relation between entity #heckler.n.01 and entity #troublemaker.n.01 is [GR(GL("wordnet"), "transe:relation", entity#heckler.n.01, entity#troublemaker.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #attach.v.01 and entity #fasten.v.01? Output: According to the WordNet knowledge graph, the relation between entity #attach.v.01 and entity #fasten.v.01 is [GR(GL("wordnet"), "transe:relation", entity#attach.v.01, entity#fasten.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#hand.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #hand.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#hand.n.01)-->r]. Reasoning Result: pass.v.05.
Input: According to the WordNet knowledge graph, from entity #carissa_plum.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #carissa_plum.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#carissa_plum.n.01, relation#_hypernym)-->r]. Reasoning Result: edible_fruit.n.01.
Input: According to the WordNet knowledge graph, from entity #colloquialism.n.01, via relation #_member_of_domain_usage, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #colloquialism.n.01, via relation #_member_of_domain_usage, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#colloquialism.n.01, relation#_member_of_domain_usage)-->r]. Reasoning Result: plague.n.05.
Input: According to the WordNet knowledge graph, from entity #processing.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #processing.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#processing.n.01, relation#_hypernym)-->r]. Reasoning Result: process.n.06.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#fertilizer.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #fertilizer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#fertilizer.n.01)-->r]. Reasoning Result: fertilize.v.01.
Input: According to the WordNet knowledge graph, from entity #be.v.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #be.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#be.v.01, relation#_hyponym)-->r]. Reasoning Result: stand.v.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #work.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #work.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#work.v.02)-->r]. Reasoning Result: freelance.v.01.
Input: According to the WordNet knowledge graph, from entity #suppression.n.03, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #suppression.n.03, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#suppression.n.03, relation#_hyponym)-->r]. Reasoning Result: crackdown.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #nautical_mile.n.02 and entity #nautical_linear_unit.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #nautical_mile.n.02 and entity #nautical_linear_unit.n.01 is [GR(GL("wordnet"), "transe:relation", entity#nautical_mile.n.02, entity#nautical_linear_unit.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #actor.n.01 and entity #actress.n.01? Output: According to the WordNet knowledge graph, the relation between entity #actor.n.01 and entity #actress.n.01 is [GR(GL("wordnet"), "transe:relation", entity#actor.n.01, entity#actress.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#cognition.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #cognition.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#cognition.n.01)-->r]. Reasoning Result: inability.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #cranium.n.01 and entity #frontal_suture.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #cranium.n.01 and entity #frontal_suture.n.01 is [GR(GL("wordnet"), "transe:relation", entity#cranium.n.01, entity#frontal_suture.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, what is the relation between entity #shake.v.09 and entity #handshake.n.01? Output: According to the WordNet knowledge graph, the relation between entity #shake.v.09 and entity #handshake.n.01 is [GR(GL("wordnet"), "transe:relation", entity#shake.v.09, entity#handshake.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #bovidae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #bovidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#bovidae.n.01)-->r]. Reasoning Result: bibos.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #asclepiadaceae.n.01 and entity #genus_hoya.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #asclepiadaceae.n.01 and entity #genus_hoya.n.01 is [GR(GL("wordnet"), "transe:relation", entity#asclepiadaceae.n.01, entity#genus_hoya.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #cast.n.03, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #cast.n.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cast.n.03, relation#_derivationally_related_form)-->r]. Reasoning Result: cast.v.07.
Input: According to the WordNet knowledge graph, what is the relation between entity #breastplate.n.01 and entity #armor_plate.n.01? Output: According to the WordNet knowledge graph, the relation between entity #breastplate.n.01 and entity #armor_plate.n.01 is [GR(GL("wordnet"), "transe:relation", entity#breastplate.n.01, entity#armor_plate.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #sew.v.02 and entity #tailor.n.01? Output: According to the WordNet knowledge graph, the relation between entity #sew.v.02 and entity #tailor.n.01 is [GR(GL("wordnet"), "transe:relation", entity#sew.v.02, entity#tailor.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #delineate.v.03, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #delineate.v.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#delineate.v.03, relation#_hypernym)-->r]. Reasoning Result: draw.v.06.
Input: According to the WordNet knowledge graph, from entity #taxodiaceae.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #taxodiaceae.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#taxodiaceae.n.01, relation#_hypernym)-->r]. Reasoning Result: gymnosperm_family.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#hope.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #hope.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#hope.v.02)-->r]. Reasoning Result: promise.n.02.
Input: According to the WordNet knowledge graph, from entity #fidelity.n.02, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #fidelity.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fidelity.n.02, relation#_hyponym)-->r]. Reasoning Result: loyalty.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #imago.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #imago.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#imago.n.01)-->r]. Reasoning Result: prototype.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #nucleoside_reverse_transcriptase_inhibitor.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #nucleoside_reverse_transcriptase_inhibitor.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#nucleoside_reverse_transcriptase_inhibitor.n.01)-->r]. Reasoning Result: reverse_transcriptase_inhibitor.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#shelve.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #shelve.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#shelve.v.02)-->r]. Reasoning Result: shelver.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #report.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #report.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#report.v.01)-->r]. Reasoning Result: report.n.03.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #band_together.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #band_together.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#band_together.v.01)-->r]. Reasoning Result: confederation.n.03.
Input: According to the WordNet knowledge graph, the relation between entity #caprimulgiformes.n.01 and entity #aves.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #caprimulgiformes.n.01 and entity #aves.n.01 is [GR(GL("wordnet"), "transe:relation", entity#caprimulgiformes.n.01, entity#aves.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, what is the relation between entity #wick.n.02 and entity #candle.n.01? Output: According to the WordNet knowledge graph, the relation between entity #wick.n.02 and entity #candle.n.01 is [GR(GL("wordnet"), "transe:relation", entity#wick.n.02, entity#candle.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#small_intestine.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #small_intestine.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#small_intestine.n.01)-->r]. Reasoning Result: ileal_artery.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #condition.n.01 and entity #atmosphere.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #condition.n.01 and entity #atmosphere.n.01 is [GR(GL("wordnet"), "transe:relation", entity#condition.n.01, entity#atmosphere.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #parasite.n.01 and entity #organism.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #parasite.n.01 and entity #organism.n.01 is [GR(GL("wordnet"), "transe:relation", entity#parasite.n.01, entity#organism.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #expel.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #expel.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#expel.v.01, relation#_hyponym)-->r]. Reasoning Result: eject.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #preemption.n.01 and entity #law.n.01? Output: According to the WordNet knowledge graph, the relation between entity #preemption.n.01 and entity #law.n.01 is [GR(GL("wordnet"), "transe:relation", entity#preemption.n.01, entity#law.n.01)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #rocking_chair.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #rocking_chair.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#rocking_chair.n.01)-->r]. Reasoning Result: chair.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #sexual_desire.n.01 and entity #desire.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #sexual_desire.n.01 and entity #desire.n.01 is [GR(GL("wordnet"), "transe:relation", entity#sexual_desire.n.01, entity#desire.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#money_handler.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #money_handler.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#money_handler.n.01)-->r]. Reasoning Result: exchanger.n.01.
Input: According to the WordNet knowledge graph, from entity #ladder.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #ladder.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ladder.n.01, relation#_hyponym)-->r]. Reasoning Result: jacob's_ladder.n.02.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #equip.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #equip.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#equip.v.01)-->r]. Reasoning Result: appointment.n.03.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #pagrus.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #pagrus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#pagrus.n.01)-->r]. Reasoning Result: sparidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_region, we can obtain entity#soissons.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_region, we can obtain entity #soissons.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_region, entity#soissons.n.01)-->r]. Reasoning Result: france.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #circuit.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #circuit.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#circuit.n.01)-->r]. Reasoning Result: limiter.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #francis_of_assisi.n.01 and entity #roman_catholic.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #francis_of_assisi.n.01 and entity #roman_catholic.n.02 is [GR(GL("wordnet"), "transe:relation", entity#francis_of_assisi.n.01, entity#roman_catholic.n.02)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, from entity #tarwood.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #tarwood.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tarwood.n.01, relation#_hypernym)-->r]. Reasoning Result: conifer.n.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #massachusetts.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #massachusetts.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#massachusetts.n.01)-->r]. Reasoning Result: charles.n.09.
Input: According to the WordNet knowledge graph, from entity #policeman.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #policeman.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#policeman.n.01, relation#_hyponym)-->r]. Reasoning Result: captain.n.03.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #spiritual_leader.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #spiritual_leader.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#spiritual_leader.n.01)-->r]. Reasoning Result: evangelist.n.02.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #shaktism.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #shaktism.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#shaktism.n.01)-->r]. Reasoning Result: hinduism.n.01.
Input: According to the WordNet knowledge graph, from entity #password.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #password.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#password.n.01, relation#_hypernym)-->r]. Reasoning Result: secret.n.02.
Input: According to the WordNet knowledge graph, from entity #american.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #american.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#american.n.01, relation#_hyponym)-->r]. Reasoning Result: spanish_american.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #family.n.02 and entity #parent.n.01? Output: According to the WordNet knowledge graph, the relation between entity #family.n.02 and entity #parent.n.01 is [GR(GL("wordnet"), "transe:relation", entity#family.n.02, entity#parent.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #noose.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #noose.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#noose.n.02, relation#_hyponym)-->r]. Reasoning Result: clinch.n.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #depreciate.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #depreciate.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#depreciate.v.02)-->r]. Reasoning Result: expense.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #custom-make.v.01 and entity #produce.v.02? Output: According to the WordNet knowledge graph, the relation between entity #custom-make.v.01 and entity #produce.v.02 is [GR(GL("wordnet"), "transe:relation", entity#custom-make.v.01, entity#produce.v.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#fungus_family.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #fungus_family.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#fungus_family.n.01)-->r]. Reasoning Result: schizosaccharomycetaceae.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #chordate.n.01 and entity #tunicate.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #chordate.n.01 and entity #tunicate.n.01 is [GR(GL("wordnet"), "transe:relation", entity#chordate.n.01, entity#tunicate.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #united_kingdom.n.01, via relation #_member_of_domain_usage, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #united_kingdom.n.01, via relation #_member_of_domain_usage, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#united_kingdom.n.01, relation#_member_of_domain_usage)-->r]. Reasoning Result: pedestrian_crossing.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity#affirmation.n.04 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #affirmation.n.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#affirmation.n.04)-->r]. Reasoning Result: law.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #orthodox_church.n.01 and entity #bishop.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #orthodox_church.n.01 and entity #bishop.n.01 is [GR(GL("wordnet"), "transe:relation", entity#orthodox_church.n.01, entity#bishop.n.01)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #stacker.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #stacker.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#stacker.n.01)-->r]. Reasoning Result: stack.v.02.
Input: According to the WordNet knowledge graph, from entity #fish_genus.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #fish_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fish_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: lamna.n.01.
Input: According to the WordNet knowledge graph, from entity #address.n.03, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #address.n.03, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#address.n.03, relation#_hyponym)-->r]. Reasoning Result: sermon.n.01.
Input: According to the WordNet knowledge graph, from entity #glassware.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #glassware.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#glassware.n.01, relation#_hypernym)-->r]. Reasoning Result: tableware.n.01.
Input: According to the WordNet knowledge graph, from entity #dicot_genus.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #dicot_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dicot_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: genus_convolvulus.n.01.
Input: According to the WordNet knowledge graph, from entity #mammal_genus.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #mammal_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mammal_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: diphylla.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #archosauria.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #archosauria.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#archosauria.n.01)-->r]. Reasoning Result: pterosauria.n.01.
Input: According to the WordNet knowledge graph, from entity #chimaphila.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #chimaphila.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#chimaphila.n.01, relation#_member_meronym)-->r]. Reasoning Result: pipsissewa.n.01.
Input: According to the WordNet knowledge graph, from entity #doctor-patient_relation.n.01, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #doctor-patient_relation.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#doctor-patient_relation.n.01, relation#_member_meronym)-->r]. Reasoning Result: patient.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#sailplane.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #sailplane.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#sailplane.v.01)-->r]. Reasoning Result: glider.n.01.
Input: According to the WordNet knowledge graph, from entity #dung.v.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #dung.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dung.v.01, relation#_hypernym)-->r]. Reasoning Result: fertilize.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#respect.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #respect.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#respect.v.02)-->r]. Reasoning Result: honoring.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #geometry.n.01 and entity #construct.v.03? Output: According to the WordNet knowledge graph, the relation between entity #geometry.n.01 and entity #construct.v.03 is [GR(GL("wordnet"), "transe:relation", entity#geometry.n.01, entity#construct.v.03)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, from entity #tree_fern.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #tree_fern.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tree_fern.n.01, relation#_hyponym)-->r]. Reasoning Result: silver_tree_fern.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #metallic_element.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #metallic_element.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#metallic_element.n.01)-->r]. Reasoning Result: praseodymium.n.01.
Input: According to the WordNet knowledge graph, from entity #zeidae.n.01, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #zeidae.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#zeidae.n.01, relation#_member_meronym)-->r]. Reasoning Result: zeus.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #de_forest.n.01 and entity #electrical_engineer.n.01? Output: According to the WordNet knowledge graph, the relation between entity #de_forest.n.01 and entity #electrical_engineer.n.01 is [GR(GL("wordnet"), "transe:relation", entity#de_forest.n.01, entity#electrical_engineer.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, from entity #research.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #research.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#research.n.01, relation#_hypernym)-->r]. Reasoning Result: investigation.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #heroism.n.01 and entity #courage.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #heroism.n.01 and entity #courage.n.01 is [GR(GL("wordnet"), "transe:relation", entity#heroism.n.01, entity#courage.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity#refrain.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #refrain.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#refrain.n.01)-->r]. Reasoning Result: song.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#marine.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #marine.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#marine.n.01)-->r]. Reasoning Result: serviceman.n.01.
Input: According to the WordNet knowledge graph, from entity #sport.n.01, via relation #_member_of_domain_topic, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sport.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sport.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: ice_skate.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #hold.v.10 and entity #support.n.10? Output: According to the WordNet knowledge graph, the relation between entity #hold.v.10 and entity #support.n.10 is [GR(GL("wordnet"), "transe:relation", entity#hold.v.10, entity#support.n.10)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #situate.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #situate.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#situate.v.01, relation#_hyponym)-->r]. Reasoning Result: place.v.12.
Input: According to the WordNet knowledge graph, from entity #echium.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #echium.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#echium.n.01, relation#_member_holonym)-->r]. Reasoning Result: boraginaceae.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #support.v.02 and entity #fund.v.06 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #support.v.02 and entity #fund.v.06 is [GR(GL("wordnet"), "transe:relation", entity#support.v.02, entity#fund.v.06)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #fish_family.n.01 and entity #holocentridae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #fish_family.n.01 and entity #holocentridae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#fish_family.n.01, entity#holocentridae.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #attraction.n.03 and entity #attract.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #attraction.n.03 and entity #attract.v.02 is [GR(GL("wordnet"), "transe:relation", entity#attraction.n.03, entity#attract.v.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #loosen.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #loosen.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#loosen.v.01)-->r]. Reasoning Result: relaxation.n.04.
Input: According to the WordNet knowledge graph, from entity #lengthiness.n.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #lengthiness.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#lengthiness.n.02, relation#_hypernym)-->r]. Reasoning Result: duration.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #give_voice.v.01 and entity #idiom.n.04? Output: According to the WordNet knowledge graph, the relation between entity #give_voice.v.01 and entity #idiom.n.04 is [GR(GL("wordnet"), "transe:relation", entity#give_voice.v.01, entity#idiom.n.04)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#protoctist_family.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #protoctist_family.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#protoctist_family.n.01)-->r]. Reasoning Result: chlamydomonadaceae.n.01.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #judaism.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #judaism.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#judaism.n.02)-->r]. Reasoning Result: succoth.n.01.
Input: According to the WordNet knowledge graph, from entity #play.v.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #play.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#play.v.01, relation#_hyponym)-->r]. Reasoning Result: catch.v.27.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#mention.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #mention.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#mention.v.01)-->r]. Reasoning Result: think_of.v.04.
Input: According to the WordNet knowledge graph, from entity #ecumenical_council.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #ecumenical_council.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ecumenical_council.n.01, relation#_hypernym)-->r]. Reasoning Result: council.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #foreswear.v.02 and entity #abandon.v.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #foreswear.v.02 and entity #abandon.v.02 is [GR(GL("wordnet"), "transe:relation", entity#foreswear.v.02, entity#abandon.v.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #research.v.01 and entity #research_worker.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #research.v.01 and entity #research_worker.n.01 is [GR(GL("wordnet"), "transe:relation", entity#research.v.01, entity#research_worker.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #oscines.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #oscines.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#oscines.n.01)-->r]. Reasoning Result: mimidae.n.01.
Input: According to the WordNet knowledge graph, from entity #calculate.v.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #calculate.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#calculate.v.01, relation#_hyponym)-->r]. Reasoning Result: process.v.03.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #yellow_birch.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #yellow_birch.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#yellow_birch.n.01)-->r]. Reasoning Result: betula.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#hepaticopsida.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #hepaticopsida.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#hepaticopsida.n.01)-->r]. Reasoning Result: class.n.07.
Input: According to the WordNet knowledge graph, the relation between entity #massage.n.01 and entity #treatment.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #massage.n.01 and entity #treatment.n.01 is [GR(GL("wordnet"), "transe:relation", entity#massage.n.01, entity#treatment.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #selkirk_mountains.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #selkirk_mountains.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#selkirk_mountains.n.01, relation#_part_of)-->r]. Reasoning Result: rockies.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #dramaturgy.n.01 and entity #dramatic_composition.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #dramaturgy.n.01 and entity #dramatic_composition.n.01 is [GR(GL("wordnet"), "transe:relation", entity#dramaturgy.n.01, entity#dramatic_composition.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, what is the relation between entity #platyrrhini.n.01 and entity #callithricidae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #platyrrhini.n.01 and entity #callithricidae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#platyrrhini.n.01, entity#callithricidae.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #amsterdam.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #amsterdam.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#amsterdam.n.01, relation#_part_of)-->r]. Reasoning Result: netherlands.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #vegetation.n.01 and entity #brush.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #vegetation.n.01 and entity #brush.n.01 is [GR(GL("wordnet"), "transe:relation", entity#vegetation.n.01, entity#brush.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #therapsid.n.01 and entity #synapsid.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #therapsid.n.01 and entity #synapsid.n.01 is [GR(GL("wordnet"), "transe:relation", entity#therapsid.n.01, entity#synapsid.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #eranthis.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #eranthis.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#eranthis.n.01, relation#_member_holonym)-->r]. Reasoning Result: ranunculaceae.n.01.
Input: According to the WordNet knowledge graph, from entity #unionidae.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #unionidae.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#unionidae.n.01, relation#_hypernym)-->r]. Reasoning Result: mollusk_family.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#heath.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #heath.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#heath.n.01)-->r]. Reasoning Result: heather.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#herero.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #herero.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#herero.n.01)-->r]. Reasoning Result: bantu.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#diversion.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #diversion.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#diversion.n.01)-->r]. Reasoning Result: sport.n.01.
Input: According to the WordNet knowledge graph, from entity #metallic_element.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #metallic_element.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#metallic_element.n.01, relation#_hyponym)-->r]. Reasoning Result: vanadium.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #commission.n.06 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #commission.n.06 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#commission.n.06)-->r]. Reasoning Result: charge.v.19.
Input: According to the WordNet knowledge graph, from entity #generalship.n.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #generalship.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#generalship.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: general.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #surprise.v.01 and entity #affect.v.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #surprise.v.01 and entity #affect.v.05 is [GR(GL("wordnet"), "transe:relation", entity#surprise.v.01, entity#affect.v.05)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #plant_hopper.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #plant_hopper.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#plant_hopper.n.01)-->r]. Reasoning Result: homopterous_insect.n.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #greece.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #greece.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#greece.n.01)-->r]. Reasoning Result: chios.n.01.
Input: According to the WordNet knowledge graph, from entity #political_orientation.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #political_orientation.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#political_orientation.n.01, relation#_hyponym)-->r]. Reasoning Result: democracy.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#anuresis.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #anuresis.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#anuresis.n.01)-->r]. Reasoning Result: illness.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #teashop.n.01 and entity #restaurant.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #teashop.n.01 and entity #restaurant.n.01 is [GR(GL("wordnet"), "transe:relation", entity#teashop.n.01, entity#restaurant.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #connect.v.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #connect.v.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#connect.v.03)-->r]. Reasoning Result: syndicate.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #naming.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #naming.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#naming.n.01)-->r]. Reasoning Result: identify.v.05.
Input: According to the WordNet knowledge graph, from entity #bird_family.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #bird_family.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#bird_family.n.01, relation#_hypernym)-->r]. Reasoning Result: family.n.06.
Input: According to the WordNet knowledge graph, from entity #arthropod_genus.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #arthropod_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#arthropod_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: adalia.n.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#club.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #club.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#club.n.02)-->r]. Reasoning Result: glee_club.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #diptera.n.01 and entity #trypetidae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #diptera.n.01 and entity #trypetidae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#diptera.n.01, entity#trypetidae.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #wild_sarsaparilla.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #wild_sarsaparilla.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#wild_sarsaparilla.n.01, relation#_member_holonym)-->r]. Reasoning Result: genus_aralia.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #segment.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #segment.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#segment.n.02)-->r]. Reasoning Result: segment.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #calvinist.a.01 and entity #calvinism.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #calvinist.a.01 and entity #calvinism.n.01 is [GR(GL("wordnet"), "transe:relation", entity#calvinist.a.01, entity#calvinism.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #actiniaria.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #actiniaria.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#actiniaria.n.01, relation#_member_holonym)-->r]. Reasoning Result: anthozoa.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#back_up.v.04 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #back_up.v.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#back_up.v.04)-->r]. Reasoning Result: backup.n.04.
Input: According to the WordNet knowledge graph, from entity #operate.v.03, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #operate.v.03, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#operate.v.03, relation#_hyponym)-->r]. Reasoning Result: dial.v.01.
Input: According to the WordNet knowledge graph, from entity #wharf.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #wharf.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#wharf.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: pier.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #brunei.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #brunei.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#brunei.n.01)-->r]. Reasoning Result: borneo.n.01.
Input: According to the WordNet knowledge graph, from entity #gymnospermae.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #gymnospermae.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#gymnospermae.n.01, relation#_member_meronym)-->r]. Reasoning Result: coniferopsida.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #concentration.n.05 and entity #concentrate.v.02? Output: According to the WordNet knowledge graph, the relation between entity #concentration.n.05 and entity #concentrate.v.02 is [GR(GL("wordnet"), "transe:relation", entity#concentration.n.05, entity#concentrate.v.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #division.n.12, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #division.n.12, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#division.n.12, relation#_derivationally_related_form)-->r]. Reasoning Result: partitionist.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cutter.n.06 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cutter.n.06 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#cutter.n.06)-->r]. Reasoning Result: cutting_implement.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#shorea.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #shorea.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#shorea.n.01)-->r]. Reasoning Result: dipterocarpaceae.n.01.
Input: According to the WordNet knowledge graph, from entity #woman.n.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #woman.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#woman.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: philander.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #succorer.n.01 and entity #rescuer.n.02? Output: According to the WordNet knowledge graph, the relation between entity #succorer.n.01 and entity #rescuer.n.02 is [GR(GL("wordnet"), "transe:relation", entity#succorer.n.01, entity#rescuer.n.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #effect.n.06 and entity #symptom.n.01? Output: According to the WordNet knowledge graph, the relation between entity #effect.n.06 and entity #symptom.n.01 is [GR(GL("wordnet"), "transe:relation", entity#effect.n.06, entity#symptom.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #biology.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #biology.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#biology.n.01)-->r]. Reasoning Result: variety.n.03.
Input: According to the WordNet knowledge graph, from entity #pitched_battle.n.01, via relation #_instance_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #pitched_battle.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pitched_battle.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: jena.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #function.v.01 and entity #operation.n.08 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #function.v.01 and entity #operation.n.08 is [GR(GL("wordnet"), "transe:relation", entity#function.v.01, entity#operation.n.08)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #glide.v.02 and entity #glide.n.03? Output: According to the WordNet knowledge graph, the relation between entity #glide.v.02 and entity #glide.n.03 is [GR(GL("wordnet"), "transe:relation", entity#glide.v.02, entity#glide.n.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #pentecostal.a.02 and entity #shavous.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #pentecostal.a.02 and entity #shavous.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pentecostal.a.02, entity#shavous.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #naval_battle.n.01 and entity #actium.n.02? Output: According to the WordNet knowledge graph, the relation between entity #naval_battle.n.01 and entity #actium.n.02 is [GR(GL("wordnet"), "transe:relation", entity#naval_battle.n.01, entity#actium.n.02)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, from entity #actor.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #actor.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#actor.n.01, relation#_hyponym)-->r]. Reasoning Result: actress.n.01.
Input: According to the WordNet knowledge graph, from entity #fishing_gear.n.01, via relation #_has_part, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #fishing_gear.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fishing_gear.n.01, relation#_has_part)-->r]. Reasoning Result: gig.n.03.
Input: According to the WordNet knowledge graph, from entity #muscular_structure.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #muscular_structure.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#muscular_structure.n.01, relation#_has_part)-->r]. Reasoning Result: ligament.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #accipitridae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #accipitridae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#accipitridae.n.01)-->r]. Reasoning Result: elanus.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #leukocyte.n.01 and entity #neutrophil.n.01? Output: According to the WordNet knowledge graph, the relation between entity #leukocyte.n.01 and entity #neutrophil.n.01 is [GR(GL("wordnet"), "transe:relation", entity#leukocyte.n.01, entity#neutrophil.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #schizaeaceae.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #schizaeaceae.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#schizaeaceae.n.01, relation#_hypernym)-->r]. Reasoning Result: fern_family.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#cinema.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #cinema.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#cinema.n.02)-->r]. Reasoning Result: fleapit.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#guard.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #guard.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#guard.v.02)-->r]. Reasoning Result: protect.v.01.
Input: According to the WordNet knowledge graph, from entity #root.v.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #root.v.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#root.v.02, relation#_derivationally_related_form)-->r]. Reasoning Result: beginning.n.04.
Input: According to the WordNet knowledge graph, from entity #animation.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #animation.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#animation.n.01, relation#_hypernym)-->r]. Reasoning Result: being.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #finale.n.01 and entity #conclusion.n.08? Output: According to the WordNet knowledge graph, the relation between entity #finale.n.01 and entity #conclusion.n.08 is [GR(GL("wordnet"), "transe:relation", entity#finale.n.01, entity#conclusion.n.08)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #stand.v.01 and entity #stander.n.01? Output: According to the WordNet knowledge graph, the relation between entity #stand.v.01 and entity #stander.n.01 is [GR(GL("wordnet"), "transe:relation", entity#stand.v.01, entity#stander.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #seafood.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #seafood.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#seafood.n.01)-->r]. Reasoning Result: whitefish.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #bar.n.07 and entity #meteorology.n.02? Output: According to the WordNet knowledge graph, the relation between entity #bar.n.07 and entity #meteorology.n.02 is [GR(GL("wordnet"), "transe:relation", entity#bar.n.07, entity#meteorology.n.02)-->r]. Reasoning Result: _synset_domain_topic_of.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity#computer_science.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #computer_science.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#computer_science.n.01)-->r]. Reasoning Result: pixel.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#garment.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #garment.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#garment.n.01)-->r]. Reasoning Result: sweat_suit.n.01.
Input: According to the WordNet knowledge graph, from entity #rangpur.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #rangpur.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#rangpur.n.01, relation#_hypernym)-->r]. Reasoning Result: citrus.n.02.
Input: According to the WordNet knowledge graph, from entity #osier.n.02, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #osier.n.02, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#osier.n.02, relation#_member_holonym)-->r]. Reasoning Result: salix.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #distributor.n.04 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #distributor.n.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#distributor.n.04)-->r]. Reasoning Result: ignition.n.02.
Input: According to the WordNet knowledge graph, from entity #wear.v.04, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #wear.v.04, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#wear.v.04, relation#_derivationally_related_form)-->r]. Reasoning Result: wear.n.01.
Input: According to the WordNet knowledge graph, from entity #adhere.v.06, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #adhere.v.06, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#adhere.v.06, relation#_derivationally_related_form)-->r]. Reasoning Result: fastener.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #pervert.n.01 and entity #masochist.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #pervert.n.01 and entity #masochist.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pervert.n.01, entity#masochist.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #pinaceae.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pinaceae.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pinaceae.n.01, relation#_member_meronym)-->r]. Reasoning Result: picea.n.01.
Input: According to the WordNet knowledge graph, from entity #suborder_ceratosaura.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #suborder_ceratosaura.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#suborder_ceratosaura.n.01, relation#_hypernym)-->r]. Reasoning Result: animal_order.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #gymnosperm_genus.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #gymnosperm_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#gymnosperm_genus.n.01)-->r]. Reasoning Result: libocedrus.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#curdle.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #curdle.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#curdle.v.01)-->r]. Reasoning Result: change_state.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #setting.n.02 and entity #environment.n.01? Output: According to the WordNet knowledge graph, the relation between entity #setting.n.02 and entity #environment.n.01 is [GR(GL("wordnet"), "transe:relation", entity#setting.n.02, entity#environment.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #car.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #car.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#car.n.01)-->r]. Reasoning Result: car_door.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #compositae.n.01 and entity #wormwood.n.01? Output: According to the WordNet knowledge graph, the relation between entity #compositae.n.01 and entity #wormwood.n.01 is [GR(GL("wordnet"), "transe:relation", entity#compositae.n.01, entity#wormwood.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, the relation between entity #umbelliferae.n.01 and entity #genus_angelica.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #umbelliferae.n.01 and entity #genus_angelica.n.01 is [GR(GL("wordnet"), "transe:relation", entity#umbelliferae.n.01, entity#genus_angelica.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #simple_protein.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #simple_protein.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#simple_protein.n.01, relation#_hypernym)-->r]. Reasoning Result: protein.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #settlor.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #settlor.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#settlor.n.01)-->r]. Reasoning Result: law.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#fold.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #fold.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#fold.v.01)-->r]. Reasoning Result: collapse.v.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #squeeze.v.02 and entity #squeeze.n.01? Output: According to the WordNet knowledge graph, the relation between entity #squeeze.v.02 and entity #squeeze.n.01 is [GR(GL("wordnet"), "transe:relation", entity#squeeze.v.02, entity#squeeze.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #nolina.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #nolina.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#nolina.n.01, relation#_member_holonym)-->r]. Reasoning Result: agavaceae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#authority.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #authority.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#authority.n.03)-->r]. Reasoning Result: liturgist.n.01.
Input: According to the WordNet knowledge graph, from entity #vascular_system.n.01, via relation #_part_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #vascular_system.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#vascular_system.n.01, relation#_part_of)-->r]. Reasoning Result: body.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #colloquialism.n.01 and entity #plummy.s.01? Output: According to the WordNet knowledge graph, the relation between entity #colloquialism.n.01 and entity #plummy.s.01 is [GR(GL("wordnet"), "transe:relation", entity#colloquialism.n.01, entity#plummy.s.01)-->r]. Reasoning Result: _member_of_domain_usage.
Input: According to the WordNet knowledge graph, from entity #united_states_army.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #united_states_army.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#united_states_army.n.01, relation#_hypernym)-->r]. Reasoning Result: agency.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #heating_system.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #heating_system.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#heating_system.n.01)-->r]. Reasoning Result: utility.n.06.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#surface.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #surface.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#surface.n.02)-->r]. Reasoning Result: side.n.04.
Input: According to the WordNet knowledge graph, what is the relation between entity #sweet_roll.n.01 and entity #bun.n.01? Output: According to the WordNet knowledge graph, the relation between entity #sweet_roll.n.01 and entity #bun.n.01 is [GR(GL("wordnet"), "transe:relation", entity#sweet_roll.n.01, entity#bun.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#lower_jaw.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #lower_jaw.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#lower_jaw.n.01)-->r]. Reasoning Result: gnathion.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#sensualist.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #sensualist.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#sensualist.n.01)-->r]. Reasoning Result: epicure.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #metatarsal_vein.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #metatarsal_vein.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#metatarsal_vein.n.01)-->r]. Reasoning Result: foot.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #dab.v.02 and entity #tap.n.08 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #dab.v.02 and entity #tap.n.08 is [GR(GL("wordnet"), "transe:relation", entity#dab.v.02, entity#tap.n.08)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #expect.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #expect.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#expect.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: expectation.n.01.
Input: According to the WordNet knowledge graph, from entity #furniture.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #furniture.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#furniture.n.01, relation#_hyponym)-->r]. Reasoning Result: table.n.02.
Input: According to the WordNet knowledge graph, from entity #neckpiece.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #neckpiece.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#neckpiece.n.01, relation#_hypernym)-->r]. Reasoning Result: clothing.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #stripper.n.03 and entity #lee.n.02? Output: According to the WordNet knowledge graph, the relation between entity #stripper.n.03 and entity #lee.n.02 is [GR(GL("wordnet"), "transe:relation", entity#stripper.n.03, entity#lee.n.02)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #physics.n.01 and entity #electronics.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #physics.n.01 and entity #electronics.n.01 is [GR(GL("wordnet"), "transe:relation", entity#physics.n.01, entity#electronics.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #pillar_box.n.01 and entity #united_kingdom.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #pillar_box.n.01 and entity #united_kingdom.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pillar_box.n.01, entity#united_kingdom.n.01)-->r]. Reasoning Result: _synset_domain_region_of.
Input: According to the WordNet knowledge graph, from entity #culex.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #culex.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#culex.n.01, relation#_member_holonym)-->r]. Reasoning Result: culicidae.n.01.
Input: According to the WordNet knowledge graph, from entity #netherlands.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #netherlands.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#netherlands.n.01, relation#_has_part)-->r]. Reasoning Result: leiden.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #chemical_reaction.n.01 and entity #chemical_process.n.01? Output: According to the WordNet knowledge graph, the relation between entity #chemical_reaction.n.01 and entity #chemical_process.n.01 is [GR(GL("wordnet"), "transe:relation", entity#chemical_reaction.n.01, entity#chemical_process.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #noah's_flood.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_of_domain_topic, we can obtain entity #noah's_flood.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_topic, entity#noah's_flood.n.01)-->r]. Reasoning Result: bible.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#town.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #town.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#town.n.01)-->r]. Reasoning Result: hilo.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #electronics.n.01 and entity #limiter.n.01? Output: According to the WordNet knowledge graph, the relation between entity #electronics.n.01 and entity #limiter.n.01 is [GR(GL("wordnet"), "transe:relation", entity#electronics.n.01, entity#limiter.n.01)-->r]. Reasoning Result: _member_of_domain_topic.
Input: According to the WordNet knowledge graph, from entity #act.v.03, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #act.v.03, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#act.v.03, relation#_hyponym)-->r]. Reasoning Result: support.v.09.
Input: According to the WordNet knowledge graph, from entity #crumb.n.03, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #crumb.n.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#crumb.n.03, relation#_hypernym)-->r]. Reasoning Result: morsel.n.02.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #mortise_joint.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #mortise_joint.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#mortise_joint.n.02)-->r]. Reasoning Result: mortise.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#polybotrya.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #polybotrya.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#polybotrya.n.01)-->r]. Reasoning Result: fern_genus.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #school_year.n.01 and entity #quarter.n.05? Output: According to the WordNet knowledge graph, the relation between entity #school_year.n.01 and entity #quarter.n.05 is [GR(GL("wordnet"), "transe:relation", entity#school_year.n.01, entity#quarter.n.05)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #plumbaginaceae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #plumbaginaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#plumbaginaceae.n.01)-->r]. Reasoning Result: primulales.n.01.
Input: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity#nevada.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_part_of, we can obtain entity #nevada.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_part_of, entity#nevada.n.01)-->r]. Reasoning Result: colorado.n.03.
Input: According to the WordNet knowledge graph, the relation between entity #echeneididae.n.01 and entity #discocephali.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #echeneididae.n.01 and entity #discocephali.n.01 is [GR(GL("wordnet"), "transe:relation", entity#echeneididae.n.01, entity#discocephali.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, the relation between entity #remember.v.02 and entity #qualify.v.06 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #remember.v.02 and entity #qualify.v.06 is [GR(GL("wordnet"), "transe:relation", entity#remember.v.02, entity#qualify.v.06)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #polynemidae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #polynemidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#polynemidae.n.01)-->r]. Reasoning Result: polydactylus.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #antidepressant.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #antidepressant.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#antidepressant.n.01)-->r]. Reasoning Result: tricyclic.n.01.
Input: According to the WordNet knowledge graph, from entity #woodpecker.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #woodpecker.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#woodpecker.n.01, relation#_member_holonym)-->r]. Reasoning Result: picidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #carangid_fish.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #carangid_fish.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#carangid_fish.n.01)-->r]. Reasoning Result: scad.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #madderwort.n.01 and entity #angiosperm.n.01? Output: According to the WordNet knowledge graph, the relation between entity #madderwort.n.01 and entity #angiosperm.n.01 is [GR(GL("wordnet"), "transe:relation", entity#madderwort.n.01, entity#angiosperm.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #foreground.v.01 and entity #highlight.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #foreground.v.01 and entity #highlight.n.02 is [GR(GL("wordnet"), "transe:relation", entity#foreground.v.01, entity#highlight.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity#jayshullah.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #jayshullah.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#jayshullah.n.01)-->r]. Reasoning Result: terrorist_organization.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#screamer.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #screamer.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#screamer.n.03)-->r]. Reasoning Result: yell.v.02.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #ranunculaceae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #ranunculaceae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#ranunculaceae.n.01)-->r]. Reasoning Result: genus_hepatica.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #configuration.n.01 and entity #dot.v.01? Output: According to the WordNet knowledge graph, the relation between entity #configuration.n.01 and entity #dot.v.01 is [GR(GL("wordnet"), "transe:relation", entity#configuration.n.01, entity#dot.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #aldrovanda.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #aldrovanda.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#aldrovanda.n.01)-->r]. Reasoning Result: droseraceae.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #salamandridae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #salamandridae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#salamandridae.n.01)-->r]. Reasoning Result: newt.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #positive_identification.n.01 and entity #password.n.01? Output: According to the WordNet knowledge graph, the relation between entity #positive_identification.n.01 and entity #password.n.01 is [GR(GL("wordnet"), "transe:relation", entity#positive_identification.n.01, entity#password.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #cynipidae.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #cynipidae.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#cynipidae.n.01, relation#_hypernym)-->r]. Reasoning Result: arthropod_family.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #idiosyncrasy.n.01 and entity #peculiarity.n.02? Output: According to the WordNet knowledge graph, the relation between entity #idiosyncrasy.n.01 and entity #peculiarity.n.02 is [GR(GL("wordnet"), "transe:relation", entity#idiosyncrasy.n.01, entity#peculiarity.n.02)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #kill.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #kill.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#kill.v.01)-->r]. Reasoning Result: smother.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #deactivation.n.02 and entity #termination.n.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #deactivation.n.02 and entity #termination.n.05 is [GR(GL("wordnet"), "transe:relation", entity#deactivation.n.02, entity#termination.n.05)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #partial_derivative.n.01 and entity #derived_function.n.01? Output: According to the WordNet knowledge graph, the relation between entity #partial_derivative.n.01 and entity #derived_function.n.01 is [GR(GL("wordnet"), "transe:relation", entity#partial_derivative.n.01, entity#derived_function.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #seventies.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #seventies.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#seventies.n.02)-->r]. Reasoning Result: old_age.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity#manna_grass.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #manna_grass.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#manna_grass.n.01)-->r]. Reasoning Result: glyceria.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #examination.n.01 and entity #audit.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #examination.n.01 and entity #audit.v.01 is [GR(GL("wordnet"), "transe:relation", entity#examination.n.01, entity#audit.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #stellaria.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #stellaria.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#stellaria.n.01, relation#_hypernym)-->r]. Reasoning Result: caryophylloid_dicot_family.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #attest.v.01 and entity #documentation.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #attest.v.01 and entity #documentation.n.01 is [GR(GL("wordnet"), "transe:relation", entity#attest.v.01, entity#documentation.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#bothidae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #bothidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#bothidae.n.01)-->r]. Reasoning Result: paralichthys.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #utility.n.01 and entity #power_company.n.01? Output: According to the WordNet knowledge graph, the relation between entity #utility.n.01 and entity #power_company.n.01 is [GR(GL("wordnet"), "transe:relation", entity#utility.n.01, entity#power_company.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #honours.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #honours.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#honours.n.01)-->r]. Reasoning Result: academic_degree.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#fungus_family.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #fungus_family.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#fungus_family.n.01)-->r]. Reasoning Result: sclerodermataceae.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #sacking.n.01 and entity #bag.v.05? Output: According to the WordNet knowledge graph, the relation between entity #sacking.n.01 and entity #bag.v.05 is [GR(GL("wordnet"), "transe:relation", entity#sacking.n.01, entity#bag.v.05)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#worship.v.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #worship.v.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#worship.v.03)-->r]. Reasoning Result: believer.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #bother.v.05 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #bother.v.05 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#bother.v.05)-->r]. Reasoning Result: agitate.v.02.
Input: According to the WordNet knowledge graph, from entity #fish_family.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #fish_family.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fish_family.n.01, relation#_hyponym)-->r]. Reasoning Result: priacanthidae.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #equinox.n.01 and entity #autumnal_equinox.n.01? Output: According to the WordNet knowledge graph, the relation between entity #equinox.n.01 and entity #autumnal_equinox.n.01 is [GR(GL("wordnet"), "transe:relation", entity#equinox.n.01, entity#autumnal_equinox.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cold.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cold.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#cold.n.01)-->r]. Reasoning Result: communicable_disease.n.01.
Input: According to the WordNet knowledge graph, from entity #genus_philadelphus.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #genus_philadelphus.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#genus_philadelphus.n.01, relation#_hypernym)-->r]. Reasoning Result: rosid_dicot_genus.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#surpass.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #surpass.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#surpass.v.02)-->r]. Reasoning Result: outrange.v.01.
Input: According to the WordNet knowledge graph, from entity #interaction.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #interaction.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#interaction.n.01, relation#_hyponym)-->r]. Reasoning Result: interchange.n.02.
Input: According to the WordNet knowledge graph, from entity #analysis.n.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #analysis.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#analysis.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: analyze.v.01.
Input: According to the WordNet knowledge graph, from entity #humorous.a.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #humorous.a.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#humorous.a.01, relation#_derivationally_related_form)-->r]. Reasoning Result: jocoseness.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #caryophyllaceae.n.01 and entity #vaccaria.n.01? Output: According to the WordNet knowledge graph, the relation between entity #caryophyllaceae.n.01 and entity #vaccaria.n.01 is [GR(GL("wordnet"), "transe:relation", entity#caryophyllaceae.n.01, entity#vaccaria.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity#colorado.n.03 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #colorado.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#colorado.n.03)-->r]. Reasoning Result: river.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #sweater.n.01 and entity #cardigan.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #sweater.n.01 and entity #cardigan.n.01 is [GR(GL("wordnet"), "transe:relation", entity#sweater.n.01, entity#cardigan.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #dissatisfaction.n.01 and entity #disappointment.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #dissatisfaction.n.01 and entity #disappointment.n.01 is [GR(GL("wordnet"), "transe:relation", entity#dissatisfaction.n.01, entity#disappointment.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #millennium.n.02, via relation #_synset_domain_topic_of, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #millennium.n.02, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#millennium.n.02, relation#_synset_domain_topic_of)-->r]. Reasoning Result: new_testament.n.01.
Input: According to the WordNet knowledge graph, from entity #draft.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #draft.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#draft.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: drafting.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #act.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #act.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#act.v.01)-->r]. Reasoning Result: behave.v.02.
Input: According to the WordNet knowledge graph, from entity #arthropod_genus.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #arthropod_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#arthropod_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: oestrus.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#holler.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #holler.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#holler.v.01)-->r]. Reasoning Result: shout.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#solicitorship.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #solicitorship.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#solicitorship.n.01)-->r]. Reasoning Result: solicitor.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #compound.n.01 and entity #whole.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #compound.n.01 and entity #whole.n.01 is [GR(GL("wordnet"), "transe:relation", entity#compound.n.01, entity#whole.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #law.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #law.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#law.n.01)-->r]. Reasoning Result: common_law.n.02.
Input: According to the WordNet knowledge graph, from entity #mammal_family.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #mammal_family.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mammal_family.n.01, relation#_hyponym)-->r]. Reasoning Result: cynocephalidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#geometridae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #geometridae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#geometridae.n.01)-->r]. Reasoning Result: geometrid.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #rede.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #rede.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#rede.v.01)-->r]. Reasoning Result: commentate.v.02.
Input: According to the WordNet knowledge graph, from entity #damask_violet.n.01, via relation #_member_holonym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #damask_violet.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#damask_violet.n.01, relation#_member_holonym)-->r]. Reasoning Result: hesperis.n.01.
Input: According to the WordNet knowledge graph, from entity #identify.v.04, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #identify.v.04, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#identify.v.04, relation#_hypernym)-->r]. Reasoning Result: associate.v.01.
Input: According to the WordNet knowledge graph, from entity #united_states_army.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #united_states_army.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#united_states_army.n.01, relation#_has_part)-->r]. Reasoning Result: united_states_army_rangers.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #calamus.n.01 and entity #genus_calamus.n.01? Output: According to the WordNet knowledge graph, the relation between entity #calamus.n.01 and entity #genus_calamus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#calamus.n.01, entity#genus_calamus.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#zairean.a.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #zairean.a.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#zairean.a.01)-->r]. Reasoning Result: congo.n.01.
Input: According to the WordNet knowledge graph, from entity #jurassic.n.01, via relation #_part_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #jurassic.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#jurassic.n.01, relation#_part_of)-->r]. Reasoning Result: mesozoic.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #trademark.n.02 and entity #abortion_pill.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #trademark.n.02 and entity #abortion_pill.n.01 is [GR(GL("wordnet"), "transe:relation", entity#trademark.n.02, entity#abortion_pill.n.01)-->r]. Reasoning Result: _member_of_domain_usage.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #tamarindus.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #tamarindus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#tamarindus.n.01)-->r]. Reasoning Result: rosid_dicot_genus.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #raleigh.n.01 and entity #courtier.n.01? Output: According to the WordNet knowledge graph, the relation between entity #raleigh.n.01 and entity #courtier.n.01 is [GR(GL("wordnet"), "transe:relation", entity#raleigh.n.01, entity#courtier.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, from entity #molidae.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #molidae.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#molidae.n.01, relation#_hypernym)-->r]. Reasoning Result: fish_family.n.01.
Input: According to the WordNet knowledge graph, from entity #labiatae.n.01, via relation #_member_meronym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #labiatae.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#labiatae.n.01, relation#_member_meronym)-->r]. Reasoning Result: genus_salvia.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #scandentia.n.01 and entity #eutheria.n.01? Output: According to the WordNet knowledge graph, the relation between entity #scandentia.n.01 and entity #eutheria.n.01 is [GR(GL("wordnet"), "transe:relation", entity#scandentia.n.01, entity#eutheria.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #architecture.n.02, via relation #_member_of_domain_topic, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #architecture.n.02, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#architecture.n.02, relation#_member_of_domain_topic)-->r]. Reasoning Result: drip.n.03.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #rash.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #rash.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#rash.n.01)-->r]. Reasoning Result: prickly_heat.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#bias.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #bias.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#bias.v.02)-->r]. Reasoning Result: bias.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #conceit.n.05 and entity #trait.n.01? Output: According to the WordNet knowledge graph, the relation between entity #conceit.n.05 and entity #trait.n.01 is [GR(GL("wordnet"), "transe:relation", entity#conceit.n.05, entity#trait.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #styrax.n.01 and entity #shrub.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #styrax.n.01 and entity #shrub.n.01 is [GR(GL("wordnet"), "transe:relation", entity#styrax.n.01, entity#shrub.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #hawaii.n.01, via relation #_part_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #hawaii.n.01, via relation #_part_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#hawaii.n.01, relation#_part_of)-->r]. Reasoning Result: hawaiian_islands.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #pause.n.01 and entity #freeze.v.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #pause.n.01 and entity #freeze.v.05 is [GR(GL("wordnet"), "transe:relation", entity#pause.n.01, entity#freeze.v.05)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #snipe.n.01 and entity #wilson's_snipe.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #snipe.n.01 and entity #wilson's_snipe.n.01 is [GR(GL("wordnet"), "transe:relation", entity#snipe.n.01, entity#wilson's_snipe.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #holocentridae.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #holocentridae.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#holocentridae.n.01, relation#_member_holonym)-->r]. Reasoning Result: berycomorphi.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #shirt.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #shirt.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#shirt.v.01)-->r]. Reasoning Result: shirt.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#island.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #island.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#island.n.01)-->r]. Reasoning Result: puerto_rico.n.02.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#choking.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #choking.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#choking.n.02)-->r]. Reasoning Result: choke.v.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #exhilarate.v.01 and entity #thrill.n.03? Output: According to the WordNet knowledge graph, the relation between entity #exhilarate.v.01 and entity #thrill.n.03 is [GR(GL("wordnet"), "transe:relation", entity#exhilarate.v.01, entity#thrill.n.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #beginning.n.05, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #beginning.n.05, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#beginning.n.05, relation#_derivationally_related_form)-->r]. Reasoning Result: originate.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #marsh_plant.n.01 and entity #brooklime.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #marsh_plant.n.01 and entity #brooklime.n.02 is [GR(GL("wordnet"), "transe:relation", entity#marsh_plant.n.01, entity#brooklime.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #orchid.n.01 and entity #ladies'_tresses.n.01? Output: According to the WordNet knowledge graph, the relation between entity #orchid.n.01 and entity #ladies'_tresses.n.01 is [GR(GL("wordnet"), "transe:relation", entity#orchid.n.01, entity#ladies'_tresses.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #char.n.03 and entity #salmonid.n.01? Output: According to the WordNet knowledge graph, the relation between entity #char.n.03 and entity #salmonid.n.01 is [GR(GL("wordnet"), "transe:relation", entity#char.n.03, entity#salmonid.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#dot_matrix_printer.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #dot_matrix_printer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#dot_matrix_printer.n.01)-->r]. Reasoning Result: wire_matrix_printer.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #travel.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #travel.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#travel.v.01)-->r]. Reasoning Result: crawl.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #tulipa.n.01 and entity #liliid_monocot_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #tulipa.n.01 and entity #liliid_monocot_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#tulipa.n.01, entity#liliid_monocot_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #self-discipline.n.01 and entity #abstinence.n.01? Output: According to the WordNet knowledge graph, the relation between entity #self-discipline.n.01 and entity #abstinence.n.01 is [GR(GL("wordnet"), "transe:relation", entity#self-discipline.n.01, entity#abstinence.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #loot.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #loot.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#loot.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: loot.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #arthropod_genus.n.01 and entity #pineus.n.01? Output: According to the WordNet knowledge graph, the relation between entity #arthropod_genus.n.01 and entity #pineus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#arthropod_genus.n.01, entity#pineus.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #interoperable.s.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #interoperable.s.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#interoperable.s.01)-->r]. Reasoning Result: interoperability.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #organism.n.01 and entity #utterer.n.01? Output: According to the WordNet knowledge graph, the relation between entity #organism.n.01 and entity #utterer.n.01 is [GR(GL("wordnet"), "transe:relation", entity#organism.n.01, entity#utterer.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #solanaceae.n.01 and entity #nicandra.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #solanaceae.n.01 and entity #nicandra.n.01 is [GR(GL("wordnet"), "transe:relation", entity#solanaceae.n.01, entity#nicandra.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, the relation between entity #law.n.01 and entity #judge.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #law.n.01 and entity #judge.n.01 is [GR(GL("wordnet"), "transe:relation", entity#law.n.01, entity#judge.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #file.v.05, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #file.v.05, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#file.v.05, relation#_derivationally_related_form)-->r]. Reasoning Result: file.n.01.
Input: According to the WordNet knowledge graph, from entity #serve.v.03, via relation #_verb_group, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #serve.v.03, via relation #_verb_group, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#serve.v.03, relation#_verb_group)-->r]. Reasoning Result: serve.v.08.
Input: According to the WordNet knowledge graph, from entity #capitalization.n.03, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #capitalization.n.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#capitalization.n.03, relation#_derivationally_related_form)-->r]. Reasoning Result: capitalize.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #orchidaceae.n.01 and entity #genus_pleurothallis.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #orchidaceae.n.01 and entity #genus_pleurothallis.n.01 is [GR(GL("wordnet"), "transe:relation", entity#orchidaceae.n.01, entity#genus_pleurothallis.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #antagonism.n.03, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #antagonism.n.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#antagonism.n.03, relation#_derivationally_related_form)-->r]. Reasoning Result: adversary.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#waste.v.08 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #waste.v.08 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#waste.v.08)-->r]. Reasoning Result: wastage.n.01.
Input: According to the WordNet knowledge graph, from entity #compensate.v.06, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #compensate.v.06, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#compensate.v.06, relation#_derivationally_related_form)-->r]. Reasoning Result: recompense.n.01.
Input: According to the WordNet knowledge graph, from entity #revolutionist.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #revolutionist.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#revolutionist.n.01, relation#_hyponym)-->r]. Reasoning Result: counterrevolutionist.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #flush.v.04 and entity #change_surface.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #flush.v.04 and entity #change_surface.v.01 is [GR(GL("wordnet"), "transe:relation", entity#flush.v.04, entity#change_surface.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #dig.n.05, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #dig.n.05, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dig.n.05, relation#_derivationally_related_form)-->r]. Reasoning Result: jab.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #mail.n.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #mail.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#mail.n.03)-->r]. Reasoning Result: mail.v.02.
Input: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity#unclear.a.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #unclear.a.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_also_see, entity#unclear.a.02)-->r]. Reasoning Result: opaque.a.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #centerboard.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #centerboard.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#centerboard.n.01)-->r]. Reasoning Result: fin_keel.n.01.
Input: According to the WordNet knowledge graph, from entity #rosid_dicot_family.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #rosid_dicot_family.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#rosid_dicot_family.n.01, relation#_hyponym)-->r]. Reasoning Result: rutaceae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #travel.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #travel.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#travel.v.01)-->r]. Reasoning Result: precede.v.04.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#frontbencher.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #frontbencher.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#frontbencher.n.01)-->r]. Reasoning Result: front_bench.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #jewish_calendar_month.n.01 and entity #kislev.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #jewish_calendar_month.n.01 and entity #kislev.n.01 is [GR(GL("wordnet"), "transe:relation", entity#jewish_calendar_month.n.01, entity#kislev.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, what is the relation between entity #bugle.n.02 and entity #herb.n.01? Output: According to the WordNet knowledge graph, the relation between entity #bugle.n.02 and entity #herb.n.01 is [GR(GL("wordnet"), "transe:relation", entity#bugle.n.02, entity#herb.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #rosid_dicot_genus.n.01 and entity #leucaena.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #rosid_dicot_genus.n.01 and entity #leucaena.n.01 is [GR(GL("wordnet"), "transe:relation", entity#rosid_dicot_genus.n.01, entity#leucaena.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #drinking.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #drinking.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#drinking.n.01, relation#_hyponym)-->r]. Reasoning Result: gulping.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #report.n.03 and entity #report.v.01? Output: According to the WordNet knowledge graph, the relation between entity #report.n.03 and entity #report.v.01 is [GR(GL("wordnet"), "transe:relation", entity#report.n.03, entity#report.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity#music.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #music.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#music.n.01)-->r]. Reasoning Result: play.v.07.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#lubrication.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #lubrication.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#lubrication.n.01)-->r]. Reasoning Result: condition.n.01.
Input: According to the WordNet knowledge graph, from entity #piece_of_leather.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #piece_of_leather.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#piece_of_leather.n.01, relation#_hypernym)-->r]. Reasoning Result: leather.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #humanistic_discipline.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #humanistic_discipline.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#humanistic_discipline.n.01)-->r]. Reasoning Result: musicology.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #disorder.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #disorder.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#disorder.v.02)-->r]. Reasoning Result: mess.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #rent.v.04 and entity #tenant.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #rent.v.04 and entity #tenant.n.01 is [GR(GL("wordnet"), "transe:relation", entity#rent.v.04, entity#tenant.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#understudy.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #understudy.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#understudy.v.01)-->r]. Reasoning Result: memorize.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #endorsement.n.01 and entity #back.v.01? Output: According to the WordNet knowledge graph, the relation between entity #endorsement.n.01 and entity #back.v.01 is [GR(GL("wordnet"), "transe:relation", entity#endorsement.n.01, entity#back.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #squelch_circuit.n.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #squelch_circuit.n.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#squelch_circuit.n.01, relation#_derivationally_related_form)-->r]. Reasoning Result: squelch.v.01.
Input: According to the WordNet knowledge graph, from entity #pay.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pay.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pay.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: wage.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#tawny_owl.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #tawny_owl.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#tawny_owl.n.01)-->r]. Reasoning Result: owl.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#river.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #river.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#river.n.01)-->r]. Reasoning Result: chattahoochee.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#movable_feast.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #movable_feast.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#movable_feast.n.01)-->r]. Reasoning Result: passover.n.01.
Input: According to the WordNet knowledge graph, from entity #fern.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #fern.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fern.n.01, relation#_hyponym)-->r]. Reasoning Result: umbrella_fern.n.01.
Input: According to the WordNet knowledge graph, from entity #monocot_genus.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #monocot_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#monocot_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: spartina.n.01.
Input: According to the WordNet knowledge graph, from entity #heron.n.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #heron.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#heron.n.02, relation#_hyponym)-->r]. Reasoning Result: night_heron.n.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity#mary.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #mary.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#mary.n.01)-->r]. Reasoning Result: mother.n.01.
Input: According to the WordNet knowledge graph, from entity #hungary.n.01, via relation #_instance_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #hungary.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#hungary.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: european_country.n.01.
Input: According to the WordNet knowledge graph, from entity #gun.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #gun.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#gun.n.01, relation#_hyponym)-->r]. Reasoning Result: antiaircraft.n.01.
Input: According to the WordNet knowledge graph, from entity #desire.n.03, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #desire.n.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#desire.n.03, relation#_derivationally_related_form)-->r]. Reasoning Result: hope.v.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#baiomys.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #baiomys.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#baiomys.n.01)-->r]. Reasoning Result: mammal_genus.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #feel.v.09 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #feel.v.09 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#feel.v.09)-->r]. Reasoning Result: finger.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #fifty_dollar_bill.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #fifty_dollar_bill.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#fifty_dollar_bill.n.01)-->r]. Reasoning Result: bill.n.03.
Input: According to the WordNet knowledge graph, what is the relation between entity #default_judgment.n.01 and entity #judgment.n.03? Output: According to the WordNet knowledge graph, the relation between entity #default_judgment.n.01 and entity #judgment.n.03 is [GR(GL("wordnet"), "transe:relation", entity#default_judgment.n.01, entity#judgment.n.03)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #kill.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #kill.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#kill.v.01)-->r]. Reasoning Result: neutralize.v.04.
Input: According to the WordNet knowledge graph, what is the relation between entity #apple_polisher.n.01 and entity #fawn.v.01? Output: According to the WordNet knowledge graph, the relation between entity #apple_polisher.n.01 and entity #fawn.v.01 is [GR(GL("wordnet"), "transe:relation", entity#apple_polisher.n.01, entity#fawn.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #pungency.n.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #pungency.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pungency.n.02, relation#_hypernym)-->r]. Reasoning Result: spiciness.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #trivium.n.01 and entity #humanistic_discipline.n.01? Output: According to the WordNet knowledge graph, the relation between entity #trivium.n.01 and entity #humanistic_discipline.n.01 is [GR(GL("wordnet"), "transe:relation", entity#trivium.n.01, entity#humanistic_discipline.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #lacewing.n.01 and entity #green_lacewing.n.01? Output: According to the WordNet knowledge graph, the relation between entity #lacewing.n.01 and entity #green_lacewing.n.01 is [GR(GL("wordnet"), "transe:relation", entity#lacewing.n.01, entity#green_lacewing.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #compliant.a.01 and entity #willing.a.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #compliant.a.01 and entity #willing.a.01 is [GR(GL("wordnet"), "transe:relation", entity#compliant.a.01, entity#willing.a.01)-->r]. Reasoning Result: _also_see.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity#telegraphy.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #telegraphy.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#telegraphy.n.01)-->r]. Reasoning Result: cable.v.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #guatemala.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #guatemala.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#guatemala.n.01)-->r]. Reasoning Result: central_american_country.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #starr.n.01 and entity #rock_star.n.01? Output: According to the WordNet knowledge graph, the relation between entity #starr.n.01 and entity #rock_star.n.01 is [GR(GL("wordnet"), "transe:relation", entity#starr.n.01, entity#rock_star.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#oriental.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #oriental.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#oriental.n.01)-->r]. Reasoning Result: mongol.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #varmint.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #varmint.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#varmint.n.02)-->r]. Reasoning Result: animal.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #diagonalize.v.01 and entity #diagonalization.n.01? Output: According to the WordNet knowledge graph, the relation between entity #diagonalize.v.01 and entity #diagonalization.n.01 is [GR(GL("wordnet"), "transe:relation", entity#diagonalize.v.01, entity#diagonalization.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #volatilize.v.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #volatilize.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#volatilize.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: volatile.a.01.
Input: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity#sacred_text.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hypernym, we can obtain entity #sacred_text.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hypernym, entity#sacred_text.n.01)-->r]. Reasoning Result: mishna.n.01.
Input: According to the WordNet knowledge graph, from entity #person.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #person.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#person.n.01, relation#_hyponym)-->r]. Reasoning Result: creator.n.02.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#fall_through.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #fall_through.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#fall_through.v.01)-->r]. Reasoning Result: fail.v.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #basra.n.01 and entity #port.n.01? Output: According to the WordNet knowledge graph, the relation between entity #basra.n.01 and entity #port.n.01 is [GR(GL("wordnet"), "transe:relation", entity#basra.n.01, entity#port.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#jaywalk.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #jaywalk.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#jaywalk.v.01)-->r]. Reasoning Result: traverse.v.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #melodious.a.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #melodious.a.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#melodious.a.02)-->r]. Reasoning Result: melody.n.02.
Input: According to the WordNet knowledge graph, what is the relation between entity #reptile_genus.n.01 and entity #bothrops.n.01? Output: According to the WordNet knowledge graph, the relation between entity #reptile_genus.n.01 and entity #bothrops.n.01 is [GR(GL("wordnet"), "transe:relation", entity#reptile_genus.n.01, entity#bothrops.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #united_states.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #united_states.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#united_states.n.01, relation#_has_part)-->r]. Reasoning Result: alaska.n.01.
Input: According to the WordNet knowledge graph, from entity #hirudinea.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #hirudinea.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#hirudinea.n.01, relation#_hypernym)-->r]. Reasoning Result: class.n.07.
Input: According to the WordNet knowledge graph, from entity #ambush.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #ambush.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ambush.n.01, relation#_hypernym)-->r]. Reasoning Result: surprise_attack.n.01.
Input: According to the WordNet knowledge graph, from entity #membrane.n.02, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #membrane.n.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#membrane.n.02, relation#_hyponym)-->r]. Reasoning Result: tunic.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#tarnish.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #tarnish.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#tarnish.n.01)-->r]. Reasoning Result: stain.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#anarchist.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #anarchist.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#anarchist.n.01)-->r]. Reasoning Result: anarchy.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#photograph.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #photograph.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#photograph.v.01)-->r]. Reasoning Result: record.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #short_pants.n.01 and entity #bermuda_shorts.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #short_pants.n.01 and entity #bermuda_shorts.n.01 is [GR(GL("wordnet"), "transe:relation", entity#short_pants.n.01, entity#bermuda_shorts.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #dicot_genus.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #dicot_genus.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#dicot_genus.n.01, relation#_hyponym)-->r]. Reasoning Result: ecballium.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #aid.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #aid.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#aid.n.02)-->r]. Reasoning Result: help.v.06.
Input: According to the WordNet knowledge graph, the relation between entity #dublin.n.01 and entity #national_capital.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #dublin.n.01 and entity #national_capital.n.01 is [GR(GL("wordnet"), "transe:relation", entity#dublin.n.01, entity#national_capital.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #injunction.n.01 and entity #order.v.01? Output: According to the WordNet knowledge graph, the relation between entity #injunction.n.01 and entity #order.v.01 is [GR(GL("wordnet"), "transe:relation", entity#injunction.n.01, entity#order.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #chlorophyta.n.01 and entity #charophyceae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #chlorophyta.n.01 and entity #charophyceae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#chlorophyta.n.01, entity#charophyceae.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, what is the relation between entity #stalk.n.03 and entity #stalk.v.03? Output: According to the WordNet knowledge graph, the relation between entity #stalk.n.03 and entity #stalk.v.03 is [GR(GL("wordnet"), "transe:relation", entity#stalk.n.03, entity#stalk.v.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #schinus.n.01, via relation #_member_holonym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #schinus.n.01, via relation #_member_holonym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#schinus.n.01, relation#_member_holonym)-->r]. Reasoning Result: anacardiaceae.n.01.
Input: According to the WordNet knowledge graph, from entity #use.v.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #use.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#use.v.01, relation#_hyponym)-->r]. Reasoning Result: share.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #slime.v.01 and entity #dirty.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #slime.v.01 and entity #dirty.v.01 is [GR(GL("wordnet"), "transe:relation", entity#slime.v.01, entity#dirty.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #hominoidea.n.01 and entity #anthropoidea.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #hominoidea.n.01 and entity #anthropoidea.n.01 is [GR(GL("wordnet"), "transe:relation", entity#hominoidea.n.01, entity#anthropoidea.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #hindrance.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #hindrance.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#hindrance.n.01, relation#_hyponym)-->r]. Reasoning Result: bind.n.01.
Input: According to the WordNet knowledge graph, from entity #edification.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #edification.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#edification.n.01, relation#_hyponym)-->r]. Reasoning Result: disenchantment.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #capture.v.02 and entity #captive.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #capture.v.02 and entity #captive.n.03 is [GR(GL("wordnet"), "transe:relation", entity#capture.v.02, entity#captive.n.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #zigadenus.n.01 and entity #liliid_monocot_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #zigadenus.n.01 and entity #liliid_monocot_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#zigadenus.n.01, entity#liliid_monocot_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #aid.n.02 and entity #activity.n.01? Output: According to the WordNet knowledge graph, the relation between entity #aid.n.02 and entity #activity.n.01 is [GR(GL("wordnet"), "transe:relation", entity#aid.n.02, entity#activity.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #free-reed_instrument.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #free-reed_instrument.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#free-reed_instrument.n.01)-->r]. Reasoning Result: wind_instrument.n.01.
Input: According to the WordNet knowledge graph, from entity #clearing.n.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #clearing.n.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#clearing.n.02, relation#_derivationally_related_form)-->r]. Reasoning Result: acquit.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #noise.n.01 and entity #rumble.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #noise.n.01 and entity #rumble.n.01 is [GR(GL("wordnet"), "transe:relation", entity#noise.n.01, entity#rumble.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #prefer.v.03, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #prefer.v.03, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#prefer.v.03, relation#_hypernym)-->r]. Reasoning Result: promote.v.02.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #cartagena.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #cartagena.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#cartagena.n.02)-->r]. Reasoning Result: city.n.01.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #handicraft.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #handicraft.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#handicraft.n.02)-->r]. Reasoning Result: hatch.v.03.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#affect.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #affect.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#affect.v.01)-->r]. Reasoning Result: change.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #charioteer.n.01 and entity #chariot.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #charioteer.n.01 and entity #chariot.v.01 is [GR(GL("wordnet"), "transe:relation", entity#charioteer.n.01, entity#chariot.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #make_up.v.09 and entity #groom.v.03? Output: According to the WordNet knowledge graph, the relation between entity #make_up.v.09 and entity #groom.v.03 is [GR(GL("wordnet"), "transe:relation", entity#make_up.v.09, entity#groom.v.03)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #rag.n.02 and entity #rag_day.n.01? Output: According to the WordNet knowledge graph, the relation between entity #rag.n.02 and entity #rag_day.n.01 is [GR(GL("wordnet"), "transe:relation", entity#rag.n.02, entity#rag_day.n.01)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, what is the relation between entity #fossil_fuel.n.01 and entity #fuel.n.01? Output: According to the WordNet knowledge graph, the relation between entity #fossil_fuel.n.01 and entity #fuel.n.01 is [GR(GL("wordnet"), "transe:relation", entity#fossil_fuel.n.01, entity#fuel.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#line.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #line.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#line.v.02)-->r]. Reasoning Result: lining.n.01.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #anabolism.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #anabolism.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#anabolism.n.01)-->r]. Reasoning Result: metabolism.n.02.
Input: According to the WordNet knowledge graph, from entity #shape.v.02, via relation #_verb_group, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #shape.v.02, via relation #_verb_group, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#shape.v.02, relation#_verb_group)-->r]. Reasoning Result: work.v.05.
Input: According to the WordNet knowledge graph, what is the relation between entity #ride.v.01 and entity #travel.v.01? Output: According to the WordNet knowledge graph, the relation between entity #ride.v.01 and entity #travel.v.01 is [GR(GL("wordnet"), "transe:relation", entity#ride.v.01, entity#travel.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #pinnipedia.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pinnipedia.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pinnipedia.n.01, relation#_member_meronym)-->r]. Reasoning Result: pinniped_mammal.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #pestle.v.01 and entity #grind.v.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #pestle.v.01 and entity #grind.v.05 is [GR(GL("wordnet"), "transe:relation", entity#pestle.v.01, entity#grind.v.05)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #selaginella.n.01 and entity #fern_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #selaginella.n.01 and entity #fern_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#selaginella.n.01, entity#fern_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #bend.v.02 and entity #turn.v.01? Output: According to the WordNet knowledge graph, the relation between entity #bend.v.02 and entity #turn.v.01 is [GR(GL("wordnet"), "transe:relation", entity#bend.v.02, entity#turn.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #melody.n.02 and entity #tuneful.a.01? Output: According to the WordNet knowledge graph, the relation between entity #melody.n.02 and entity #tuneful.a.01 is [GR(GL("wordnet"), "transe:relation", entity#melody.n.02, entity#tuneful.a.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#ladder.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #ladder.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#ladder.n.01)-->r]. Reasoning Result: sea_ladder.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #disorder.n.01 and entity #choking.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #disorder.n.01 and entity #choking.n.01 is [GR(GL("wordnet"), "transe:relation", entity#disorder.n.01, entity#choking.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #drill.v.04 and entity #exercise.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #drill.v.04 and entity #exercise.n.03 is [GR(GL("wordnet"), "transe:relation", entity#drill.v.04, entity#exercise.n.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #texture.n.01 and entity #smoothness.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #texture.n.01 and entity #smoothness.n.01 is [GR(GL("wordnet"), "transe:relation", entity#texture.n.01, entity#smoothness.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #fish_family.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #fish_family.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#fish_family.n.01, relation#_hyponym)-->r]. Reasoning Result: cynoglossidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#grouping.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #grouping.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#grouping.n.02)-->r]. Reasoning Result: pairing.n.02.
Input: According to the WordNet knowledge graph, from entity #pawn.v.01, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #pawn.v.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pawn.v.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: commerce.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #knot.n.02 and entity #slipknot.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #knot.n.02 and entity #slipknot.n.01 is [GR(GL("wordnet"), "transe:relation", entity#knot.n.02, entity#slipknot.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #pucker.n.01 and entity #gather.v.05 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #pucker.n.01 and entity #gather.v.05 is [GR(GL("wordnet"), "transe:relation", entity#pucker.n.01, entity#gather.v.05)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #effect.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #effect.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#effect.v.01, relation#_hyponym)-->r]. Reasoning Result: serve.v.03.
Input: According to the WordNet knowledge graph, from entity #group.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #group.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#group.n.01, relation#_hyponym)-->r]. Reasoning Result: association.n.08.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#room.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #room.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#room.n.02)-->r]. Reasoning Result: standing_room.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity#gallinago.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_holonym, we can obtain entity #gallinago.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_holonym, entity#gallinago.n.01)-->r]. Reasoning Result: whole_snipe.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #dead_nettle.n.02 and entity #herb.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #dead_nettle.n.02 and entity #herb.n.01 is [GR(GL("wordnet"), "transe:relation", entity#dead_nettle.n.02, entity#herb.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #communicator.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #communicator.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#communicator.n.01, relation#_hyponym)-->r]. Reasoning Result: sender.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #racetrack.n.01 and entity #course.n.09 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #racetrack.n.01 and entity #course.n.09 is [GR(GL("wordnet"), "transe:relation", entity#racetrack.n.01, entity#course.n.09)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #mozambique.n.01, via relation #_instance_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #mozambique.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#mozambique.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: african_country.n.01.
Input: According to the WordNet knowledge graph, from entity #city.n.01, via relation #_instance_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #city.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#city.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: taiyuan.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #clapper.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #clapper.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#clapper.n.01)-->r]. Reasoning Result: applaud.v.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #piano_keyboard.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #piano_keyboard.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#piano_keyboard.n.01)-->r]. Reasoning Result: keyboard.n.01.
Input: According to the WordNet knowledge graph, from entity #radon.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #radon.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#radon.n.01, relation#_hypernym)-->r]. Reasoning Result: noble_gas.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#amphibian_genus.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #amphibian_genus.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#amphibian_genus.n.01)-->r]. Reasoning Result: notophthalmus.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #swell.v.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #swell.v.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#swell.v.03)-->r]. Reasoning Result: swelling.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #naming.n.01 and entity #mention.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #naming.n.01 and entity #mention.v.01 is [GR(GL("wordnet"), "transe:relation", entity#naming.n.01, entity#mention.v.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, from entity #tampa.n.01, via relation #_instance_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #tampa.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#tampa.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: port_of_entry.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #quarter_mile.n.01 and entity #mile.n.01? Output: According to the WordNet knowledge graph, the relation between entity #quarter_mile.n.01 and entity #mile.n.01 is [GR(GL("wordnet"), "transe:relation", entity#quarter_mile.n.01, entity#mile.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, the relation between entity #table.n.02 and entity #leg.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #table.n.02 and entity #leg.n.03 is [GR(GL("wordnet"), "transe:relation", entity#table.n.02, entity#leg.n.03)-->r]. Reasoning Result: _has_part.
Input: According to the WordNet knowledge graph, from entity #france.n.01, via relation #_member_of_domain_region, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #france.n.01, via relation #_member_of_domain_region, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#france.n.01, relation#_member_of_domain_region)-->r]. Reasoning Result: battle_of_the_marne.n.01.
Input: According to the WordNet knowledge graph, from entity #happening.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #happening.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#happening.n.01, relation#_hyponym)-->r]. Reasoning Result: contact.n.04.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#turner.n.08 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #turner.n.08 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#turner.n.08)-->r]. Reasoning Result: cooking_utensil.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #arthropod_family.n.01 and entity #hippoboscidae.n.01? Output: According to the WordNet knowledge graph, the relation between entity #arthropod_family.n.01 and entity #hippoboscidae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#arthropod_family.n.01, entity#hippoboscidae.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #buy.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #buy.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#buy.v.01)-->r]. Reasoning Result: take.v.33.
Input: According to the WordNet knowledge graph, what is the relation between entity #eat.v.01 and entity #peck.v.02? Output: According to the WordNet knowledge graph, the relation between entity #eat.v.01 and entity #peck.v.02 is [GR(GL("wordnet"), "transe:relation", entity#eat.v.01, entity#peck.v.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#phyllostomidae.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #phyllostomidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#phyllostomidae.n.01)-->r]. Reasoning Result: mammal_family.n.01.
Input: According to the WordNet knowledge graph, from entity #ciconiiformes.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #ciconiiformes.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ciconiiformes.n.01, relation#_member_meronym)-->r]. Reasoning Result: ciconiidae.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#illness.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #illness.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#illness.n.01)-->r]. Reasoning Result: decompression_sickness.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#adult.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #adult.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#adult.n.01)-->r]. Reasoning Result: sophisticate.n.01.
Input: According to the WordNet knowledge graph, from entity #will.n.03, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #will.n.03, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#will.n.03, relation#_hyponym)-->r]. Reasoning Result: new_testament.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #photograph.n.01 and entity #mosaic.n.06 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #photograph.n.01 and entity #mosaic.n.06 is [GR(GL("wordnet"), "transe:relation", entity#photograph.n.01, entity#mosaic.n.06)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #adventure.n.01 and entity #adventurous.a.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #adventure.n.01 and entity #adventurous.a.01 is [GR(GL("wordnet"), "transe:relation", entity#adventure.n.01, entity#adventurous.a.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #strongylodon.n.01 and entity #papilionoideae.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #strongylodon.n.01 and entity #papilionoideae.n.01 is [GR(GL("wordnet"), "transe:relation", entity#strongylodon.n.01, entity#papilionoideae.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#indulgence.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #indulgence.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#indulgence.n.02)-->r]. Reasoning Result: permissiveness.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#prop_up.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #prop_up.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#prop_up.v.01)-->r]. Reasoning Result: hold.v.10.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #undertone.n.03 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #undertone.n.03 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#undertone.n.03)-->r]. Reasoning Result: tint.v.01.
Input: According to the WordNet knowledge graph, from entity #methane_series.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #methane_series.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#methane_series.n.01, relation#_hyponym)-->r]. Reasoning Result: hexane.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #counterbalance.n.03 and entity #counteract.v.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #counterbalance.n.03 and entity #counteract.v.03 is [GR(GL("wordnet"), "transe:relation", entity#counterbalance.n.03, entity#counteract.v.03)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #custard_apple.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #custard_apple.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#custard_apple.n.02)-->r]. Reasoning Result: bullock's_heart.n.02.
Input: According to the WordNet knowledge graph, from entity #eat.v.02, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #eat.v.02, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#eat.v.02, relation#_hyponym)-->r]. Reasoning Result: gorge.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #agitation.n.01 and entity #dither.n.01? Output: According to the WordNet knowledge graph, the relation between entity #agitation.n.01 and entity #dither.n.01 is [GR(GL("wordnet"), "transe:relation", entity#agitation.n.01, entity#dither.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #zoology.n.02, via relation #_member_of_domain_topic, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #zoology.n.02, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#zoology.n.02, relation#_member_of_domain_topic)-->r]. Reasoning Result: protective_coloration.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #put.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #put.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#put.v.01)-->r]. Reasoning Result: rotary_actuator.n.01.
Input: According to the WordNet knowledge graph, from entity #rear.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #rear.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#rear.n.01, relation#_hypernym)-->r]. Reasoning Result: formation.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #spiny-finned_fish.n.01 and entity #goosefish.n.01? Output: According to the WordNet knowledge graph, the relation between entity #spiny-finned_fish.n.01 and entity #goosefish.n.01 is [GR(GL("wordnet"), "transe:relation", entity#spiny-finned_fish.n.01, entity#goosefish.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #delegate.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #delegate.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#delegate.v.02)-->r]. Reasoning Result: place.v.02.
Input: According to the WordNet knowledge graph, from entity #philosopher.n.01, via relation #_instance_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #philosopher.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#philosopher.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: machiavelli.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #goose_barnacle.n.01 and entity #barnacle.n.01? Output: According to the WordNet knowledge graph, the relation between entity #goose_barnacle.n.01 and entity #barnacle.n.01 is [GR(GL("wordnet"), "transe:relation", entity#goose_barnacle.n.01, entity#barnacle.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, the relation between entity #descend.v.01 and entity #pounce.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #descend.v.01 and entity #pounce.v.01 is [GR(GL("wordnet"), "transe:relation", entity#descend.v.01, entity#pounce.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #girl.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #girl.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#girl.n.01)-->r]. Reasoning Result: gibson_girl.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #rubiaceae.n.01 and entity #calycophyllum.n.01? Output: According to the WordNet knowledge graph, the relation between entity #rubiaceae.n.01 and entity #calycophyllum.n.01 is [GR(GL("wordnet"), "transe:relation", entity#rubiaceae.n.01, entity#calycophyllum.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #extort.v.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #extort.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#extort.v.01, relation#_hyponym)-->r]. Reasoning Result: blackmail.v.02.
Input: According to the WordNet knowledge graph, from entity #istanbul.n.01, via relation #_has_part, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #istanbul.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#istanbul.n.01, relation#_has_part)-->r]. Reasoning Result: chalcedon.n.01.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #gasteromycetes.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #gasteromycetes.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#gasteromycetes.n.01)-->r]. Reasoning Result: basidiomycota.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#testis.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #testis.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#testis.n.01)-->r]. Reasoning Result: male_reproductive_gland.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #certification.n.01 and entity #certify.v.04 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #certification.n.01 and entity #certify.v.04 is [GR(GL("wordnet"), "transe:relation", entity#certification.n.01, entity#certify.v.04)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #phylloxeridae.n.01 and entity #phylloxera.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #phylloxeridae.n.01 and entity #phylloxera.n.01 is [GR(GL("wordnet"), "transe:relation", entity#phylloxeridae.n.01, entity#phylloxera.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity#new_zealand.n.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_instance_hyponym, we can obtain entity #new_zealand.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_instance_hyponym, entity#new_zealand.n.02)-->r]. Reasoning Result: island.n.01.
Input: According to the WordNet knowledge graph, from entity #professional.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #professional.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#professional.n.01, relation#_hyponym)-->r]. Reasoning Result: practitioner.n.01.
Input: According to the WordNet knowledge graph, from entity #aircraft_carrier.n.01, via relation #_has_part, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #aircraft_carrier.n.01, via relation #_has_part, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#aircraft_carrier.n.01, relation#_has_part)-->r]. Reasoning Result: arrester.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity#bat_mitzvah.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #bat_mitzvah.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#bat_mitzvah.n.01)-->r]. Reasoning Result: initiation.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #profit.v.01 and entity #benefit.n.02? Output: According to the WordNet knowledge graph, the relation between entity #profit.v.01 and entity #benefit.n.02 is [GR(GL("wordnet"), "transe:relation", entity#profit.v.01, entity#benefit.n.02)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #testudinidae.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_member_meronym, we can obtain entity #testudinidae.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_meronym, entity#testudinidae.n.01)-->r]. Reasoning Result: chelonia.n.02.
Input: According to the WordNet knowledge graph, from entity #representation.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #representation.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#representation.n.01, relation#_hyponym)-->r]. Reasoning Result: concretism.n.01.
Input: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #physics.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_synset_domain_topic_of, we can obtain entity #physics.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_synset_domain_topic_of, entity#physics.n.01)-->r]. Reasoning Result: conservation.n.03.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#theatrical_performance.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #theatrical_performance.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#theatrical_performance.n.01)-->r]. Reasoning Result: stage.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #pharyngeal_tonsil.n.01 and entity #throat.n.01? Output: According to the WordNet knowledge graph, the relation between entity #pharyngeal_tonsil.n.01 and entity #throat.n.01 is [GR(GL("wordnet"), "transe:relation", entity#pharyngeal_tonsil.n.01, entity#throat.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #rock_bass.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #rock_bass.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#rock_bass.n.02)-->r]. Reasoning Result: sunfish.n.03.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #drill.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #drill.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#drill.n.01)-->r]. Reasoning Result: bore_bit.n.01.
Input: According to the WordNet knowledge graph, from entity #political_arena.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #political_arena.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#political_arena.n.01, relation#_hypernym)-->r]. Reasoning Result: sphere.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #west_coast.n.01 and entity #west.n.03 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #west_coast.n.01 and entity #west.n.03 is [GR(GL("wordnet"), "transe:relation", entity#west_coast.n.01, entity#west.n.03)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, from entity #martes.n.01, via relation #_member_meronym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #martes.n.01, via relation #_member_meronym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#martes.n.01, relation#_member_meronym)-->r]. Reasoning Result: marten.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #facial_hair.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #facial_hair.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#facial_hair.n.01)-->r]. Reasoning Result: hair.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #investigate.v.01 and entity #experiment.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #investigate.v.01 and entity #experiment.v.01 is [GR(GL("wordnet"), "transe:relation", entity#investigate.v.01, entity#experiment.v.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #sculpture.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #sculpture.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#sculpture.n.02)-->r]. Reasoning Result: fine_arts.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#perceive.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #perceive.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#perceive.v.01)-->r]. Reasoning Result: comprehension.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#abetment.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #abetment.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#abetment.n.01)-->r]. Reasoning Result: prompt.v.02.
Input: According to the WordNet knowledge graph, from entity #judaism.n.02, via relation #_member_of_domain_topic, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #judaism.n.02, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#judaism.n.02, relation#_member_of_domain_topic)-->r]. Reasoning Result: challah.n.01.
Input: According to the WordNet knowledge graph, from entity #imagine.v.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #imagine.v.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#imagine.v.01, relation#_hyponym)-->r]. Reasoning Result: dream.v.01.
Input: According to the WordNet knowledge graph, from entity #stimulation.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #stimulation.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#stimulation.n.01, relation#_hypernym)-->r]. Reasoning Result: arousal.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #antenna.n.01 and entity #antennal.a.01? Output: According to the WordNet knowledge graph, the relation between entity #antenna.n.01 and entity #antennal.a.01 is [GR(GL("wordnet"), "transe:relation", entity#antenna.n.01, entity#antennal.a.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #mound.n.04 and entity #burial_mound.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #mound.n.04 and entity #burial_mound.n.01 is [GR(GL("wordnet"), "transe:relation", entity#mound.n.04, entity#burial_mound.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#conifer.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #conifer.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#conifer.n.01)-->r]. Reasoning Result: matai.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #bench.n.01 and entity #seat.n.03? Output: According to the WordNet knowledge graph, the relation between entity #bench.n.01 and entity #seat.n.03 is [GR(GL("wordnet"), "transe:relation", entity#bench.n.01, entity#seat.n.03)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #sink.v.04, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sink.v.04, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sink.v.04, relation#_hyponym)-->r]. Reasoning Result: subside.v.03.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#scarabaeid_beetle.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #scarabaeid_beetle.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#scarabaeid_beetle.n.01)-->r]. Reasoning Result: japanese_beetle.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #asian.n.01 and entity #armenian.n.01? Output: According to the WordNet knowledge graph, the relation between entity #asian.n.01 and entity #armenian.n.01 is [GR(GL("wordnet"), "transe:relation", entity#asian.n.01, entity#armenian.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #appendix.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #appendix.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#appendix.n.02)-->r]. Reasoning Result: cecum.n.01.
Input: According to the WordNet knowledge graph, from entity #pudding.n.03, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #pudding.n.03, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#pudding.n.03, relation#_hyponym)-->r]. Reasoning Result: suet_pudding.n.01.
Input: According to the WordNet knowledge graph, from entity #slope.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #slope.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#slope.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: pitch.n.05.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#decrease.v.02 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #decrease.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#decrease.v.02)-->r]. Reasoning Result: reduce.v.18.
Input: According to the WordNet knowledge graph, from entity #disregard.n.02, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #disregard.n.02, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#disregard.n.02, relation#_hypernym)-->r]. Reasoning Result: mistreatment.n.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #change_of_shape.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #change_of_shape.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#change_of_shape.n.01)-->r]. Reasoning Result: involution.n.06.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #shelve.v.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #shelve.v.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#shelve.v.02)-->r]. Reasoning Result: shelver.n.01.
Input: According to the WordNet knowledge graph, from entity #film_maker.n.01, via relation #_instance_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #film_maker.n.01, via relation #_instance_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#film_maker.n.01, relation#_instance_hyponym)-->r]. Reasoning Result: mayer.n.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#animal_foot.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #animal_foot.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#animal_foot.n.01)-->r]. Reasoning Result: paw.n.01.
Input: According to the WordNet knowledge graph, from entity #shake.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #shake.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#shake.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: wag.n.02.
Input: According to the WordNet knowledge graph, the relation between entity #gliridae.n.01 and entity #mammal_family.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #gliridae.n.01 and entity #mammal_family.n.01 is [GR(GL("wordnet"), "transe:relation", entity#gliridae.n.01, entity#mammal_family.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #whale_sucker.n.01 and entity #remilegia.n.01? Output: According to the WordNet knowledge graph, the relation between entity #whale_sucker.n.01 and entity #remilegia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#whale_sucker.n.01, entity#remilegia.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, from entity #addiction.n.01, via relation #_hyponym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #addiction.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#addiction.n.01, relation#_hyponym)-->r]. Reasoning Result: drug_addiction.n.01.
Input: According to the WordNet knowledge graph, from entity #unmanly.a.01, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #unmanly.a.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#unmanly.a.01, relation#_derivationally_related_form)-->r]. Reasoning Result: effeminacy.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #kordofan.n.01 and entity #sudan.n.01? Output: According to the WordNet knowledge graph, the relation between entity #kordofan.n.01 and entity #sudan.n.01 is [GR(GL("wordnet"), "transe:relation", entity#kordofan.n.01, entity#sudan.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, what is the relation between entity #astacidae.n.01 and entity #cambarus.n.01? Output: According to the WordNet knowledge graph, the relation between entity #astacidae.n.01 and entity #cambarus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#astacidae.n.01, entity#cambarus.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, what is the relation between entity #state.n.01 and entity #bosnia.n.01? Output: According to the WordNet knowledge graph, the relation between entity #state.n.01 and entity #bosnia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#state.n.01, entity#bosnia.n.01)-->r]. Reasoning Result: _instance_hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #building_material.n.01 and entity #building_block.n.02 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #building_material.n.01 and entity #building_block.n.02 is [GR(GL("wordnet"), "transe:relation", entity#building_material.n.01, entity#building_block.n.02)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #calixtus_iii.n.01, via relation #_instance_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #calixtus_iii.n.01, via relation #_instance_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#calixtus_iii.n.01, relation#_instance_hypernym)-->r]. Reasoning Result: pope.n.01.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cantilever_bridge.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #cantilever_bridge.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#cantilever_bridge.n.01)-->r]. Reasoning Result: bridge.n.01.
Input: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #compliant.a.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_also_see, we can obtain entity #compliant.a.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_also_see, entity#compliant.a.01)-->r]. Reasoning Result: tractable.a.01.
Input: According to the WordNet knowledge graph, from entity #ratchet.v.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #ratchet.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#ratchet.v.01, relation#_hypernym)-->r]. Reasoning Result: advance.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #wax_myrtle.n.01 and entity #shrub.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #wax_myrtle.n.01 and entity #shrub.n.01 is [GR(GL("wordnet"), "transe:relation", entity#wax_myrtle.n.01, entity#shrub.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, from entity #kick.v.07, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #kick.v.07, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#kick.v.07, relation#_synset_domain_topic_of)-->r]. Reasoning Result: football.n.01.
Input: According to the WordNet knowledge graph, from entity #passer.n.03, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #passer.n.03, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#passer.n.03, relation#_derivationally_related_form)-->r]. Reasoning Result: pass.v.14.
Input: According to the WordNet knowledge graph, what is the relation between entity #fuel.v.02 and entity #supply.v.01? Output: According to the WordNet knowledge graph, the relation between entity #fuel.v.02 and entity #supply.v.01 is [GR(GL("wordnet"), "transe:relation", entity#fuel.v.02, entity#supply.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #george.n.03 and entity #king_of_england.n.01? Output: According to the WordNet knowledge graph, the relation between entity #george.n.03 and entity #king_of_england.n.01 is [GR(GL("wordnet"), "transe:relation", entity#george.n.03, entity#king_of_england.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #dryopteridaceae.n.01 and entity #athyrium.n.01? Output: According to the WordNet knowledge graph, the relation between entity #dryopteridaceae.n.01 and entity #athyrium.n.01 is [GR(GL("wordnet"), "transe:relation", entity#dryopteridaceae.n.01, entity#athyrium.n.01)-->r]. Reasoning Result: _member_meronym.
Input: According to the WordNet knowledge graph, from entity #kick.n.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #kick.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#kick.n.01, relation#_hypernym)-->r]. Reasoning Result: blow.n.01.
Input: According to the WordNet knowledge graph, from entity #roughcast.v.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #roughcast.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#roughcast.v.01, relation#_hypernym)-->r]. Reasoning Result: shape.v.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#be.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #be.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#be.v.01)-->r]. Reasoning Result: swing.v.10.
Input: According to the WordNet knowledge graph, via relation #_member_of_domain_region, we can obtain entity#sandboy.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_member_of_domain_region, we can obtain entity #sandboy.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_member_of_domain_region, entity#sandboy.n.01)-->r]. Reasoning Result: united_kingdom.n.01.
Input: According to the WordNet knowledge graph, the relation between entity #jordan.n.02 and entity #arab_league.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #jordan.n.02 and entity #arab_league.n.01 is [GR(GL("wordnet"), "transe:relation", entity#jordan.n.02, entity#arab_league.n.01)-->r]. Reasoning Result: _member_holonym.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #chew.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #chew.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#chew.v.01)-->r]. Reasoning Result: chomp.v.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #brave.a.01 and entity #courage.n.01? Output: According to the WordNet knowledge graph, the relation between entity #brave.a.01 and entity #courage.n.01 is [GR(GL("wordnet"), "transe:relation", entity#brave.a.01, entity#courage.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, the relation between entity #occupancy.n.01 and entity #tenant.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #occupancy.n.01 and entity #tenant.n.01 is [GR(GL("wordnet"), "transe:relation", entity#occupancy.n.01, entity#tenant.n.01)-->r]. Reasoning Result: _derivationally_related_form.
Input: According to the WordNet knowledge graph, what is the relation between entity #arachnid.n.01 and entity #harvestman.n.01? Output: According to the WordNet knowledge graph, the relation between entity #arachnid.n.01 and entity #harvestman.n.01 is [GR(GL("wordnet"), "transe:relation", entity#arachnid.n.01, entity#harvestman.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#academy.n.04 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #academy.n.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#academy.n.04)-->r]. Reasoning Result: academician.n.02.
Input: According to the WordNet knowledge graph, from entity #sun.v.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #sun.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#sun.v.01, relation#_hypernym)-->r]. Reasoning Result: lie.v.02.
Input: According to the WordNet knowledge graph, the relation between entity #polynesia.n.01 and entity #austronesia.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #polynesia.n.01 and entity #austronesia.n.01 is [GR(GL("wordnet"), "transe:relation", entity#polynesia.n.01, entity#austronesia.n.01)-->r]. Reasoning Result: _part_of.
Input: According to the WordNet knowledge graph, from entity #shorten.v.01, via relation #_hypernym, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #shorten.v.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#shorten.v.01, relation#_hypernym)-->r]. Reasoning Result: reduce.v.01.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #include.v.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #include.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#include.v.01)-->r]. Reasoning Result: embrace.v.01.
Input: According to the WordNet knowledge graph, the relation between entity #robinia.n.01 and entity #rosid_dicot_genus.n.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #robinia.n.01 and entity #rosid_dicot_genus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#robinia.n.01, entity#rosid_dicot_genus.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #pistol.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_hyponym, we can obtain entity #pistol.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hyponym, entity#pistol.n.01)-->r]. Reasoning Result: firearm.n.01.
Input: According to the WordNet knowledge graph, from entity #oxyura.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #oxyura.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#oxyura.n.01, relation#_hypernym)-->r]. Reasoning Result: bird_genus.n.01.
Input: According to the WordNet knowledge graph, from entity #manage.v.02, via relation #_derivationally_related_form, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #manage.v.02, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#manage.v.02, relation#_derivationally_related_form)-->r]. Reasoning Result: manageable.a.01.
Input: According to the WordNet knowledge graph, from entity #duct.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #duct.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#duct.n.01, relation#_hyponym)-->r]. Reasoning Result: lactiferous_duct.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #reptile_genus.n.01 and entity #titanosaurus.n.01? Output: According to the WordNet knowledge graph, the relation between entity #reptile_genus.n.01 and entity #titanosaurus.n.01 is [GR(GL("wordnet"), "transe:relation", entity#reptile_genus.n.01, entity#titanosaurus.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, the relation between entity #arterialize.v.01 and entity #change.v.01 is [TBR]. Output: According to the WordNet knowledge graph, the relation between entity #arterialize.v.01 and entity #change.v.01 is [GR(GL("wordnet"), "transe:relation", entity#arterialize.v.01, entity#change.v.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#wet.v.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #wet.v.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#wet.v.01)-->r]. Reasoning Result: moisture.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #walk.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #walk.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#walk.n.01)-->r]. Reasoning Result: walk.v.10.
Input: According to the WordNet knowledge graph, from entity #law.n.01, via relation #_member_of_domain_topic, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #law.n.01, via relation #_member_of_domain_topic, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#law.n.01, relation#_member_of_domain_topic)-->r]. Reasoning Result: statute_book.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #draft.n.11 and entity #pull.n.01? Output: According to the WordNet knowledge graph, the relation between entity #draft.n.11 and entity #pull.n.01 is [GR(GL("wordnet"), "transe:relation", entity#draft.n.11, entity#pull.n.01)-->r]. Reasoning Result: _hypernym.
Input: According to the WordNet knowledge graph, what is the relation between entity #roosevelt.n.02 and entity #diplomat.n.01? Output: According to the WordNet knowledge graph, the relation between entity #roosevelt.n.02 and entity #diplomat.n.01 is [GR(GL("wordnet"), "transe:relation", entity#roosevelt.n.02, entity#diplomat.n.01)-->r]. Reasoning Result: _instance_hypernym.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #lemonwood.n.01 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #lemonwood.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#lemonwood.n.01)-->r]. Reasoning Result: lemonwood.n.02.
Input: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #beet.n.02 from entity #[TBR]. Output: According to the WordNet knowledge graph, via relation #_has_part, we can obtain entity #beet.n.02 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_has_part, entity#beet.n.02)-->r]. Reasoning Result: beetroot.n.01.
Input: According to the WordNet knowledge graph, from entity #foliation.n.01, via relation #_synset_domain_topic_of, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #foliation.n.01, via relation #_synset_domain_topic_of, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#foliation.n.01, relation#_synset_domain_topic_of)-->r]. Reasoning Result: botany.n.02.
Input: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity#housing.n.01 from what entity? Output: According to the WordNet knowledge graph, via relation #_hypernym, we can obtain entity #housing.n.01 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_hypernym, entity#housing.n.01)-->r]. Reasoning Result: dwelling.n.01.
Input: According to the WordNet knowledge graph, what is the relation between entity #action.n.07 and entity #piano_action.n.01? Output: According to the WordNet knowledge graph, the relation between entity #action.n.07 and entity #piano_action.n.01 is [GR(GL("wordnet"), "transe:relation", entity#action.n.07, entity#piano_action.n.01)-->r]. Reasoning Result: _hyponym.
Input: According to the WordNet knowledge graph, from entity #stropharia.n.01, via relation #_hypernym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #stropharia.n.01, via relation #_hypernym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#stropharia.n.01, relation#_hypernym)-->r]. Reasoning Result: fungus_genus.n.01.
Input: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity#discord.n.04 from what entity? Output: According to the WordNet knowledge graph, via relation #_derivationally_related_form, we can obtain entity #discord.n.04 from entity [GR(GL("wordnet"), "transe:head_entity", relation#_derivationally_related_form, entity#discord.n.04)-->r]. Reasoning Result: disagree.v.02.
Input: According to the WordNet knowledge graph, from entity #relation.n.01, via relation #_hyponym, what entity can we derive? Output: According to the WordNet knowledge graph, from entity #relation.n.01, via relation #_hyponym, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#relation.n.01, relation#_hyponym)-->r]. Reasoning Result: position.n.07.
Input: According to the WordNet knowledge graph, from entity #lag.v.01, via relation #_derivationally_related_form, we can derive entity #[TBR]. Output: According to the WordNet knowledge graph, from entity #lag.v.01, via relation #_derivationally_related_form, we can derive entity [GR(GL("wordnet"), "transe:tail_entity", entity#lag.v.01, relation#_derivationally_related_form)-->r]. Reasoning Result: slowdown.n.01.
